{"version":3,"sources":["assets/figures/Loader.tsx","components/login/Input/Input.styled.ts","components/login/Input/Input.tsx","components/login/Input/index.ts","../node_modules/downloadjs/download.js","../node_modules/lodash.debounce/index.js","assets/figures/TimeOut.tsx","components/popups/timedOut/TimedOut.styled.ts","components/popups/timedOut/TimedOut.tsx","utils/localization.ts","components/sections/SectionContent/SectionContent.styled.ts","components/sections/SectionsList/SectionsList.styled.ts","components/sections/SectionLearningObjective/SectionLearningObjective.styled.ts","components/sections/SectionLearningObjective/SectionLearningObjective.tsx","utils/image.ts","components/sections/SectionImage/SectionImage.styled.ts","components/sections/SectionImage/SectionImage.tsx","components/sections/SectionContent/SectionContent.tsx","components/sections/SectionsList/SectionsList.tsx","components/sections/CourseInformation/CourseInformation.styled.ts","components/sections/CourseInformation/CourseInformation.tsx","components/sections/QuestionPool/QuestionPool.styled.ts","components/sections/QuestionPool/QuestionPoolOptionItem.tsx","components/sections/QuestionPool/QuestionPool.tsx","pages/course/sections/SectionsPage.styled.ts","pages/course/sections/SectionsPage.tsx","../node_modules/react-router-dom/es/Switch.js","components/submitOnce/SubmitOnceButton.styled.ts","components/submitOnce/SubmitOnceButton.tsx","components/remainingAttemptsBlock/RemainingAttemptsBlock.styled.ts","components/remainingAttemptsBlock/RemainingAttemptsBlock.tsx","components/treeOfContent/ResultsBlock/ResultsBlock.styled.ts","components/treeOfContent/ResultsBlock/ResultsBlock.tsx","components/treeOfContent/Header/Header.styled.ts","components/treeOfContent/Header/Header.tsx","components/treeOfContent/QuestionTreeNode/QuestionTreeNode.styled.ts","components/treeOfContent/QuestionTreeNode/QuestionTreeNode.tsx","components/treeOfContent/QuestionTreeNode/QuestionTreeNodeSubmitOnce.tsx","components/treeOfContent/ExpandedTocItems/ExpandedTocItems.tsx","components/common/ProgressPopover/ProgressPopover.styled.ts","components/common/ProgressPopover/ProgressPopover.tsx","components/treeOfContent/SectionTreeNode/SectionTreeNode.styled.ts","components/treeOfContent/SectionTreeNode/SectionTreeNode.tsx","components/treeOfContent/LearningObjectiveTreeNode/LearningObjectiveTreeNode.styled.ts","components/treeOfContent/LearningObjectiveTreeNode/LearningObjectiveTreeNode.tsx","components/treeOfContent/ExpandedTocPoolSection/ExpandedTocPoolSection.tsx","components/treeOfContent/ExpandedToc/ExpandedToc.styled.ts","components/treeOfContent/ExpandedToc/ExpandedToc.tsx","components/treeOfContent/NavigationItem/NavigationItem.styled.ts","components/treeOfContent/NavigationBlock/NavigationBlock.styled.ts","components/treeOfContent/NavigationBlock/NavigationBlock.tsx","components/treeOfContent/NavigationItem/NavigationItem.tsx","components/treeOfContent/CollapsedTocPoolSection/CollapsedTocPoolSection.tsx","components/treeOfContent/CollapsedToc/CollapsedToc.styled.ts","components/treeOfContent/CollapsedToc/CollapsedToc.tsx","components/treeOfContent/TreeOfContent.styled.ts","components/treeOfContent/TreeOfContent.tsx","pages/course/learningObjective/LearningObjective.styled.ts","components/hocs/withFallbackToNotFound.tsx","pages/course/learningObjective/LearningObjective.tsx","assets/figures/Rocket.tsx","assets/figures/SadResult.tsx","components/popups/startNewAttempt/StartNewAttempt.styled.ts","components/popups/startNewAttempt/StartNewAttempt.tsx","components/common/CourseProgressResult/CourseProgressResult.styled.ts","components/common/CourseProgressResult/Figure.styled.ts","components/common/CourseProgressResult/CoursePassedBackground.tsx","components/common/CourseProgressResult/CourseFailedBackground.tsx","components/common/CourseProgressResult/CourseProgressResult.tsx","core/documentLoaders/fileLoader.ts","core/documentLoaders/certificateLoader.ts","components/common/courseAfterword/courseAfterword.styled.ts","components/common/courseAfterword/courseAfterword.tsx","pages/course/results/ResultsPage.styled.ts","pages/course/results/ResultsPage.tsx","pages/course/courseOverview/CourseOverview.styled.ts","pages/course/courseOverview/RouteTransition.tsx","store/questions/multipleChoice/actions.ts","components/questions/MultipleChoice/MultipleChoice.tsx","components/questions/SingleChoiceImage/SingleChoiceImage.tsx","components/questions/Question.styled.ts","store/questions/statementChoice/actions.ts","components/questions/Statement/Switch/Switch.styled.ts","components/questions/Statement/Switch/Switch.tsx","components/common/helpers/AuxWrapper.ts","components/questions/Statement/Option/Option.styled.ts","components/questions/Statement/Option/Option.tsx","components/questions/Statement/MobileAnswerSeparator.tsx","components/questions/Statement/Statement.styled.ts","components/questions/Statement/Statement.tsx","store/questions/openQuestion/actions.ts","components/questions/OpenQuestion/OpenQuestion.styled.ts","components/questions/OpenQuestion/OpenQuestion.tsx","store/questions/rankingText/actions.ts","components/questions/RankingText/RankingText.tsx","store/questions/scenario/actions.ts","components/questions/Scenario/BranchTrackProvider/branchtrackProviderPlugin.ts","components/questions/Scenario/Scenario.styled.ts","components/questions/Scenario/Scenario.tsx","store/questions/fillInTheBlank/actions.ts","components/questions/FillInTheBlank/FillInTheBlank.styled.ts","components/questions/FillInTheBlank/FillInTheBlank.tsx","core/http/imageLoader.ts","store/questions/dragAndDropText/actions.ts","components/questions/DragAndDropText/DragAndDropText.styles.ts","components/questions/DragAndDropText/DragAndDropMobile.tsx","components/questions/DragAndDropText/DragAndDropText.tsx","store/questions/textMatching/actions.ts","components/questions/TextMatching/TextMatching.styled.ts","components/questions/TextMatching/TextMatching.tsx","store/questions/hotspot/actions.ts","components/questions/Hotspot/Hotspot.styled.ts","components/questions/Hotspot/Hotspot.tsx","components/questions/Question.tsx","components/question/PageCounter/PageCounter.tsx","components/question/PoolCounter/PoolCounter.styled.ts","components/question/PoolCounter/PoolCounter.tsx","components/common/helpers/containerComponentCreator.ts","components/contents/ContentBlock/ContentBlock.styled.ts","components/contents/ContentBlock/ContentBlock.tsx","components/question/Feedback/Feedback.tsx","components/question/Hint/Hint.styled.ts","components/question/Hint/Hint.tsx","components/question/VoiceOver/VoiceOver.styled.ts","components/question/VoiceOver/VoiceOver.tsx","utils/dom.ts","pages/course/question/actionsBlock/ActionsBlock.styled.ts","pages/course/question/actionsBlock/ActionsBlock.tsx","pages/course/question/QuestionPage.styled.ts","pages/course/question/QuestionPage.tsx","pages/course/question/actionsBlock/ActionsBlockSubmitOnce.tsx","pages/course/question/QuestionPageSubmitOnce.tsx","pages/course/courseLayout/defaultLayout/DefaultLayout.tsx","pages/course/courseLayout/singlePageLayout/OnePageCourse.styled.ts","pages/course/courseLayout/singlePageLayout/OnePageCourse.tsx","pages/course/courseLayout/CourseLayout.tsx","pages/course/courseOverview/CourseOverview.tsx","components/login/AuthForm/AuthForm.styled.ts","components/login/AuthForm/AuthForm.tsx","components/login/AuthForm/EmailInput.tsx","components/login/AuthForm/NameInput.tsx","components/login/AuthForm/PasswordInput.tsx","components/login/SignUpForm/SignUpForm.styled.ts","components/login/LoginForm/LoginForm.styled.ts","components/login/LoginForm/LoginForm.tsx","components/login/SocialLogin/SocialLogin.styled.ts","components/login/SocialLogin/SocialLogin.tsx","../node_modules/react-router-dom/es/Link.js","components/login/SwitcherForm/SwitcherForm.styled.ts","components/login/SwitcherForm/SwitcherForm.tsx","components/login/MobileFooter/MobileFooter.styled.ts","components/login/MobileFooter/MobileFooter.tsx","components/login/LearnerAgreements/LearnerAgreements.styled.tsx","components/login/LearnerAgreements/LearnerAgreements.tsx","pages/auth/auth.styled.ts","pages/login/LoginPage.styled.ts","pages/login/LoginPage.tsx","components/login/SignUpForm/SignUpForm.tsx","pages/signUp/SignUpPage.styled.ts","pages/signUp/SignUpPage.tsx","assets/figures/StartOver.tsx","components/popups/startOver/StartOver.styled.ts","components/popups/startOver/StartOver.tsx","components/errorBoundary/ErrorBoundary.tsx","pages/course/Course.tsx"],"names":["withTheme","props","width","version","id","xmlns","x","y","viewBox","enableBackground","arialabel","localize","fill","transparentize","theme","colors","mainColor","d","attributeName","attributeType","type","dur","from","to","repeatCount","InputElement","styled","input","attrs","name","placeholder","tabIndex","onInvalid","autoComplete","pattern","required","secondaryFont","textColor","contentBodyColor","media","mobile","isBlur","css","incorrectColor","bounce","correctColor","validationStatusBeforeSubmit","InputLabel","label","transition","ValidIcon","Icon","LoadWrapper","div","ValidationMessageBlock","TextError","Text","EyeIcon","role","ariaLabel","buttonDefaultStyle","InputContainer","isUserExist","Input","validationPassword","event","onChange","isSpaceInPass","test","target","value","isPatternPass","RegExp","setState","startInputPass","showErrorText","state","validValue","hasValue","showPassword","showPassValidationBlock","isLoaded","this","defaultValue","onBlur","classList","remove","validity","typeMismatch","patternMismatch","length","INPUT_TYPE","EMAIL","TEXT","PASSWORD","idInput","labelText","loadIcon","validIcon","textError","refInput","showValidationMessage","onFocus","ref","setTypePassword","className","onBlurValidationInput","onInputFocus","htmlFor","size","data-test","onClick","showHidePassword","onKeyDown","KEYS","ENTER","toLowerCase","SPACEBAR","includes","key","preventDefault","React","defaultProps","define","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","call","bind","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","response","setTimeout","send","navigator","msSaveBlob","dataUrlToBlob","saver","i","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","binData","atob","decodeURIComponent","uiArr","winMode","setAttribute","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","encodeURIComponent","FileReader","result","readAsDataURL","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","root","Function","objectToString","prototype","nativeMax","Math","max","nativeMin","min","now","Date","isObject","toNumber","isObjectLike","isSymbol","other","valueOf","isBinary","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","arguments","cancel","clearTimeout","flush","height","SVG_XML_NAMESPACE","filterUnits","in","fillRule","transform","filter","opacity","cx","cy","rx","ry","r","xlinkHref","fillOpacity","TimedOutWrapper","section","TitleElement","h1","secondaryFontH1","DescriptionWrapper","p","secondaryFontSmallText","xlarge","ButtonElement","Button","updateUnAnsweredQuestions","submitAllQuestionsEnabled","unansweredQuestions","tocActions","courseStructure","mappedCourseActions","submitAllAnswerOnce","sections","courseTimeOutEmitter","withRouter","withNavigation","connect","shouldSubmitAllQuestions","getCourseStructure","getUnansweredQuestions","dispatch","timerActions","bindActionCreators","courseTimerActions","treeOfContentActions","courseActions","closePopup","navigateToUrl","CssAnimation","AnimationType","fadeInDown","layout","BUTTON","LAYOUT","PRIMARY","async","setTimerStatus","TimerStatus","STOPPED","RESULTS_PATH","verbsObject","ProgressStatus","PASSED","FAILED","IN_PROGRESS","getProgressStatusLocalizationKey","status","ProgressBar","ProgressComponent","SectionContentWrapper","large","SectionTitle","mainFontText","medium","SectionSubText","IconArrowRight","Footer","footer","getColor","isPassed","isOverallMasteryScore","SectionProgressStatusWrapper","SectionProgressStatusIconWrapper","span","buttonTextColor","SectionsList","ul","SectionsListItem","li","isDummy","defaultBoxShadowColor","SectionsButton","button","disabled","CollapseWrapper","typography","CollapseInnerWrapper","CollapseButton","tablet","ButtonText","fonts","fontFamily","IconClose","IconCircleObjective","LearningObjectiveText","CollapseContent","SectionLearningObjective","toggleExpanded","prevState","isExpanded","learningObjective","color","appearance","getImageDimensions","Promise","resolve","reject","img","Image","onerror","Error","getThumbnailUrl","Container","figure","MEDIA_XSMALL","BackgroundImage","bgSize","SectionImage","isUnmounted","imageDimensions","supportedBgSizes","initial","isImageLoading","imageUrl","originalImage","coincidences","imageResizerQueryPattern","exec","substring","index","_getOriginalImageUrl","getBgProps","isBgColorTransparent","renderSubmitOnceSectionText","isCourseProgress","isCourseSubmitted","correctlyAffectProgressQuestionsCountInSection","affectProgressQuestionsCountInSection","answeredSectionQuestionsCount","countCorrectlyAnsweredQuestionsInSection","countQuestionsInSection","countAnsweredQuestionsInSection","renderSectionText","isSubmitAtOnce","isAttemptSubmitted","title","progress","affectsProgress","sectionProgress","isSectionPassed","isSectionFailed","isFailed","maxLength","shapeColor","progressColor","isShowContentPagesEnabled","navigateToQuestion","navigateToLearningObjective","setSectionRefs","isCourseOnOnePage","dummyElements","Array","v","getDummyElements","map","questionId","questions","score","Reviewable","context","REVIEW_COMMENT_TYPES","SECTION","property","REVIEW_COMMENT_PROPERTIES","TITLE","dummy","getCustomScrollbars","coverBgOverlayTextColor","MEDIA_MEDIUM","CourseInfoContainer","CourseInfoWrapper","mainFontH1","ContentsContainer","LogoWrapper","CourseLogo","logoUrl","alt","ProgressSectionsWrapper","ProgressPerSection","ProgressMasteryScore","ProgressResult","ProgressCaption","TimerInfoWrapper","TimerIcon","CourseInformation","refContainer","renderCourseTimerInfo","timeLimit","inverted","renderProgressCaption","courseProgress","affectAnsweredQuestionsCount","affectProgressQuestionsCount","percentSuccess","countAnsweredQuestions","countQuestions","getProgress","answeredQuestionsProgress","getBackgroundSettings","renderMasteryScoreSectionProgress","masteryScore","forwardedRef","passedMark","introductions","alternativeLogoUrl","sectionsPassedCount","affectProgressSectionsCount","answeredSectionsCount","isTimerEnabled","isQuestionPool","sectionCount","COURSE","hintName","HINT_FOR_SPOT_COMMENT","ignoreFocus","renderSubmitAtOnceProgressPerSection","renderSectionProgress","countSectionsSuccess","countSections","margin","isArray","INTRODUCTION","Contents","items","linkTabIndex","renderCourseIntroduction","isSectionAnswered","getAlternativeLogo","getCourseTitle","getCourseIntroductions","getScore","getMasteryScoreValue","getAffectProgressSectionsCount","getSectionsPassedCount","getAnsweredSectionsCount","getAffectProgressQuestionsCount","getAnsweredAffectProgressQuestionsCount","getAnsweredQuestionsProgress","getTimerEnabled","getTimeFromMilliseconds","getTimerLimit","isQuestionPoolEnabled","getSectionsCount","QuestionPoolWrapper","CourseUserTitle","h3","CourseIntroductionText","secondaryFontText","QuestionPoolOptionsList","QuestionPoolOptionListItem","QuestionPoolOptionIcon","QuestionPoolOptionText","QuestionPoolSubText","strong","CourseStartButton","QuestionPoolOptionItem","text","iconName","optionText","optionValue","optionSubText","HTML_INFINITY_SYMBOL","dangerouslySetInnerHTML","__html","QuestionPool","getTimerText","getTimer","continueCourse","isCourseInProgress","isPreviousPageResults","navigateToPreviousPage","getLastOpenedQuestion","sectionId","startCourse","renderCourseIntroductionText","remainedAttempts","isLimitedAttempts","questionPoolSize","hasCourseStarted","introWithoutTimerAndAttempts","introWithTimerAndAttempts","timer","introWithTimer","introWithAttempts","timerWillStart","goodLuck","userName","limitedAttemptsNumber","courseAttempts","isSubmitAllQuestions","getRemainingAttempts","SKIP_TO_CONTENT_IDS","QUESTION_POOL_START_BUTTON","getQuestions","getQuestionPoolSize","hasCourseBeenStarted","isInProgress","getName","isAttemptsLimited","getLimitedAttemptsNumber","getCourseAttempt","SectionsPageContainer","SectionsPageSidebar","BasicStyledSidebar","SectionsPageContent","PageContent","bodyBackground","background","SectionListContainer","small","Sections","sectionRefs","questionPoolButtonRef","push","focusFirstSection","focus","focusQuestionPoolButton","element","getElementById","focusElement","questionActions","timeElapsed","timerStatus","NOT_STARTED","RESET","setTimerElapsed","startTimer","getQuestionUrl","scrollToId","markAsOpened","getLearningObjectiveUrl","navigateToPrevPage","renderQuestionPoolComponent","renderSectionsListComponent","popupExpanded","SkipToContent","getSections","getAffectProgressQuestionsCountInSection","getAnsweredSectionQuestionsCount","getCorrectlyAffectProgressQuestionsCountInSection","getBackground","isAllQuestionsOnOnePage","getTimerStatus","getTimerElapsed","getPopupVisibility","navigationActions","courseQuestionActions","Switch","PopoverContentWrapper","SubmitMessageWrapper","PopoverContent","ClosePopoverIcon","PopoverButton","PopoverContentHeader","PopoverContentMessage","mainFont","SubmitOnceButton","popoverRef","popoverContentRef","setTooltipAction","option","current","children","submitAllAnswersText","handleKeyDown","evt","ESCAPE","viewAction","remainingQuestions","submitOnce","toggle","renderPopoverContent","templateTheme","ariaModal","SECONDARY","isActive","showSubmitButton","trigger","onRequestClose","position","tooltipTheme","arrow","interactive","html","getColors","getBorderColor","hasOneRemainingAttempt","RemainingAttemptsWrapper","InfoIcon","ShapedIcon","RemainingAttemptsBlockText","RemainingAttemptsBlock","allowedAttempts","usedAttempts","isResultsPage","isQuestionPage","remainingQuestionAttempt","setShowRemainingAttemptsBlock","remainingAttempts","remainingAttemptsText","shouldDisplay","shape","ICON","SHAPES","ROUND_OUTLINED","Component","Title","pointerOnHover","ResultsIcon","isCollapsed","ResultsBlock","navigateToResults","show","collapsed","ellipsis","colored","CourseBackIcon","CourseTitleText","CourseBackButton","TOC","EXPANDED_WIDTH","TAIL_WIDTH","Header","navigateToIndex","courseTitle","highlighted","QuestionIcon","IconElement","iconColor","TitleText","QuestionItem","fullColor","QuestionTreeNode","isAnswered","isAnsweredCorrectly","question","isInformationContent","isSurvey","hasBeenOpened","INFORMATION_CONTENT","getTitleQuestion","NAVIGATION_ITEM_ICON_NAMES","OK","CLOSE","QUESTION","SIZES","SMALL","ROUND_FULL_COLOR","fontSize","renderQuestionIcon","QuestionTreeNodeSubmitOnce","hasGuidedReattempt","isPreviousAnswerCorrect","isAnswerChanged","questionIconText","getIconName","questionTextColor","getShapeColor","shapeOpacity","ExpandedTocItems","activeQuestionId","navigateWithKeyEvent","getTabindex","questionIndex","QuestionsProgress","CongratsMessageWrapper","CongratsMessageTitle","NotPassedMessageWrapper","FailedMessageWrapper","FailedMessageTitle","QuestionProgressText","centerAbsoluteElement","ProgressPopover","toggleOnClick","handleClosePopupKeyDown","getCircularProgressbarStroke","isCourseFailed","renderSubmitOnceQuestionProgress","strokeWidth","percentage","styles","path","stroke","strokeLinecap","CIRCULAR_PROGRESSBAR","STROKE_LINECAP","TRANSITION","trail","renderPopoverMessageContent","renderQuestionProgress","renderMasteryProgress","questionPercentageToReachMasteryScore","correctlyAffectProgressAnsweredQuestionsCount","isCoursePassed","isMasteryCoursePassed","renderPopoverMasteryScoreMessage","selectProgressPopup","affectCorrectlyAnsweredQuestionsCount","correctQuestionsCount","totalQuestionsCount","courseNonInformationQuestionCount","courseInformationQuestionCount","questionCountToReachMasteryScore","masteryScoreValue","messageToShow","inProgressMessage","nextProps","nextState","popoverPosition","ariaLabelledby","top","left","right","bottom","aria-labelledby","ownProps","settingsSelectors","getAffectCorrectlyAnsweredQuestionsCount","getSectionProgress","courseSelectors","courseScore","isScoringOfContentPagesAllowed","getCourseNonInformationQuestionCount","getCourseInformationQuestionCount","getQuestionCountToReachMasteryScore","getQuestionPercentageToReachMasteryScore","getCorrectlyAffectProgressAnsweredQuestionsCount","ProgressPopoverWrapper","SectionItem","TitleIcon","QuestionList","ariaExpanded","StatusIcon","SectionText","StatusText","Status","ariaLabelStatusText","SectionTreeNode","toggleIsExpanded","answeredCorrectlyCountText","correctCount","totalCount","answeredCountText","renderSubmitOnceStatusText","sectionStatusId","statusText","renderSubmitOnceSectionProgress","renderSectionHeads","aria-haspopup","renderSectionBody","animateAppear","duration","opacityDuration","renderSectionFooter","sectionIndex","renderPoolFooter","poolTitle","questionsForPool","answeredPoolQuestionsCount","objectToArray","item","courseStatusText","prevProps","LearningObjectiveItem","ItemTitle","LearningObjectiveTreeNode","PureComponent","getTabIndex","ExpandedTocPoolItems","ExpandedTocPoolSection","ExpandedTocContainer","nav","shouldAdjustHeight","ProgressMasteryScoreWrapper","SubmitAllAnswersWithLimitedAttempts","SubmitAllAnswersButtonContainer","TocWrapper","ExpandedTocSection","activeSectionId","isLearningObjectiveView","scrollToQuestion","ExpandedToc","renderSubmitOnceMasteryScoreProgress","OPACITY","PERCENT_100","PERCENT_30","passedMarkStyles","shouldShowRemainingAttemptsBlock","createRef","isResultsActive","Fragment","aria-hidden","scaleAnimation","keyframes","NavigationItemIcon","MEDIA_SMALL","ItemsLimiter","NavButton","solidColor","prev","next","Items","topShift","NavigationBlock","windowResizeHandler","throttle","windowHeight","innerHeight","setTocNavigationElements","countTocNavigationElements","minCountTocNavigationElements","maxCountTocNavigationElements","isIndexInView","startIndex","endIndex","nextPage","totalItems","navigationElementsCount","updatePagingState","prevPage","range","start","end","postDelta","pre","getRange","hasPrevPage","hasNextPage","calculatePaging","addEventListener","activeItemIndex","removeEventListener","limiterHeight","NavigationLearningItem","sectionTitle","getNavigationItemIcon","MEDIUM","getContentIconProps","configs","ROUND_SHADED","getDefaultQuestionColor","getHoverColor","hoverShape","getAnsweredOnceIconName","getSubmitOnceShapeColor","getAnsweredQuestionColor","NavigationItem","iconProps","getQuestionIconProps","getSubmitOnceQuestionIconProps","CollapsedTocPoolSection","activeQuestionIndex","itemIndex","correctlyAnsweredQuestionsCount","getCorrectlyAnsweredQuestionsCount","CollapsedTocContainer","ariaHidden","COLLAPSED_WIDTH","Z_INDEX","COLLAPSED_TOC","mainBackground","SectionProgress","isNavigationExist","constants","CollapsedToc","showProgressScore","isPassedSection","getSectionData","activeSectionIndex","find","isEmpty","findIndex","renderCircularProgressbar","TailIcon","Tail","TOC_TAIL","TreeOfContent","navigate","scrollNavigate","INDEX_PATH","updateTimerProgress","actions","isAppInLowResolution","toggleTreeOfContentVisibility","tocProps","course","isNextPageResults","params","getLocationParams","QUESTION_PATH","learningObjectiveParams","LEARNING_OBJECTIVE_PATH","getTreeOfContentVisibility","isLowResolution","getCurrentLocationHash","getPoolQuestions","getPoolIds","isSectionsPassed","shouldShowPreviousAnswers","isAnswersFromPreviousAttemptEnabled","PageTitle","LearningObjectiveSectionTitle","LearningObjectiveWrapper","LearningObjectiveContent","LearningObjectiveTitle","bold","LearningObjectiveResult","LearningObjectiveIcon","withFallbackToNotFound","WrappedComponent","predicateForNotFound","NotFound","LearningObjective","navigateToNextPage","scrollToNextPage","logoShown","affectedProgressCount","affectedProgressCorrectlyAnsweredQuestionsCount","LEARNING_OBJECTIVE_PAGE","suffixIcon","match","sectionSelectors","getLogo","isMainLogoShown","stdDeviation","strokeOpacity","ContinueLaterWrapper","StartNewAttempt","restoreAttemptStarted","setRestoreAttemptStarted","iconSize","descriptionText","popupSettings","newAttempt","LINK","FORM","CourseProgress","CourseProgressText","CourseProgressCircle","Figure","svg","fill-rule","CIRCLE_DEGREES","downloadUrl","fetch","catch","er","console","error","isChrome","isFirefox","out","write","origin","learnStorageUrl","selectedLanguage","headers","progressStorage","getHeaders","contentType","CONTENT_TYPES","JSON","bearerToken","getToken","courseId","templateId","logo","getNewLogoUrl","requester","get","IdToUuid","query","json","message","responseData","getCertificateUrl","fileLoader","AfterwordContainer","passedAfterwordsIds","failedAfterwordsIds","afterWordsIds","StyledText","ButtonWrapper","SeparatorElement","Separator","WidthLimiterContainer","ResultsPage","checkHasPrevPage","questionToNavigate","hasRemainingAttempts","attemptsUsed","startNewAttempt","urlToNavigate","openStartNewAttemptPopup","popupActions","openPopup","popupId","POPUP_ID_START_NEW_ATTEMPT","popupAriaLabelKey","component","disablePopupClosing","disableBottomLine","submitResults","finished","isNpsEnabled","POPUP_ID_CLOSE_COURSE","CloseCoursePopup","finalized","openNpsPopup","downloadCertificate","isCertificateLoading","certificateLoader","isCertificateDownloaded","certificateDownloaded","showCertificateLoadedError","npsPopupWasOpened","certificateButton","closeCourse","userAuthorized","POPUP_ID_NPS_POPUP","NpsPopup","hidePopover","renderMasteryScoreOverallFigure","Trophy","mainFigure","headerText","RESULT_PAGE","coursePassStatusText","canNavigateToMyCourses","isAnonymous","isScormMode","isPreviewMode","isLti","showRemainingAttemptsText","showCourseScoringText","hasScoreContentPages","correctSectionsCount","totalSectionsCount","fromDownloadCertificateButton","sectionActions","updateProgressUnaffectedSections","STARTED","submitAtOnceStartNewAttemptButton","renderCloseCourseButton","isReviewMode","hasReanswerableQuestions","isTimerStopped","renderContinueCourseButton","renderStartNewAttemptButton","courseHasBeenContinued","TOOLTIP","INCORRECT","showTooltip","popoverButton","isLoading","goToUrl","isAllowedDownloadCertificate","isCrossDeviceSavingEnabled","renderDownloadCertificateButton","renderQuestionSubmitButton","renderMyCourseButton","renderSubmitAtOnceButton","renderSubmitResultsButton","settingSelectors","isLtiInitialized","isAuthorized","hasReAnswerableQuestions","getFirstIncorrectOrPendingQuestion","Blockout","BLOCKOUT","isTreeOfContentExpanded","CourseOverviewSidebar","PageSidebar","xsmall","CourseOverviewContent","PageContentChild","PageContainer","ContentContainer","isOnOnePageView","dynamicHeight","MEDIA_XLARGE","MEDIA_LARGE","MEDIA_TABLET","secondaryColor","CourseOverviewRouteTransition","prevUrl","unlistenHistory","getTransitionKey","pathname","isQuestionView","onEnter","node","isAppearing","urlsChain","TweenMax","fromTo","delay","clearProps","onExit","history","listen","listenLocation","TransitionGroup","Transition","appear","timeout","getChain","toggleAnswerIsSelected","answerId","ActionTypes","QUESTION_MULTIPLECHOICE_TOGGLE_ANSWER_IS_SELECTED","setSingleAnswerSelected","questionType","QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED","SET_SINGLE_ANSWER_SELECTED","MultipleChoice","selectItem","itemId","isMultiple","allowSubmit","answerBeforeSubmit","answers","isSingleAnswer","ariaDisabled","getUserAnswers","SingleChoiceImage","imageQuestion","QuestionContainer","QuestionContainerOverlay","isShown","statementAnswerIsSelected","isCorrect","QUESTION_STATEMENT_ANSWER_IS_SELECTED","SwitchBlock","SwitchContainer","aux","SwitchOption","ariaDisable","ariaChecked","selected","Option","ariaRole","DEFAULT_PROPS","MobileAnswerSeparator","ctaButtonColor","AnswerText","CaptionMobileContainer","CaptionWrapper","Caption","TextWrapper","AnswersList","CaptionContainer","AnswerListItem","StatementChoice","answer","isTrue","forEach","userSelected","trueText","falseText","openQuestionAnswerIsSelected","answeredText","OPEN_QUESTION_ANSWER_IS_SELECTED","EditableContainer","OpenQuestion","EditableTextarea","onResize","onFocusOutTextArea","onChangeHandler","rankingAnswersAreSelected","QUESTION_RANKING_ANSWERS_ARE_SELECTED","RankingText","action","questionAction","initialLoading","randomizeAnswersEnabled","shuffleAnswerOptions","listsOfItems","getElements","moveItem","isMultipleList","getUserResponse","isRandomizeAnswersEnabled","scenarioBranchtrackData","isFinished","QUESTION_SCENARIO_BRANCHTRACK_DATA","BranchtrackProvider","instances","messageProvider","eventOrigin","supportedMessageTypes","init","scene","choice","finish","success","projectId","subscribeMessageEvent","branchtrack","BranchtrackInstance","instance","unsubscribeMessageEvent","messageEventHadler","parse","provider","messageDataType","details","project","token","branchtrackInstance","playlog","err","obj","hasOwnProperty","ScenarioIframeSection","ScenarioResults","IconContainer","Scenario","refFrameScenario","instanceId","embedCode","branchTrackEventHandler","getScoreBranchtrack","createInstance","initBranchtrack","getElementsByTagName","resetInstace","destroyInstance","getEmbedHtml","getEmbedCode","getProjectId","fillInTheBlankAnswer","FILL_IN_THE_BLANK_ANSWER","AnswerContentWrapper","AnswerContainer","FillInTheBlank","addTabIndexToLinks","links","querySelectorAll","wrappTables","el","wrapper","parentNode","insertBefore","answerGroups","userAnswers","trim","parseSelect","attribs","dataId","answerValue","class","DropdownInput","onSelectChange","answeredPlaceholder","domToReact","FILL_IN_THE_BLANK","TextInput","onInputFocusOut","questionContent","Parser","getImage","relativeUrl","mode","noCache","getImageCheckUrl","imageName","getImageNameByUrl","imageFolderUrl","IMAGE_DEFAULT_DOMAIN","requestUrl","dragAndDropAnswersAreSelected","QUESTION_DRAG_AND_DROP_ANSWERS_ARE_SELECTED","DragDropMobileWrapper","isImageLoaded","isImageNotFound","DragDropMobile","DragAndDropMobile","imageRefs","onSelectElement","droppableElement","destination","list","splice","selectedDropSpotId","retries","dropspots","originalDropspots","dropspot","listsOfItemsMobile","NO_SELECTED_ID","isDropDisabled","isMatching","matchingAnswer","CircleLoader","onLoad","handleImageLoaded","DragAndDropText","getPositionDependingImageScale","image","originalListPosition","scale","naturalWidth","isTouchScreenDevice","round","setPositionDependingImageScale","changeImageState","imageLoader","isImageExists","imageNotFound","cloneDeep","DragDrop","getQuestionRetries","dragAndDropActions","matchingAnswersAreSelected","QUESTION_MATCHING_ANSWERS_ARE_SELECTED","TextMatchingItem","TextMatchingItemKey","TextMatchingItemSelected","shownSelectedValue","DropdownInputWrapper","DropdownInputContainer","TextMatching","getResponseOptionById","getOptionsWithAnswerKeys","selectedKey","markItemInList","newList","shownSelectedId","shuffleAnswersKey","shuffle","activeElem","activeElement","blur","some","previousProps","previousState","inputData","buttonAnimation","isMatchingOption","onSelectMatching","mapAnswersToOptions","isAnyValueSelected","placeholders","plus","matchingOption","renderDropdownInput","hotspotQuestionAnswer","HOTSPOT_QUESTION_ANSWER","Wrapper","ImageSpotsWrapper","CloseIcon","Spot","SpotWrapper","Hotspot","getCoordinates","tagName","rect","getBoundingClientRect","clientX","clientY","markers","addMarker","marker","newMarkers","removeMarker","Question","hasRandomizedOptionsLoaded","renderQuestion","SINGLE_CHOICE","SINGLE_CHOICE_IMAGE","MULTIPLE_CHOICE","STATEMENT_CHOICE","Statement","OPEN_QUESTION","RANKING_TEXT","SCENARIO","DRAG_AND_DROP_TEXT","TEXT_MATCHING","HOTSPOT","isRandomizedOptionsLoaded","PageCounter","total","PoolCounter","createContainer","typeName","propTypes","PropTypes","isRequired","Body","ContentBlock","contentRef","getChildrenObject","Content","child","childrenObj","validationChildren","typeNames","toArray","reduce","acc","Feedback","refFeedback","onShown","animate","animateFeedback","isAnimating","onHidden","questionPageRef","renderContent","isOpenQuestionType","feedbackContentItems","getTitle","LARGE","delayOpacityTransition","onExpanded","onCollapsed","scrollIntoView","correctFeedback","incorrectFeedback","isGeneralFeedback","questionResponse","currentAnswer","explanationBlocks","block","isQuestionAnswered","isQuestionAnsweredCorrectly","getQuestionResponse","ControlContainer","visible","ButtonComponent","ButtonSeparator","SeparatorComponent","ContainerHint","Hint","componentWillUnmount","recalculateScrollLocation","shouldRecalculateScrollLocation","RECALCULATE_LOCATION_TIME_MS","textTransform","aria-expanded","IframeElement","iframe","allow","audioid","VoiceOver","addQueryStringParameter","getStyles","iframeNode","DOMParser","parseFromString","firstChild","attrName","elem","attributes","getAttributesNodeElement","iframeAttr","nodeValue","getIframeSrcWithStyleVariable","clonedUrl","urlParams","searchParams","set","search","disableAutoPlay","renderIframeElement","ActionButtonsContainer","isHidden","NavButtonsBlock","SurveyHint","SubmitOnceButtonWrapper","shouldAddAdditionalMargin","SubmitOnceButtonMobileWrapper","ActionBlocks","submit","isJustSubmitted","canGoNext","canGoToNextQuestion","getNextNavigationText","isLastPageInSection","tryAgain","resetProgress","updateRetries","feedbackAnimated","isAttemptAllowed","slideInDown","renderNavButtonsBlock","questionCountInSection","canTryAgainQuestion","renderNextButton","nextButtonLayout","goToNextPage","attemptNumber","isFeedbackAnimating","QuestionTitleWrapper","QuestionTitle","QuestionPage","setTitlePage","getQuestionIndex","courseQuestionIndex","onePageQuestionIndex","getTotalQuestionCount","questionCountInOnePage","renderQuestionHeader","QUESTION_PAGE","renderInstructions","feedbackContentList","loadFeedback","currentScrollLocationId","isLastBlock","renderInformationContentOrHints","renderFeedback","renderVoiceOver","showLearningHints","hints","LEARNING_CONTENT","instructions","voiceOver","isVoiceOver","VOICE_OVER","getSection","getQuestionCount","getQuestion","sectionExists","questionExists","getCourseQuestionIndex","isShowLearningHintsEnabled","ActionsBlockSubmitOnce","overallNumberOfQuestions","submitAllAtOnce","submitAllAnswers","isLastPage","questionNextButtonLayout","renderSubmitAtOnceButtonWrapper","isEveryAffectedQuestionsAnswered","isLastQuestion","isAllAffectedQuestionsAnswered","QuestionPageSubmitOnce","getCourseQuestionCount","DefaultLayout","altText","StickyContainer","StickyHead","StickyBody","SectionNumber","SectionName","ProgressContainer","Progress","LearningObjectiveBlock","QuestionBlock","isFirstElement","SectionSeparator","SectionCounter","SectionHeader","calculateLocationMap","locationMap","populateLocationMap","elementEndPosition","offsetTop","answeredAffectProgressQuestionsCountInSection","SectionBreaker","nonInfoContentQuestions","questionProps","theLastID","onePageIndex","innerElement","shift","renderQuestionBlock","setShouldRecalculateScrollLocation","getNonInfoContentQuestions","elementIdInViewport","getElementIDInViewPort","getSectionId","getSectionById","getAnsweredAffectProgressQuestionsCountInSection","getSectionIndex","isLearningObjective","useState","setLocationMap","scrollPosition","setScrollPosition","learningObjectiveQuestion","setLearningObjectiveQuestion","elementInViewportRef","useRef","firstSection","getFirstElementId","useEffect","isFirstSection","elementId","newLocationMap","useCallback","debounce","currentPathname","DEBOUNCE_SCROLL_WAIT_TIME_MS","stickyContainerOnScroll","currentScrollPosition","scrollTop","currentComponentId","currentPosition","blockEndPositions","keys","parseFloat","scrollableContainer","lastPosition","floor","scrollHeight","clientHeight","startPosition","val","pageTop","selectedElement","getIdInViewport","learningObjectiveDiv","learningObjectiveTitle","getLearningObjectiveTitlePosition","renderStickyBody","renderLearningObjective","innerIndex","ONE_PAGE_COURSE","onScroll","poolQuestion","CourseLayout","CourseOverview","getElement","getElementHeader","focusContentId","isResultsView","render","documentElement","exact","app","Form","form","idElement","FormContentWrapper","AuthForm","fieldRefs","add","beforeSubmitValidation","onSubmit","hideMessage","returnValidationStatusElem","email","shortTermAccess","valid","setValidationStatusElem","elemValid","setRefs","setFieldRefs","password","agreement","agreementAccepted","userEmail","formId","resetPasswordSendMessage","isEmailPasswordCombinationNotExists","isUnknownError","refEmail","noValidate","getEmail","EmailInput","checkIsUserExist","NameInput","PasswordInput","ButtonSubmitSingUp","AgreementCheckBox","AgreementLabel","CheckboxContainer","shake","isChecked","CheckIcon","TextElement","ButtonSubmit","MessageText","MessageTextWrapper","LinkWrapper","LoginForm","onPasswordRestore","emailValid","resetPassword","STATUS_OK","resetStatuses","renderWithTooltip","CORRECT","renderforgotPasswordButton","multiple","aria-checked","credentialsCombinationNotExistsMessage","renderLoginButton","actionElement","transitionDuration","eventHandler","TYPE","SIMPLE","variables","facebook","linkedin","google","LinkElement","SocialLoginContainer","TextSocial","SeparatorContainer","SocialLogin","getSocialNetworkAuthLink","_extends","assign","source","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link","_React$Component","_temp","_this","_len","_key","concat","handleClick","defaultPrevented","router","_this$props","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","_props","innerRef","_objectWithoutProperties","invariant","createLocation","createHref","string","bool","oneOfType","object","contextTypes","ListItemElements","ariaCurrent","ListElement","LinksWrapper","SwitcherForm","signUp","logIn","SIGNUP_PATH","LOGIN_PATH","MobileFooterContainer","LinkToPageContainer","LinkToPageText","MobileFooter","navigationTextKey","navigateTo","navigationToTextKey","LearnerAgreementText","EulaLinkText","LearnerAgreements","shouldDisplayAgreement","setShouldDisplayAgreement","isSignUpPage","EULA_PDF_LINK","PdfDocument","AuthPageSidebar","AuthPageContent","AuthContainer","AuthSection","CourseLogoSidebarWrapper","CourseLogoSidebar","FormHeading","AuthTextForm","AuthSocialLoginContainer","SwitcherFormContainer","Gdpr","isSignupPage","addTopMargin","AgreementIcon","GdprText","LoginSection","LoginContainer","TextForm","SkipLinkContainer","LoginPage","loginFormFieldRefs","signInData","userActions","authorizeUser","launch","EMAIL_PASSWORD_COMBINATION_NOT_EXISTS","UNKNOWN_ERROR","onAuthorizationSkip","skipAuthentication","setEmailFocus","renderLoader","renderComponents","loginViaSocialMediaEnabled","allowToSkipTrackingAndTracingEnabled","accessLimitationEnable","appActions","launchMaterial","isLoginViaSocialMediaEnabled","isAccessLimited","isAllowToSkipTrackingAndTracingEnabled","allowedUsers","getAllowedUsers","SignUp","emailInputBox","EMAIL_REGEX","userExists","exists","signUpCommonErrorMessage","renderSignUpButton","resetErrorStatus","PASSWORD_REGEX","checked","SignupSection","SignupContainer","FootNoteText","SignUpPage","signupFormFieldRefs","signUpData","registerUser","inputElement","setNameFocus","isUserAuthenticated","SignUpForm","isAuthenticated","StartOver","Description","ErrorBoundary","errorInfo","popup","isCourseProgressRestoreFailed","isProgressRestoreFailed","isCourseStarted","hasBeenStarted","isTocExpanded","userAccessIsLimited","typeAccess","IS_SUCCESSFUL_ACCESS","IS_NO_ACCESS","IS_NOT_AUTHORIZED","usePrevious","openStartOverPopup","POPUP_ID_START_OVER","StartOverPopup","startOver","isIndexView","TIMED_OUT","POPUP_ID_TIMED_OUT","TimedOut","Route","RouteTransition","Layout","componentNoAccess","NoAccess","materialType","MATERIAL_TYPES","SECTIONS_PATH","SECTION_PATH","shouldRedirect","Login","NotFoundPage"],"mappings":"kPAuCeA,uBA7BO,SAACC,GAAD,OACpB,kBAAC,IAAD,CACEC,MAAOD,EAAMC,MACbC,QAAQ,MACRC,GAAG,KACHC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,cACjBC,UAAS,UAAKC,YAAS,yBAEvB,0BACEC,KAAMC,YAAeZ,EAAMa,MAAMC,OAAOC,WACxCC,EAAE,kGAEF,sCACEC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACLC,GAAG,YACHC,YAAY,oB,iwJCZb,IAAMC,EAAeC,UAAOC,MAAMC,OAAM,SAAC3B,GAAD,MAA0B,CACvEmB,KAAMnB,EAAMmB,KACZS,KAAM5B,EAAM4B,KACZC,YAAa7B,EAAM6B,YACnBC,SAAU9B,EAAM8B,SAChB3B,GAAIH,EAAMG,GACV4B,UAAW/B,EAAM+B,UACjBC,aAAchC,EAAMgC,aACpBC,QAASjC,EAAMiC,QACfC,SAAU,cATgBT,CAAH,IAWrBU,KAU4B,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAChE,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAGjE,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAOL,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAChE,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAKvC,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAG/DE,IAAMC,OA1Ce,MAgDnB,SAAAvC,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,KAEsB,SAAAzC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAEtE,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,QAC3C,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAC9CC,QAKJ,SAAA3C,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,KAEsB,SAAAzC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAE5C,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,OAC3C,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,mBAKhC,SAAA5C,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAClB,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,OACrE,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,gBAGlD,SAAA5C,GAAK,OACkC,IAAvCA,EAAM6C,8BACNJ,cADA,IAGwB7B,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KACnCxB,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,KAC5D1C,EAAMa,MAAMC,OAAO4B,eACrCC,QAKKG,EAAarB,UAAOsB,MAAV,KAQZ,SAAA/C,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAE7DZ,EAKAwB,YAAW,OAEXxB,EACAA,EACAA,EAKAA,GAKSyB,EAAYxB,kBAAOyB,IAAPzB,CAAH,KACX,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,eAOnCpB,GACE,SAAAxB,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,OAMFjB,GACE,SAAAxB,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,OAMFjB,GAKS2B,EAAc1B,UAAO2B,IAAIzB,OAAM,iBAAO,CACjD,YAAa,kBADYF,CAAH,KASX4B,EAAyB5B,UAAO2B,IAAV,KAatBE,EAAY7B,kBAAY8B,IAAZ9B,CAAH,KAET,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAOnCW,GAES,SAAArD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAI/DiB,GACS,SAAArD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAKtD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAOrCW,EAAwCA,GAC/B,SAAArD,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,eAGrCS,EAA0CA,GACjC,SAAArD,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,kBAkB9Bc,EAAU/B,kBAAOyB,KAAMvB,OAAM,SAAC3B,GAAD,MAA0B,CAClEyD,KAAMzD,EAAMyD,KACZ3B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,aAHCjC,CAAH,IAKhBkC,KAKO,SAAA3D,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OASpD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI5B,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAK5B,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAQ5BwB,EAAiBnC,UAAO2B,IAAV,IACvBjB,IAKgBX,GACI,SAAAxB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAC5C,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,QACrE,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAC9CC,KAGF,SAAA3C,GAAK,OACiB,IAAtBA,EAAM6D,aACNpB,cADA,IAEIjB,EACoBZ,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KACnCxB,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,KAC5D1C,EAAMa,MAAMC,OAAO4B,eACrCC,IAGFnB,EAAwByB,EAIxBK,EAIAD,MCtPKS,EAAb,YACE,WAAY9D,GAAoB,IAAD,8BAC7B,4CAAMA,KA+CR+D,mBAAqB,SAACC,EAAYC,GAChC,IAAMC,EAAgB,KAAKC,KAAKH,EAAMI,OAAOC,OACzCC,GAAgB,EAChB,EAAKtE,MAAMiC,UACbqC,EAAgB,IAAIC,OAAO,EAAKvE,MAAMiC,SAASkC,KAAKH,EAAMI,OAAOC,QAGxC,IAAvBL,EAAMI,OAAOC,OACf,EAAKG,SAAS,CACZC,eAAuC,IAAvBT,EAAMI,OAAOC,MAC7BH,gBACAI,mBAICJ,GAAiBI,GAAiBL,GACrCA,EAASD,IAhEkB,EAoE/BU,cAAgB,WACd,EAAKF,SAAS,CAAEE,eAAgB,EAAKC,MAAMC,aAAe,EAAKD,MAAME,YAnErE,EAAKF,MAAQ,CACXE,UAAU,EACVD,YAAY,EACZF,eAAe,EACfI,cAAc,EACdC,yBAAyB,EACzBb,eAAe,EACfI,eAAe,EACfG,gBAAgB,EAChBO,UAAU,EACVxC,QAAQ,GAZmB,EADjC,iFAwB6ByC,KAAKjF,MAAtBkF,cAGND,KAAKT,SAAS,CAAEK,UAAU,MA3BhC,4CA+B8Bb,EAAYmB,EAAahE,GA/BvD,qEAgCI6C,EAAMI,OAAOgB,UAAUC,OAAO,WAC9BJ,KAAKT,SAAS,CACZI,YAAaZ,EAAMI,OAAOkB,SAASC,eAAiBvB,EAAMI,OAAOkB,SAASE,gBAC1ET,wBAAuD,IAA9Bf,EAAMI,OAAOC,MAAMoB,OAC5CjD,OAAQrB,IAASuE,IAAWC,SAE1BR,EAtCR,uBAuCMF,KAAKT,SAAS,CAAEQ,UAAU,IAvChC,mBAwCYG,EAAOnB,IAxCnB,OAyCMiB,KAAKT,SAAS,CAAEQ,UAAU,IAzChC,oFA6CehB,GACXiB,KAAKT,SAAS,CAAEhC,QAAQ,MA9C5B,yCA0EIyC,KAAKT,SAAS,CAAEM,cAAeG,KAAKN,MAAMG,iBA1E9C,wCA8EI,OAAOG,KAAKN,MAAMG,aAAeY,IAAWE,KAAOF,IAAWG,WA9ElE,gDAkFIZ,KAAKT,SAAS,CAAEO,yBAAyB,MAlF7C,+BAqFY,IAAD,SAqBHE,KAAKjF,MAnBP8F,EAFK,EAELA,QACA3E,EAHK,EAGLA,KACAS,EAJK,EAILA,KAJK,IAKLE,gBALK,MAKM,EALN,EAMLD,EANK,EAMLA,YACAkE,EAPK,EAOLA,UACA9B,EARK,EAQLA,SACA+B,EATK,EASLA,SACAC,EAVK,EAULA,UACAC,EAXK,EAWLA,UACAC,EAZK,EAYLA,SACAjB,EAbK,EAaLA,aACAlD,EAdK,EAcLA,aACAC,EAfK,EAeLA,QACAY,EAhBK,EAgBLA,6BACAuD,EAjBK,EAiBLA,sBACAvC,EAlBK,EAkBLA,YACAsB,EAnBK,EAmBLA,OACAkB,EApBK,EAoBLA,QApBK,EAsBsBpB,KAAKN,MAA1BnC,EAtBD,EAsBCA,OAAQwC,EAtBT,EAsBSA,SAChB,OACE,gBAACpB,EAAD,CAAgB/C,MAAOoE,KAAKjF,MAAMa,MAAOgD,YAAaA,IAAe,GACnE,gBAACrC,EAAD,CACErB,GAAI2F,EACJQ,IAAKH,EACLhF,KAAMA,IAASuE,IAAWG,SAAWZ,KAAKsB,kBAAoBpF,EAC9DS,KAAMA,EACNC,YAAaA,EACb2E,UAAYvB,KAAKN,MAAME,SAAwB,OAAb,WAClC/C,SAAUA,EACVoD,aAAcA,EACdlD,aAAcA,GAAgB,GAC9BC,QAASA,EACTkD,OAAM,+GAAE,SAAAnB,GACN,EAAKQ,SAAS,CAAEK,WAAYb,EAAMI,OAAOC,QACzC,EAAKoC,sBAAsBzC,EAAOmB,EAAQhE,MAE5CkF,QAAO,+GAAE,SAACrC,GACJ7C,IAASuE,IAAWG,UACtB,EAAKd,0BAEHsB,GACFA,EAAQrC,GAEV,EAAK0C,aAAa1C,MAEpBC,SACE9C,IAASuE,IAAWG,SAChB,SAAC7B,GAAD,OAAgB,EAAKD,mBAAmBC,EAAOC,IAC/CA,EAENlC,UAAWkD,KAAKP,cAChB7B,6BAA8BA,EAC9BhC,MAAOoE,KAAKjF,MAAMa,MAClB2B,OAAQA,IAEV,gBAACM,EAAD,CAAYjC,MAAOoE,KAAKjF,MAAMa,MAAO8F,QAASb,GAC3CC,GAEFE,GACC,gBAAChD,EAAD,CAAWpC,MAAOoE,KAAKjF,MAAMa,MAAOe,KAAK,eAAegF,KAAM,GAAIpE,OAAQA,IAE3EwD,GAAYhB,GACX,gBAAC7B,EAAD,CAAa0D,YAAW,UAAU,gBAAC,EAAD,CAAQ5G,MAAO,GAAIY,MAAOoE,KAAKjF,MAAMa,SAExEqF,GAAaE,GACZ,gBAAC/C,EAAD,KACE,gBAACC,EAAD,CACEzC,MAAOoE,KAAKjF,MAAMa,MAClB2F,UAAYvB,KAAKN,MAAMC,WAAwB,GAAX,SACpCiC,YAAU,2BAEV,gBAAC3D,EAAA,EAAD,CAAMtB,KAAK,mBAAmBf,MAAOoE,KAAKjF,MAAMa,QAC/CqF,IAIN/E,IAASuE,IAAWG,UACnB,gBAACrC,EAAD,CACEC,KAAK,SACL3B,SAAU,EACV4B,UACEuB,KAAKN,MAAMG,aACPpE,YAAS,yBACTA,YAAS,yBAEfkB,KAAMqD,KAAKN,MAAMG,aAAe,YAAc,WAC9CgC,QAAS,WACP,EAAKC,oBAEPC,UAAW,SAAChD,GAER,CAACiD,IAAKC,MAAMC,cAAeF,IAAKG,SAASD,eAAeE,SACtDrD,EAAMsD,IAAIH,iBAGZnD,EAAMuD,iBACN,EAAKR,qBAGTlG,MAAOoE,KAAKjF,MAAMa,QAGrBM,IAASuE,IAAWG,UAAYO,GAC/B,gBAAC/C,EAAD,CAAwBmD,UAAWvB,KAAKN,MAAMI,wBAA0B,OAAS,QAC/E,gBAACzB,EAAD,CACEzC,MAAOoE,KAAKjF,MAAMa,MAClB2F,UACEvB,KAAKN,MAAMF,iBAAmBQ,KAAKN,MAAMT,cAAgB,UAAY,UAGvE,gBAAChB,EAAA,EAAD,CAAMtB,KAAK,iBACVlB,YAAS,4BAEZ,gBAAC4C,EAAD,CACEkD,UACEvB,KAAKN,MAAMF,iBAAmBQ,KAAKN,MAAML,cAAgB,QAAU,WAErEzD,MAAOoE,KAAKjF,MAAMa,OAElB,gBAACqC,EAAA,EAAD,CAAMtB,KAAK,iBACVlB,YAAS,uCAjNxB,GAA2B8G,aAAd1D,EAiBJ2D,aAAe,CACpBxB,WAAW,EACXG,uBAAuB,EACvBtE,SAAU,GAsMC/B,0BAAU+D,GCvRzB,mC,qBCAA,UAYE4D,EAAO,QAAD,6BAUA,WAEP,OAAO,SAASC,EAASC,EAAMC,EAAaC,GAE3C,IASCC,EACAC,EAVGC,EAAOC,OACVC,EAAc,2BACdC,EAAWN,GAAeK,EAC1BE,EAAUT,EACVU,GAAOT,IAAgBC,GAAeO,EACtCE,EAASC,SAASC,cAAc,KAChCC,EAAW,SAASC,GAAG,OAAOC,OAAOD,IACrCE,EAAUZ,EAAKa,MAAQb,EAAKc,SAAWd,EAAKe,YAAcN,EAC1DO,EAAWpB,GAAe,WAY3B,GATCgB,EAAQA,EAAOK,KAAOL,EAAOM,KAAKlB,GAAQa,KAEzB,SAAfF,OAAO3D,QAETmD,GADAC,EAAQ,CAACA,EAASD,IACD,GACjBC,EAAQA,EAAQ,IAIdC,GAAOA,EAAI7C,OAAQ,OACrBwD,EAAWX,EAAIc,MAAM,KAAKC,MAAMD,MAAM,KAAK,GAC3Cb,EAAOe,KAAOhB,GACqB,IAA9BC,EAAOe,KAAKC,QAAQjB,IAAY,CAC9B,IAAIkB,EAAK,IAAIC,eAOhB,OANGD,EAAKE,KAAM,MAAOpB,GAAK,GACvBkB,EAAKG,aAAe,OACpBH,EAAKI,OAAQ,SAASC,GAC1BlC,EAASkC,EAAEzF,OAAO0F,SAAUb,EAAUd,IAElC4B,YAAW,WAAYP,EAAKQ,SAAU,GAClCR,EAMZ,GAAG,iCAAiCrF,KAAKkE,GAAS,CAEjD,KAAGA,EAAQ5C,OAAU,aAAoBoD,IAAWH,GAInD,OAAOuB,UAAUC,WAChBD,UAAUC,WAAWC,EAAc9B,GAAUY,GAC7CmB,EAAM/B,GAJPD,GADAC,EAAQ8B,EAAc9B,IACLlH,MAAQgH,OAQ1B,GAAG,gBAAgBhE,KAAKkE,GAAS,CAEhC,IADA,IAAIgC,EAAE,EAAGC,EAAW,IAAIC,WAAWlC,EAAQ5C,QAAS+E,EAAGF,EAAU7E,OAC3D4E,EAAEG,IAAKH,EAAGC,EAAUD,GAAIhC,EAAQoC,WAAWJ,GAChDhC,EAAQ,IAAIQ,EAAO,CAACyB,GAAY,CAACnJ,KAAMiH,IAQ1C,SAAS+B,EAAcO,GAStB,IARA,IAAIC,EAAOD,EAAOtB,MAAM,SACxBjI,EAAMwJ,EAAM,GAEZC,GADqB,UAAZD,EAAM,GAAiBE,KAAOC,oBACrBH,EAAMtB,OACxBmB,EAAII,EAAQnF,OACZ4E,EAAG,EACHU,EAAO,IAAIR,WAAWC,GAEhBH,EAAEG,IAAKH,EAAGU,EAAMV,GAAIO,EAAQH,WAAWJ,GAE7C,OAAO,IAAIxB,EAAO,CAACkC,GAAQ,CAAC5J,KAAMA,IAGnC,SAASiJ,EAAM9B,EAAK0C,GAEnB,GAAI,aAAczC,EAYjB,OAXAA,EAAOe,KAAOhB,EACdC,EAAO0C,aAAa,WAAYhC,GAChCV,EAAO/B,UAAY,mBACnB+B,EAAO2C,UAAY,iBACnB3C,EAAO4C,MAAMC,QAAU,OACvB5C,SAAS6C,KAAKC,YAAY/C,GAC1BwB,YAAW,WACVxB,EAAOgD,QACP/C,SAAS6C,KAAKG,YAAYjD,IACb,IAAVyC,GAAgBjB,YAAW,WAAY9B,EAAKwD,IAAIC,gBAAgBnD,EAAOe,QAAS,OACjF,KACI,EAIR,GAAG,gDAAgDnF,KAAK8F,UAAU0B,WAKjE,MAJG,SAASxH,KAAKmE,KAAMA,EAAI,QAAQA,EAAIsD,QAAQ,sBAAuBzD,IAClED,OAAOwB,KAAKpB,IACZuD,QAAQ,oGAAoGC,SAASxC,KAAKhB,IAEvH,EAIR,IAAIyD,EAAIvD,SAASC,cAAc,UAC/BD,SAAS6C,KAAKC,YAAYS,IAEtBf,GAAW,SAAS7G,KAAKmE,KAC5BA,EAAI,QAAQA,EAAIsD,QAAQ,sBAAuBzD,IAEhD4D,EAAEC,IAAI1D,EACNyB,YAAW,WAAYvB,SAAS6C,KAAKG,YAAYO,KAAO,KAOzD,GA5DAhE,EAAOM,aAAmBQ,EACzBR,EACA,IAAIQ,EAAO,CAACR,GAAU,CAAClH,KAAMiH,IA0D1B6B,UAAUC,WACb,OAAOD,UAAUC,WAAWnC,EAAMkB,GAGnC,GAAGhB,EAAKwD,IACPrB,EAAMnC,EAAKwD,IAAIQ,gBAAgBlE,IAAO,OAClC,CAEJ,GAAmB,kBAATA,GAAqBA,EAAKmE,cAAcxD,EACjD,IACC,OAAO0B,EAAO,QAAWhC,EAAa,WAAeH,EAAKkE,KAAKpE,IAC/D,MAAMzH,GACN,OAAO8J,EAAO,QAAWhC,EAAa,IAAMgE,mBAAmBrE,KAKjEC,EAAO,IAAIqE,YACJzC,OAAO,SAASC,GACtBO,EAAMnF,KAAKqH,SAEZtE,EAAOuE,cAAcxE,GAEtB,OAAO,KAxJD,gC,sBCZR,YAUA,IASIyE,EAAS,aAGTC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAeC,SAGfC,EAA8B,iBAAVC,GAAsBA,GAAUA,EAAOC,SAAWA,QAAUD,EAGhFE,EAA0B,iBAARhF,MAAoBA,MAAQA,KAAK+E,SAAWA,QAAU/E,KAGxEiF,EAAOJ,GAAcG,GAAYE,SAAS,cAATA,GAUjCC,EAPcJ,OAAOK,UAOQ3E,SAG7B4E,EAAYC,KAAKC,IACjBC,EAAYF,KAAKG,IAkBjBC,EAAM,WACR,OAAOT,EAAKU,KAAKD,OA4MnB,SAASE,EAASxJ,GAChB,IAAIlD,SAAckD,EAClB,QAASA,IAAkB,UAARlD,GAA4B,YAARA,GA4EzC,SAAS2M,EAASzJ,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAhCF,SAAkBA,GAChB,MAAuB,iBAATA,GAtBhB,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,EAsBtB0J,CAAa1J,IAzTF,mBAyTY+I,EAAelE,KAAK7E,GA8B1C2J,CAAS3J,GACX,OA3VM,IA6VR,GAAIwJ,EAASxJ,GAAQ,CACnB,IAAI4J,EAAgC,mBAAjB5J,EAAM6J,QAAwB7J,EAAM6J,UAAY7J,EACnEA,EAAQwJ,EAASI,GAAUA,EAAQ,GAAMA,EAE3C,GAAoB,iBAAT5J,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQA,EAAMuH,QAAQY,EAAQ,IAC9B,IAAI2B,EAAWzB,EAAWvI,KAAKE,GAC/B,OAAQ8J,GAAYxB,EAAUxI,KAAKE,GAC/BuI,EAAavI,EAAM+J,MAAM,GAAID,EAAW,EAAI,GAC3C1B,EAAWtI,KAAKE,GAxWb,KAwW6BA,EAGvCgK,EAAOC,QAtPP,SAAkBC,EAAMC,EAAMC,GAC5B,IAAIC,EACAC,EACAC,EACAtC,EACAuC,EACAC,EACAC,EAAiB,EACjBC,GAAU,EACVC,GAAS,EACTC,GAAW,EAEf,GAAmB,mBAARX,EACT,MAAM,IAAIY,UArIQ,uBA+IpB,SAASC,EAAWC,GAClB,IAAIC,EAAOZ,EACPa,EAAUZ,EAKd,OAHAD,EAAWC,OAAWa,EACtBT,EAAiBM,EACjB/C,EAASiC,EAAKkB,MAAMF,EAASD,GAI/B,SAASI,EAAYL,GAMnB,OAJAN,EAAiBM,EAEjBR,EAAU9E,WAAW4F,EAAcnB,GAE5BQ,EAAUI,EAAWC,GAAQ/C,EAWtC,SAASsD,EAAaP,GACpB,IAAIQ,EAAoBR,EAAOP,EAM/B,YAAyBU,IAAjBV,GAA+Be,GAAqBrB,GACzDqB,EAAoB,GAAOZ,GANJI,EAAON,GAM8BH,EAGjE,SAASe,IACP,IAAIN,EAAO1B,IACX,GAAIiC,EAAaP,GACf,OAAOS,EAAaT,GAGtBR,EAAU9E,WAAW4F,EAzBvB,SAAuBN,GACrB,IAEI/C,EAASkC,GAFWa,EAAOP,GAI/B,OAAOG,EAASxB,EAAUnB,EAAQsC,GAHRS,EAAON,IAGkCzC,EAoBhCyD,CAAcV,IAGnD,SAASS,EAAaT,GAKpB,OAJAR,OAAUW,EAINN,GAAYR,EACPU,EAAWC,IAEpBX,EAAWC,OAAWa,EACflD,GAeT,SAAS0D,IACP,IAAIX,EAAO1B,IACPsC,EAAaL,EAAaP,GAM9B,GAJAX,EAAWwB,UACXvB,EAAW1J,KACX6J,EAAeO,EAEXY,EAAY,CACd,QAAgBT,IAAZX,EACF,OAAOa,EAAYZ,GAErB,GAAIG,EAGF,OADAJ,EAAU9E,WAAW4F,EAAcnB,GAC5BY,EAAWN,GAMtB,YAHgBU,IAAZX,IACFA,EAAU9E,WAAW4F,EAAcnB,IAE9BlC,EAIT,OAxGAkC,EAAOV,EAASU,IAAS,EACrBX,EAASY,KACXO,IAAYP,EAAQO,QAEpBJ,GADAK,EAAS,YAAaR,GACHnB,EAAUQ,EAASW,EAAQG,UAAY,EAAGJ,GAAQI,EACrEM,EAAW,aAAcT,IAAYA,EAAQS,SAAWA,GAiG1Dc,EAAUG,OAnCV,gBACkBX,IAAZX,GACFuB,aAAavB,GAEfE,EAAiB,EACjBL,EAAWI,EAAeH,EAAWE,OAAUW,GA+BjDQ,EAAUK,MA5BV,WACE,YAAmBb,IAAZX,EAAwBvC,EAASwD,EAAanC,MA4BhDqC,K,27BC9JMjQ,uBAjFQ,SAACC,GAAD,OACrB,kBAAC,IAAD,CACEC,MAAM,MACNqQ,OAAO,MACP/P,QAAQ,cACRL,QAAQ,MACRE,MAAOmQ,IACP9M,KAAK,MACLhD,UAAS,UAAKC,YAAS,oCAEvB,8BACE,4BACEP,GAAG,WACHF,MAAM,OACNqQ,OAAO,OACPjQ,EAAE,KACFC,EAAE,KACFkQ,YAAY,qBAEZ,oCAAgBC,GAAG,mBAErB,4BACEtQ,GAAG,WACHF,MAAM,OACNqQ,OAAO,OACPjQ,EAAE,KACFC,EAAE,KACFkQ,YAAY,qBAEZ,oCAAgBC,GAAG,mBAErB,0BAAMtQ,GAAG,SAASa,EAAE,oDACpB,0BACEb,GAAG,SACHa,EAAE,8HAGN,uBAAGL,KAAK,OAAO+P,SAAS,WACtB,uBAAG/P,KAAMX,EAAMa,MAAMC,OAAOsB,UAAWuO,UAAU,mBAC/C,0BACE3P,EAAE,0gBAIF4P,OAAO,iBACPC,QAAQ,QAEV,6BAASC,GAAG,MAAMC,GAAG,KAAKH,OAAO,iBAAiBC,QAAQ,KAAKG,GAAG,KAAKC,GAAG,OAE5E,uBAAGN,UAAU,iBACX,0BACEhQ,KAAMX,EAAMa,MAAMC,OAAOC,UACzBC,EAAE,2PAGJ,4BAAQ8P,GAAG,KAAKC,GAAG,KAAKG,EAAE,KAAKvQ,KAAMX,EAAMa,MAAMC,OAAOuB,mBACxD,0BACE1B,KAAMX,EAAMa,MAAMC,OAAOsB,UACzBpB,EAAE,iqBAMJ,0BACEL,KAAMX,EAAMa,MAAMC,OAAOC,UACzBC,EAAE,mYAIJ,uBAAG2P,UAAU,4BACX,yBAAKhQ,KAAMX,EAAMa,MAAMC,OAAOC,UAAWoQ,UAAU,YACnD,yBAAKxQ,KAAK,OAAOyQ,YAAY,KAAKD,UAAU,aAE9C,yBAAKxQ,KAAMX,EAAMa,MAAMC,OAAOC,UAAWoQ,UAAU,YACnD,yBAAKxQ,KAAK,OAAOyQ,YAAY,KAAKD,UAAU,kB,goCC9E7C,IAAME,EAAkB5P,UAAO6P,QAAV,KAQfC,EAAe9P,UAAO+P,GAAV,IACrBC,KAQSC,EAAqBjQ,UAAOkQ,EAAV,IAC3BC,IAMAtP,IAAMuP,OAPqB,MAalBC,EAAgBrQ,kBAAOsQ,IAAPtQ,CAAH,IACtBkC,KAGkB,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAI1B,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAItD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OCXxEiR,EAA4B,SAChCC,EACAC,EACAC,EACAC,EACAC,GAEIJ,EACFE,EAAWG,oBAAoBF,EAAgBG,UAE/CF,EAAoBG,qBAAqBN,IA2D9BO,I,EAAAA,eAAWC,YAAeC,aAhBzC,SAAyBhO,GACvB,MAAO,CACLsN,0BAA2BW,YAAyBjO,GACpDyN,gBAAiBS,YAAmBlO,GACpCuN,oBAAqBY,YAAuBnO,OAIhD,SAA4BoO,GAC1B,MAAO,CACLC,aAAcC,YAAmBC,EAAoBH,GACrDZ,WAAYc,YAAmBE,EAAsBJ,GACrDV,oBAAqBY,YAAmBG,EAAeL,MAIlBJ,EAvDuB,SAAC3S,GAA0B,IAEvFiS,EAQEjS,EARFiS,0BACAC,EAOElS,EAPFkS,oBACAE,EAMEpS,EANFoS,gBACAC,EAKErS,EALFqS,oBACAW,EAIEhT,EAJFgT,aACAb,EAGEnS,EAHFmS,WACAkB,EAEErT,EAFFqT,WACAC,EACEtT,EADFsT,cAgBF,OACE,gBAAC,IAAD,CAAcnS,KAAMoS,IAAaC,cAAcC,YAC7C,gBAACpC,EAAD,KACE,gBAAC,EAAD,MACA,gBAACE,EAAD,KAAe7Q,YAAS,sBACxB,gBAACgR,EAAD,KAAqBhR,YAAS,4BAC9B,gBAACoR,EAAD,CAAe4B,OAAQC,IAAOC,OAAOC,QAAS/M,QAnBhC,oBAAA6B,EAAAmL,OAAA,gDAClBd,EAAae,eAAeC,IAAYC,SACxCjC,EACEC,EACAC,EACAC,EACAC,EACAC,GAEFgB,IACAC,EAAcY,KAVI,uCAoBXxT,YAAS,2B,6GClFdyT,IAA2C,oBAC9CC,KAAeC,OAAS,YADsB,eAE9CD,KAAeE,OAAS,gBAFsB,eAG9CF,KAAeG,YAAc,oBAHiB,GAMpCC,GAAmC,SAACC,GAC/C,OAAON,GAAYM,I,i1ECJd,IAAMC,GAAcjT,kBAAOkT,IAAPlT,CAAH,MAOXmT,GAAwBnT,UAAO6P,QAAV,KAO9BhP,IAAMuS,MAPwB,MAU9BvS,IAAMC,OAVwB,OAgBrBuS,GAAerT,kBAAO8B,IAAP9B,CAAH,KAGrBsT,KACO,SAAA/U,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAWnCE,IAAM0S,OAfe,MAmBrB1S,IAAMC,OAnBe,OA0BZ0S,GAAiBxT,kBAAO8B,IAAP9B,CAAH,MAIdyT,GAAiBzT,kBAAOyB,IAAPzB,CAAH,MAId0T,GAAS1T,UAAO2T,OAAV,KASfjT,IASAG,IAAMC,OAlBS,OA2Bb8S,GAAW,SAACrV,GAAD,OACfA,EAAMsV,WAAatV,EAAMuV,sBACrBvV,EAAMa,MAAMC,OAAO8B,aACnB5C,EAAMa,MAAMC,OAAOsB,WAMZoT,GAA+B/T,UAAO2B,IAAV,MAG9B,SAAApD,GAAK,OAAIqV,GAASrV,MAChB,SAAAA,GAAK,OAAKA,EAAMsV,WAAatV,EAAMuV,sBAAwB,EAAI,KAExEN,IACS,SAAAjV,GAAK,OAAIqV,GAASrV,MAOlByV,GAAmChU,UAAOiU,KAAV,MAChC,SAAA1V,GAAK,OAAKA,EAAMsV,SAAW,OAAS,UAOtC,SAAAtV,GAAK,OAAIA,EAAMa,MAAMC,OAAO6U,mBACjB,SAAA3V,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,gB,24EClH3C,IAAMgT,GAAenU,UAAOoU,GAAGlU,OAAM,SAAA3B,GAAK,MAAK,CACpD,YAAa,mBADayB,CAAH,MAUZqU,GAAmBrU,UAAOsU,GAAV,KAQzBzT,IAAMC,OARmB,OAazB,SAAAvC,GAAK,OACLA,EAAMgW,SACNvT,cADA,KAEsBzC,EAAMa,MAAMC,OAAOsB,UAErCE,IAAMC,OAJV,UASA,SAAAvC,GAAK,OACJA,EAAMgW,SACPvT,cADA,KAK+B7B,YAAeqV,IAAuB,QAe5DC,GAAiBzU,UAAO0U,OAAOxU,OAAM,SAAC3B,GAAD,MAAiC,CACjF8B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,UACpB0S,SAAUpW,EAAMgW,QAChB,cAAehW,EAAMgW,WAJOvU,CAAH,KAMvBkC,KAUkB,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAc9CE,IAAMC,OA9BiB,OAqCvB,SAAAvC,GAAK,OACLA,EAAMgW,SACN1T,IAAMC,OADN,SAKA,SAAAvC,GAAK,OACJA,EAAMgW,SACPvT,cADA,KAE6B7B,YAAeqV,IAAuB,IAE7CjW,EAAMa,MAAMC,OAAOuB,iBAGrC4S,GACSjV,EAAMsV,WAAatV,EAAMuV,sBAC9BvV,EAAMa,MAAMC,OAAO8B,aACnB5C,EAAMa,MAAMC,OAAOsB,UAEf+S,GAAmBA,GAOzB7S,IAAMC,OAnBZ,U,4nECnGG,IAAM8T,GAAkB5U,UAAO2B,IAAV,KACxBkT,KACY,SAAAtW,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAC3C,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,YAGnDuB,IAAMC,OANkB,OAWfgU,GAAuB9U,UAAO2B,IAAV,MAIpBoT,GAAiB/U,kBAAOsQ,IAAPtQ,CAAH,KA+BvBa,IAAMmU,OA/BiB,MAmCvBnU,IAAMC,OAnCiB,OA+CdmU,GAAajV,kBAAO8B,KAAM5B,MAAM,CAC3C,YAAa,kCADWF,CAAH,MAGN,SAAAzB,GAAK,OAAIA,EAAMa,MAAM8V,MAAMxU,cAAcyU,cAC/C,SAAA5W,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAM1ByU,GAAYpV,kBAAOyB,IAAPzB,CAAH,MAsBTqV,GAAsBrV,kBAAOyB,IAAPzB,CAAH,MAMnBsV,GAAwBtV,kBAAO8B,IAAP9B,CAAH,KAC9B6U,KAMSU,GAAkBvV,kBAAO8B,IAAP9B,CAAH,KACxB6U,KCzBWW,G,YA7Db,WAAYjX,GAAuC,IAAD,+BAChD,8CAAMA,KAIRkX,eAAiB,WACf,EAAK1S,UAAS,SAAC2S,GAAD,MAA+C,CAC3DC,YAAaD,EAAUC,gBAPuB,EAWlDpQ,UAAY,SAAChD,GAAgB,IAAD,KAExB,UAAAA,EAAMsD,WAAN,eAAWH,iBAAkBF,IAAKG,SAASD,gBAC3C,UAAAnD,EAAMsD,WAAN,eAAWH,iBAAkBF,IAAKC,MAAMC,gBAExCnD,EAAMuD,iBACN,EAAK2P,mBAfP,EAAKvS,MAAQ,CAAEyS,YAAY,GAFqB,E,wEAqBxC,IAAD,OACCA,EAAenS,KAAKN,MAApByS,WACAC,EAAsBpS,KAAKjF,MAA3BqX,kBACR,OACE,gBAAC,WAAD,KACE,gBAACb,GAAD,CACE1U,SAAU,EACVkF,UAAW,SAAChD,GAAD,OAAgB,EAAKgD,UAAUhD,IAC1C8C,QAAS,kBAAM,EAAKoQ,mBAEpB,gBAACJ,GAAD,CAAqBlV,KAAK,mBAAmBgF,KAAM,GAAI0Q,MAAM,cAC7D,gBAACZ,GAAD,KACGhW,YAAS0W,EAAa,4BAA8B,+BAIzD,gBAACf,GAAD,KACE,gBAAC,IAAD,CAAUe,WAAYA,GACpB,gBAACb,GAAD,KACE,gBAACM,GAAD,CACEpT,KAAK,SACL3B,SAAU,EACVkF,UAAW,SAAChD,GAAD,OAAgB,EAAKgD,UAAUhD,IAC1C8C,QAAS,kBAAM,EAAKoQ,kBACpBtV,KAAK,QACLgF,KAAM,EACN0Q,MAAM,cAER,gBAACP,GAAD,CAAuBQ,WAAY,KAChC7W,YAAS,yBAEZ,gBAACsW,GAAD,CAAiBO,WAAY,KAAMF,W,GAxDV7P,aCxB1BgQ,GAAqB,SAAClP,GAAD,OAChC,IAAImP,SAAQ,SAACC,EAASC,GACpB,IAAIC,EAAM,IAAIC,MAEdD,EAAIhO,OAIJ,WACE8N,EAAQ,CAAEzX,MAAOgF,KAAKhF,MAAOqQ,OAAQrL,KAAKqL,UAJ5CsH,EAAIE,QAMJ,WACEH,EAAO,IAAII,MAAJ,kCAAqCzP,MAN9CsP,EAAI5L,IAAM1D,MAUD0P,GAAkB,SAAC1P,EAAarI,EAAeqQ,GAA7B,gBAAmDhI,EAAnD,kBAAgErI,EAAhE,mBAAgFqQ,I,m6BCRxG,IAAM2H,GAAYxW,UAAOyW,OAAV,MAIA,SAAAlY,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OACxEE,IAAMC,OALY,MAWC4V,IAAe,IAWzBC,GAAkB3W,UAAO2B,IAAV,MAGP,SAAApD,GAAK,OAAKA,EAAMqY,OAASrY,EAAMqY,OAAS,aAGnC,SAAArY,GAAK,OAAIA,EAAMsI,OCqD1BgQ,IDlDoB7W,UAAO2B,IAAV,MAQO3B,UAAO2B,IAAV,MAEzB,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aClCvC,YAIE,WAAYpC,GAA2B,IAAD,+BACpC,8CAAMA,KAJRuY,iBAGsC,IAFtCC,qBAEsC,EAEpC,EAAKD,aAAc,EACnB,EAAKC,gBAAkB,CACrBvY,MAAO,IACPqQ,OAAQ,KAEV,EAAK3L,MAAQ,CACX0T,OAAQI,IAAiBC,QACzBC,gBAAgB,EAChBC,SAAU5Y,EAAM4Y,UAVkB,EAJxC,sFAkB0B,IACdA,EAAa3T,KAAKjF,MAAlB4Y,SACJC,EAAgBD,EACdE,EAAeC,IAAyBC,KAAKJ,GAInD,OAHIE,GAAgBA,EAAarT,SAC/BoT,EAAgBD,EAASK,UAAU,EAAGH,EAAaI,QAE9CL,IAzBX,uIA8BgC5T,KAAKuT,gBAAvBvY,EA9Bd,EA8BcA,MAAOqQ,EA9BrB,EA8BqBA,OACXsI,EAAW3T,KAAKkU,uBA/B1B,mBAgC8B3B,GAAmBoB,IAhCjD,OAgCYhS,EAhCZ,OAiCUyR,EAAS,WACTzR,EAAK3G,OAASA,GAAS2G,EAAK0J,QAAUA,KACxCsI,EAAWZ,GAAgBY,EAAU3Y,EAAOqQ,GAC5C+H,EAAS,WAEPzR,EAAK3G,OAASA,GAAS2G,EAAK0J,QAAUA,IACxCsI,GAAY,2BACZP,EAAS,SAGNpT,KAAKsT,aACRtT,KAAKT,SAAS,CAAE6T,SAAQM,gBAAgB,EAAOC,aA5CvD,kDA+CW3T,KAAKsT,aACRtT,KAAKT,SAAS,CAAE6T,OAAQI,IAAiBC,QAASC,gBAAgB,IAhD1E,qGAsDI1T,KAAKmU,eAtDT,6CA0DInU,KAAKsT,aAAc,IA1DvB,+BA6DY,IAAD,EACsCtT,KAAKN,MAA1C0T,EADD,EACCA,OAAQM,EADT,EACSA,eAAgBC,EADzB,EACyBA,SAChC,OAAID,EACK,gBAAC,GAAD,MAGP,gBAAC,GAAD,CAAWU,sBAAoB,GAC7B,gBAACjB,GAAD,CAAiB9P,IAAKsQ,EAAUP,OAAQA,SApEhD,GAAkC7Q,cC8GlC,IAAM8R,GAA8B,SAClCC,EACA9E,GAKI,IAJJ+E,EAIG,wDAHHC,EAGG,uCAFHC,EAEG,uCADHC,EACG,uCACH,OAAIJ,EACEC,EACK9Y,YAAS,2BAA4B,CAC1CkZ,yCAA0CH,EAC1CI,wBAAyBH,IAGtBhZ,YAAS,2BAA4B,CAC1CoZ,gCAAiCH,EACjCE,wBAAyBH,IAGzBF,EACK9Y,YAAS8T,GAAiCC,IAE5C/T,YAAS,2BAA4B,CAC1CoZ,gCAAiCH,EACjCE,wBAAyBH,KAIvBK,GAAoB,SACxBR,EACA9E,EACAgF,EACAC,GAEA,OAAIH,EACK7Y,YAAS,2BAA4B,CAC1CkZ,yCAA0CH,EAC1CI,wBAAyBH,IAGpBhZ,YAAS8T,GAAiCC,KAWtC9B,oBAPf,SAAyBhO,GACvB,MAAO,CACL4U,iBAAkBhE,YAAsB5Q,GACxCqV,eAAgBpH,YAAyBjO,GACzC6U,kBAAmBS,YAAmBtV,MAG3BgO,EA7If,YAYyB,IAXvBuH,EAWsB,EAXtBA,MACAzF,EAUsB,EAVtBA,OACA0F,EASsB,EATtBA,SACAC,EAQsB,EARtBA,gBACAJ,EAOsB,EAPtBA,eACAR,EAMsB,EANtBA,kBACAE,EAKsB,EALtBA,sCAKsB,IAJtBC,qCAIsB,MAJU,EAIV,EAHtBF,EAGsB,EAHtBA,+CAGsB,IAFtBY,uBAEsB,MAFJ,EAEI,EADtBd,EACsB,EADtBA,iBAGMe,EAAkBhF,aAASb,GAC3B8F,EAAkBC,aAAS/F,GACjC,OACE,kBAACG,GAAD,KACE,kBAACE,GAAD,CAAc2F,UAlCkB,GAkCIlD,WAAW,KAAK/Q,UAAU,iBAC3D0T,GAEH,kBAAC/E,GAAD,KACGiF,GACC,kBAAC5E,GAAD,CACEF,aAEM0E,GAAkBM,GACnBN,GAAkBR,GAAqBc,GAG5C/E,sBAAuBgE,GAEtBe,IAAoBf,GACnB,kBAAC9D,GAAD,CACEH,aAEM0E,GAAkBM,GACnBN,GAAkBR,GAAqBc,IAI5C,kBAAC,IAAD,CACE1Y,KAAK,KACL0V,MAAM,kBACNoD,WAAW,eACX9T,KAAK,WAIV2T,IAAoBhB,GACnB,kBAAC,IAAD,CACE3X,KAAK,QACL0V,MAAM,YACNoD,WAAW,mBACX9T,KAAK,UAGT,kBAACqO,GAAD,KACG+E,EACGV,GACEC,EACA9E,EACA+E,EACAC,EACAC,EACAC,GAEFI,GACER,EACA9E,EACAgF,EACAC,MAMd,kBAACvE,GAAD,CAAQ3O,UAAU,eAChB,kBAACyO,GAAD,KAAiBvU,YAAS,oBAC1B,kBAACwU,GAAD,CAAgBtT,KAAK,cAAcgF,KAAM,EAAG0Q,MAAM,eAEnD0C,GAAkBR,GAAqB,kBAAC,GAAD,CAAaW,SAAUA,EAAUtJ,QAAS,IACjFmJ,IAAmBR,GAClB,kBAAC,GAAD,CAAaW,SAAUE,EAAiBM,cAAc,YAAY9J,QAAS,MAE3EmJ,GAAkB,kBAAC,GAAD,CAAaG,SAAUA,EAAUtJ,QAAS,QCqBrD8B,oBATf,SAAyBhO,GACvB,MAAO,CACLqV,eAAgBpH,YAAyBjO,GACzC6U,kBAAmBS,YAAmBtV,GACtC4U,iBAAkBhE,YAAsB5Q,GACxCiW,0BAA2BA,YAA0BjW,MAI1CgO,EAlGsB,SAAC,GAUO,IAT3CJ,EAS0C,EAT1CA,SACAsI,EAQ0C,EAR1CA,mBACAC,EAO0C,EAP1CA,4BACAC,EAM0C,EAN1CA,eAM0C,IAL1CC,yBAK0C,aAJ1ChB,sBAI0C,aAH1CR,yBAG0C,aAF1CD,wBAE0C,aAD1CqB,iCAC0C,SAEpCK,EAnCwB,SAACxV,GAC/B,IAAIwV,EAA4B,GAMhC,OALIxV,EAJiC,IAKnCwV,EAAgBC,MAAM7Z,KAAK,CAAEoE,OALM,EAK4BA,IAAU,SAAC0V,EAAGjC,GAAJ,OACvE,gBAACpD,GAAD,CAAkBxO,IAAK4R,EAAQzT,EAAQuQ,SAAS,QAG7CiF,EA4BeG,CADH7I,EAAX9M,QAGR,OACE,gBAACmQ,GAAD,KACGrD,EAAS8I,KAAI,SAAC/J,EAAS4H,GACtB,IAAMoC,EAAahK,EAAQiK,UAAU,GAEnCpb,EAWEmR,EAXFnR,GACAyY,EAUEtH,EAVFsH,SACAnE,EASEnD,EATFmD,OACA4C,EAQE/F,EARF+F,kBACAmE,EAOElK,EAPFkK,MACAtB,EAME5I,EANF4I,MACAE,EAKE9I,EALF8I,gBACAV,EAIEpI,EAJFoI,sCACAD,EAGEnI,EAHFmI,+CACAE,EAEErI,EAFFqI,8BACAU,EACE/I,EADF+I,gBAUF,OACE,gBAACvE,GAAD,CAAkBxO,IAAK4R,GACrB,gBAACuC,GAAA,EAAD,CACEC,QAAS,CACPva,KAAMwa,KAAqBC,QAC3BC,SAAUC,KAA0BC,MACpC5b,KACA+Z,UAGF,gBAAChE,GAAD,CACEF,SAAS,EACTtS,UAAS,UAAKhD,YAAS,8BAAd,YAA+CwZ,EAA/C,YAAwDxZ,YAC/D8T,GAAiCC,KAEnCa,SArBF0E,KACQR,IAAqBlE,aAASb,IAEnCa,aAASb,GAmBV3S,SAAU,EACVgF,QAAS,kBACPuQ,GAAqBuD,EACjBE,EAA4B3a,EAAI6a,GAChCH,EAAmB1a,EAAImb,EAAYN,IAEzCzF,sBAAuBgE,EACvBjT,IAAKyU,GAEL,gBAAC,GAAD,CAAcnC,SAAUA,IACxB,gBAAC,GAAD,CACEuB,SAAUqB,EACVnB,gBAAiBA,EACjBH,MAAOA,EACPzF,OAAQA,EACR2F,gBAAiBA,EACjBV,sCAAuCA,EACvCC,8BAA+BA,EAC/BF,+CACEA,KAILpC,GAAqBuD,GACpB,gBAAC,GAAD,CAA0BvD,kBAAmBA,SAM7B,IAAzB4D,EAAcxV,QAAgBwV,EAAcI,KAAI,SAAAW,GAAK,OAAIA,S,q/FCxHzD,IAAM/D,GAAYxW,UAAO6P,QAAV,MAQlB,SAAAtR,GAAK,OAAIic,aAAoBjc,EAAMa,MAAMC,OAAOob,2BAChD5Z,IAAMmU,OATY,MAYC0F,IAAe,IAMzBC,GAAsB3a,UAAO2B,IAAV,KAK5Bd,IAAMuS,MALsB,MAQ5BvS,IAAMmU,OARsB,MAW5BnU,IAAMC,OAXsB,OAgBnB8Z,GAAoB5a,UAAO2B,IAAV,KAIxBkZ,KACO,SAAAtc,GAAK,OAAIA,EAAMa,MAAMC,OAAOob,0BAUrC5Z,IAAM0S,OAfoB,OAyBjBuH,GAAoB9a,UAAO2B,IAAV,MAUjBoZ,GAAc/a,UAAO2B,IAAV,MAQXqZ,GAAahb,UAAOmW,IAAIjW,OAAM,SAAC3B,GAAD,MAA4B,CACrEgM,IAAKhM,EAAM0c,QACXC,IAAK3c,EAAM2c,OAFalb,CAAH,KAOnBa,IAAMmU,OAPa,MAYnBnU,IAAMC,OAZa,OAkBVqa,GAA0Bnb,UAAO2B,IAAV,MAMvByZ,GAAqBpb,kBAAOiT,IAAPjT,CAAH,MAIf,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOob,wBAAyB,OAWvEY,GAAuBrb,kBAAOsb,IAAPtb,CAAH,MAIjB,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOob,wBAAyB,OAGvEc,GAAkBvb,kBAAO8B,IAAP9B,CAAH,MAQjB,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOob,2BAI1Be,GAAmBxb,UAAO2B,IAAV,MAMhB8Z,GAAYzb,kBAAOyB,KAAPzB,CAAH,MACX,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOob,2BCzE1BiB,GAAb,YAGE,WAAYnd,GAAgC,IAAD,+BACzC,8CAAMA,KAHRod,kBAE2C,IAK3CC,sBAAwB,SAACC,GAAD,OACtB,gBAACL,GAAD,KACE,gBAACC,GAAD,CAAWtW,KAAM,GAAIhF,KAAK,UAC1B,gBAAC,IAAD,CAAMsY,MAAO,QAAS3C,WAAW,IAAIgG,UAAQ,EAAC1W,YAAU,qBAAxD,UACMnG,YAAS,WADf,aAC8B4c,EAD9B,YAC2C5c,YAAS,iBATb,EAc3C8c,sBAAwB,SACtBC,EACAC,EACAC,GAGI,IAFJ3D,EAEG,wDADHR,EACG,wDACH,OAAIA,EACK9Y,YAAS,mBAAoB,CAClCkd,eAAgBH,IAGhBzD,EACKtZ,YAAS,kCAAmC,CACjDmd,uBAAwBH,EACxBI,eAAgBH,IAGXjd,YAAS,mBAAoB,CAClCkd,eAAgBH,KAjCqB,EAsC3CM,YAAc,WAAe,IAAD,EAMtB,EAAK/d,MAJPga,EAFwB,EAExBA,eACAyD,EAHwB,EAGxBA,eACAO,EAJwB,EAIxBA,0BAGF,OAP0B,EAKxBxE,kBAGOiE,EAEFzD,EAAiBgE,EAA6BP,GAhDZ,EAmD3CQ,sBAAwB,WAAO,IAAD,EACkB,EAAKje,MAA3Cga,EADoB,EACpBA,eAER,OAH4B,EACJR,kBAGf,CACL3I,QAAS,EACT8J,cAAe,gBAGfX,EACK,CACLnJ,QAAS,GACT8J,cAAe,2BAGV,CACL9J,QAAS,EACT8J,cAAe,iBApEsB,EAyE3CuD,kCAAoC,SAClClE,EACAyD,EACAO,EACAG,GAJkC,+DAOlC,gBAACrB,GAAD,eACEsB,aAAc,EAAKhB,aACnBjD,SAAU,EAAK4D,cACfM,WAAYF,GACR,EAAKF,2BAlFX,EAAKb,aAAe5V,cAFqB,EAH7C,wEA2FY,IAAD,EAqBHvC,KAAKjF,MAnBPka,EAFK,EAELA,MACAoE,EAHK,EAGLA,cACAC,EAJK,EAILA,mBACAhM,EALK,EAKLA,SALK,IAMLkL,sBANK,MAMY,EANZ,MAOLU,oBAPK,MAOU,EAPV,EAQL5E,EARK,EAQLA,iBACAiF,EATK,EASLA,oBATK,IAULC,mCAVK,MAUyB,EAVzB,MAWLC,6BAXK,MAWmB,EAXnB,EAYL1E,EAZK,EAYLA,eACA2D,EAbK,EAaLA,6BAbK,IAcLD,oCAdK,MAc0B,EAd1B,EAeLM,EAfK,EAeLA,0BACAxE,EAhBK,EAgBLA,kBACAmF,EAjBK,EAiBLA,eACArB,EAlBK,EAkBLA,UACAsB,EAnBK,EAmBLA,eACAC,EApBK,EAoBLA,aAGF,OACE,gBAAC,GAAD,CAAWvY,IAAKrB,KAAKmY,cACnB,gBAAChB,GAAD,KACE,gBAACC,GAAD,KACE,gBAACG,GAAD,KACE,gBAACC,GAAD,CAAYC,QAAS6B,EAAoB5B,IAAKjc,YAAS,uBAEzD,gBAAC+a,GAAA,EAAD,CACEC,QAAS,CACPva,KAAMwa,KAAqBmD,OAC3BjD,SAAUC,KAA0BC,OAEtCgD,SAAUC,MAEV,gBAAC,IAAD,CAAM9E,MAAOA,EAAO3C,WAAW,KAAKgG,UAAQ,EAACzb,UAAW,EAAGmd,aAAa,GACrE/E,IAGJuE,EAA8B,EAC7B,gCACGlF,GACC,gCACGtU,KAAKiZ,kCACJlE,EACAyD,EACAO,EACAG,EACA3E,GAEF,gBAACwD,GAAD,CAAiBnW,YAAU,yBACxB5B,KAAKuY,sBACJC,EACAC,EACAC,EACA3D,EACAR,MAKND,GACA,gCAoClB,SAA+BhH,EAAeyH,GAAqD,IAA5BR,EAA2B,wDAChG,OACE,gBAACoD,GAAD,KACGrK,EAAS8I,KAAI,SAAC/J,GACb,GAAIA,EAAQ8I,gBAAiB,CAAC,IACpBja,EAAOmR,EAAPnR,GACR,OAAImV,aAAShE,EAAQmD,QACZuF,EACLkF,GAAqC1F,EAAmBlI,EAASnR,GAEjE,gBAAC0c,GAAD,CAAoBvV,IAAKnH,EAAIga,SAAU,MAGlCH,EACLkF,GAAqC1F,EAAmBlI,EAASnR,GAEjE,gBAAC0c,GAAD,CAAoBvV,IAAKnH,EAAIga,SAAU,IAI7C,OAAO,MAvDMgF,CAAsB5M,EAAUyH,EAAgBR,GACjD,gBAACwD,GAAD,CAAiBnW,YAAU,yBACxBmT,GACCR,GACA9Y,YAAS,+BAAgC,CACvC0e,qBAAsBZ,EACtBa,cAAeR,IAElB7E,IACER,GACD9Y,YAAS,8BAA+B,CACtC0e,qBAAsBV,EACtBW,cAAeR,KAEjB7E,GACAtZ,YAAS,+BAAgC,CACvC0e,qBAAsBZ,EACtBa,cAAeR,OAO3B,gBAAC,IAAD,CAAWvO,OAAQ,EAAGO,QAAS,GAAKyO,OAAQ,GAAIhI,MAAM,4BAEvDqH,IAAmBC,GAAkB3Z,KAAKoY,sBAAsBC,GAwD7E,SAAkCgB,GAChC,OACEpD,MAAMqE,QAAQjB,IACW,IAAzBA,EAAc7Y,QACZ,gBAAC,WAAD,KACE,gBAACgW,GAAA,EAAD,CACEC,QAAS,CACPva,KAAMwa,KAAqBmD,OAC3BjD,SAAUC,KAA0B0D,eAGtC,gBAACjD,GAAD,KACE,gBAACkD,GAAA,EAAD,CAAUlC,UAAQ,EAACmC,MAAOpB,EAAeqB,aAAc,OAnEtDC,CAAyBtB,UAvLtC,GAAuC9W,aAyNvC,SAAS0X,GAAqC1F,EAA4BlI,EAAcnR,GACtF,OAAIqZ,EACElE,aAAShE,EAAQmD,QACZ,gBAACoI,GAAD,CAAoBvV,IAAKnH,EAAIga,SAAU,MAEzC,gBAAC0C,GAAD,CAAoBvV,IAAKnH,EAAIga,SAAU,IAE1C7I,EAAQuO,kBAER,gBAAChD,GAAD,CACEvV,IAAKnH,EACLga,SAAU,IACVQ,cAAc,0BACd9J,QAAS,KAIR,gBAACgM,GAAD,CAAoBvV,IAAKnH,EAAIga,SAAU,IA8CnCxH,oBAtBf,SAAyBhO,GACvB,MAAO,CACL4Z,mBAAoBuB,YAAmBnb,GACvCuV,MAAO6F,YAAepb,GACtB2Z,cAAe0B,YAAuBrb,GACtC8Y,eAAgBwC,YAAStb,GACzBwZ,aAAc+B,YAAqBvb,GACnC4U,iBAAkBhE,YAAsB5Q,GACxC8Z,4BAA6B0B,aAA+Bxb,GAC5D6Z,oBAAqB4B,aAAuBzb,GAC5C+Z,sBAAuB2B,aAAyB1b,GAChDgZ,6BAA8B2C,YAAgC3b,GAC9D+Y,6BAA8B6C,YAAwC5b,GACtEqZ,0BAA2BwC,YAA6B7b,GACxDqV,eAAgBpH,YAAyBjO,GACzC6U,kBAAmBS,YAAmBtV,GACtCga,eAAgB8B,YAAgB9b,GAChC2Y,UAAWoD,aAAwBC,YAAchc,GAAQ,OACzDia,eAAgBgC,YAAsBjc,GACtCka,aAAcgC,aAAiBlc,MAGpBgO,CAAyBwK,I,45EC/VjC,IAAM2D,GAAsBrf,UAAO2B,IAAV,KAK5Bd,IAAMC,OALsB,OAUnBwe,GAAkBtf,UAAOuf,GAAGrf,OAAM,iBAAO,CACpD,YAAa,uBADgBF,CAAH,KAGxBsT,KACO,SAAA/U,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAOnCE,IAAMC,OAXkB,OAef0e,GAAyBxf,UAAOkQ,EAAEhQ,OAAM,iBAAO,CAC1D,YAAa,kBADuBF,CAAH,KAG/Byf,KAESC,GAA0B1f,UAAOoU,GAAGlU,MAAM,CACrD,YAAa,8BADwBF,CAAH,KAOhCa,IAAMC,OAP0B,OAYvB6e,GAA6B3f,UAAOsU,GAAV,KAQVnV,YAAeqV,IAAuB,KAE/D3T,IAAMC,OAV6B,OAoB1B8e,GAAyB5f,kBAAOyB,IAAPzB,CAAH,MACtB6f,GAAyB7f,UAAOkQ,EAAV,KAC/BxP,KAGO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAG7DE,IAAMC,OAPyB,OAWtBgf,GAAsB9f,UAAO+f,OAAV,MAIrB,SAAAxhB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAQpDqf,GAAoBhgB,kBAAOsQ,KAAQpQ,OAAM,SAAC3B,GAAD,MAAoC,CACxF,YAAa,sBACb8B,SAAU9B,EAAM8B,YAFeL,CAAH,KAc1Ba,IAAMC,OAdoB,OC5Dfmf,GAhBuB,SAAC,GAIH,IANlBC,EAGhBC,EAGiC,EAHjCA,SACAC,EAEiC,EAFjCA,WACAC,EACiC,EADjCA,YAEMC,EAAa,WAAuB,IAAjBD,EAAqBE,IAAuBF,GACrE,OACE,gBAACV,GAAD,KACE,gBAACC,GAAD,CAAwBzf,KAAMggB,EAAUhb,KAAM,GAAI0Q,MAAM,cACxD,gBAACgK,GAAD,KACE,gBAACC,GAAD,CAAqBU,yBAZXN,EAY6CI,EAZ3B,CAAEG,OAAQP,MAarCE,KCwBIM,GAAb,8MACEC,aAAe,SAACzD,GACd,OAAIA,EACKje,YAAS,SAEXA,YAAS,WALpB,EAQE2hB,SAAW,SAAC1D,GAA4C,IAAnBrB,EAAkB,uDAAN,EAC/C,OAAIqB,EACKrB,GAED,GAZZ,EAeEgF,eAAiB,WAAO,IAAD,EAQjB,EAAKtiB,MANPub,EAFmB,EAEnBA,UACAgH,EAHmB,EAGnBA,mBACAC,EAJmB,EAInBA,sBACA3H,EALmB,EAKnBA,mBACA4H,EANmB,EAMnBA,uBACAzH,EAPmB,EAOnBA,kBAEF,GAAIwH,KAA2BD,EAAoB,CAAC,IAAD,EACvBG,YAAsBnH,GAAxCpb,EADyC,EACzCA,GACR0a,EAFiD,EACrC8H,UACkBxiB,EAAI6a,QAElCyH,KA5BN,EAgCEG,YAAc,WAAO,IAAD,IAC2C,EAAK5iB,MAA1Dub,EADU,EACVA,UAAWV,EADD,EACCA,mBAAoBG,EADrB,EACqBA,kBACjCM,EAAU,UAAGC,EAAU,UAAb,aAAG,EAAcpb,GAEjC0a,EADsBU,EAAU,GAAxBoH,UACsBrH,EAAYN,IApC9C,EAuCE6H,6BAA+B,SAACC,EAA0BC,GAAgC,IAAD,EAOnF,EAAK/iB,MALPgjB,EAFqF,EAErFA,iBACA7E,EAHqF,EAGrFA,aACAb,EAJqF,EAIrFA,UAJqF,IAKrFqB,sBALqF,SAMrFsE,EANqF,EAMrFA,iBAEIC,EAA+BxiB,YACnC,mEACA,CACEsiB,mBACA7E,iBAGEgF,EAA4BziB,YAChC,oEACA,CACEsiB,mBACAI,MAAO9F,EACPwF,mBACA3E,iBAGEkF,EAAiB3iB,YAAS,qDAAsD,CACpFsiB,mBACAI,MAAO9F,EACPa,iBAEImF,EAAoB5iB,YAAS,wDAAyD,CAC1FsiB,mBACAF,mBACA3E,iBAEIoF,EAAiB7iB,YAAS,oCAC1B8iB,EAAW9iB,YAAS,eA8B1B,OAAIsiB,GAAoB,EACftiB,YAAS,mDAGdie,IAAmBoE,EA/BjBE,EACKI,EAEH,GAAN,OAAUA,EAAV,YAA4BE,EAA5B,YAA8CC,GAgC5CT,IAAsBpE,EA5BpBsE,EACKK,EAEH,GAAN,OAAUA,EAAV,YAA+BE,GA6B7B7E,GAAkBoE,EAzBhBE,EACKE,EAEH,GAAN,OAAUA,EAAV,YAAuCI,EAAvC,YAAyDC,GAIrDP,EACKC,EAEH,GAAN,OAAUA,EAAV,YAA0CM,IArGhD,0EA2HY,IAAD,EAWHve,KAAKjF,MATPgjB,EAFK,EAELA,iBACAC,EAHK,EAGLA,iBACAQ,EAJK,EAILA,SACA9E,EALK,EAKLA,eACArB,EANK,EAMLA,UACAyF,EAPK,EAOLA,kBACAW,EARK,EAQLA,sBACAC,EATK,EASLA,eACAC,EAVK,EAULA,qBAGIC,EAAuB,WAC3B,OAAId,EACKa,EACHF,EAAwBC,EACxBD,GAEE,GAEV,OACE,gBAAC5C,GAAD,KACE,gBAACC,GAAD,WAAkC,KAAb0C,EAAkB,QAAUA,EAAjD,KACA,gBAACxC,GAAD,KACGhc,KAAK4d,6BAA6BgB,IAAwBd,IAE7D,gBAAC5B,GAAD,KACE,gBAAC,GAAD,CACES,SAAS,eACTE,YAAakB,EACbnB,WAAYnhB,YAAS,iBAEvB,gBAAC,GAAD,CACEkhB,SAAS,QACTE,YAAa7c,KAAKod,SAAS1D,EAAgBrB,GAC3CuE,WAAY5c,KAAKmd,aAAazD,KAEhC,gBAAC,GAAD,CACEiD,SAAS,SACTE,YAAa+B,IACbhC,WAAYnhB,YAAS,iBAGzB,gBAAC,IAAD,CAAWmQ,QAAS,IAAMyG,MAAM,YAAYhH,OAAQ,EAAGgP,OAAQ,IAC/D,gBAACmC,GAAD,CACEthB,GAAI2jB,IAAoBC,2BACxBjd,QAASmc,EAAmBhe,KAAKqd,eAAiBrd,KAAK2d,YACvD9gB,SAAU,EACVsU,SAAU4M,GAAoB,GAE7BC,EACGviB,YAAS,qBACTA,YAAS,sCAhLvB,GAAkC8G,aAwMnBmL,oBAjBf,SAAyBhO,GACvB,MAAO,CACL2Y,UAAWoD,aAAwBC,YAAchc,GAAQ,OACzD4W,UAAWyI,YAAarf,GACxBqe,iBAAkBiB,YAAoBtf,GACtCwZ,aAAc+B,YAAqBvb,GACnCse,iBAAkBiB,YAAqBvf,GACvC4d,mBAAoB4B,YAAaxf,GACjC8e,SAAUW,aAAQzf,GAClBoe,kBAAmBsB,YAAkB1f,GACrC+e,sBAAuBY,YAAyB3f,GAChDga,eAAgB8B,YAAgB9b,GAChCgf,eAAgBY,YAAiB5f,GACjCif,qBAAsBhR,YAAyBjO,MAIpCgO,CAAyBwP,I,g2DCrPjC,IAAMqC,GAAwB/iB,UAAO2B,IAAV,KAG9Bd,IAAMmU,OAHwB,OASrBgO,GAAsBhjB,kBAAOijB,KAAPjjB,CAAH,KAC5Ba,IAAMmU,OADsB,OAanBkO,GAAsBljB,kBAAOmjB,KAAPnjB,CAAH,MAQ5B,SAAAzB,GAAK,OAAI6kB,aAAe7kB,EAAM8kB,WAAWzZ,QACzC/I,IAAMmU,OATsB,OA4BnBsO,IAVYtjB,UAAO2B,IAAV,KAIlB6Y,eACmBE,IAAe,IAKF1a,UAAO6P,QAAV,KAK7B2K,eACA3Z,IAAMuS,MANuB,MAS7BvS,IAAM0S,OATuB,MAY7B1S,IAAM0iB,MAZuB,MAgB7B1iB,IAAMmU,OAhBuB,MAoB7BnU,IAAMC,OApBuB,Q,6BCQpB0iB,GAAb,YAIE,WAAYjlB,GAAuB,IAAD,+BAChC,8CAAMA,KAJRklB,iBAGkC,IAFlCC,2BAEkC,IAMlCpK,eAAiB,SAACzU,GAChB,EAAK4e,YAAYE,KAAK9e,IAPU,EAUlC+e,kBAAoB,kBAAM,EAAKH,YAAY,GAAGI,SAVZ,EAYlCC,wBAA0B,WACxB,IAAMC,EAAUhd,SAASid,eAAe3B,IAAoBC,4BACxDyB,GACFA,EAAQF,SAfsB,EAmBlCI,aAAe,WAEb,OAD2B,EAAK1lB,MAAxB4e,eACgB,EAAK2G,0BAA4B,EAAKF,qBArB9B,EAwBlCxK,mBAAqB,SAAC8H,EAAmBrH,EAAoBN,GAAgC,IAAD,EACN,EAAKhb,MAAjF2e,EADkF,EAClFA,eAAgB3L,EADkE,EAClEA,aAAc2S,EADoD,EACpDA,gBAAiBC,EADmC,EACnCA,YAAaC,EADsB,EACtBA,aAElElH,GACCkH,IAAgB7R,IAAY8R,aAAeD,IAAgB7R,IAAY+R,QAExE/S,EAAagT,gBAAgBJ,GAC7B5S,EAAaiT,cAEXjL,GACF,EAAKhb,MAAMsT,cAAc4S,aAAevD,EAAWrH,IACnD,EAAKtb,MAAMmmB,WAAW7K,GACtBqK,EAAgBS,aAAa9K,IAE7B,EAAKtb,MAAMsT,cAAc4S,aAAevD,EAAWrH,KAtCrB,EA0ClCR,4BAA8B,SAAC6H,EAAmB3H,GAC5CA,GACF,EAAKhb,MAAMsT,cAAc+S,aAAwB1D,IACjD,EAAK3iB,MAAMmmB,WAAWxD,IAEtB,EAAK3iB,MAAMsT,cAAc+S,aAAwB1D,KA/CnB,EAmDlC2D,mBAAqB,YAEnBA,EAD+B,EAAKtmB,MAA5BsmB,uBApDwB,EAwDlCC,4BAA8B,WAAO,IAC3BvL,EAAsB,EAAKhb,MAA3Bgb,kBACR,OACE,gBAAC,GAAD,CACEH,mBAAoB,EAAKA,mBACzB4H,uBAAwB,EAAK6D,mBAC7B9D,sBAAuB,EAAKxiB,MAAMwiB,sBAClCxH,kBAAmBA,KA/DS,EAoElCwL,4BAA8B,WAAO,IAAD,EACM,EAAKxmB,MAArCuS,EAD0B,EAC1BA,SAAUyI,EADgB,EAChBA,kBAClB,OACE,gBAAC,GAAD,CACEzI,SAAUA,EACVsI,mBAAoB,EAAKA,mBACzBC,4BAA6B,EAAKA,4BAClCE,kBAAmBA,EACnBD,eAAgB,EAAKA,kBA1EzB,EAAKmK,YAAc,GACnB,EAAKC,sBAAwB3d,cAHG,EAJpC,mFAsFIgB,SAAS0R,MAAT,UAAoBxZ,YAAS,wBAA7B,cAA0DuE,KAAKjF,MAAMka,SAtFzE,+BAyFY,IAAD,EACyDjV,KAAKjF,MAA7DuS,EADD,EACCA,SAAUuS,EADX,EACWA,WAAYlG,EADvB,EACuBA,eAAgB6H,EADvC,EACuCA,cAC9C,OACE,iCACIA,GAAiB,gBAACC,GAAA,EAAD,CAAe5f,QAAS7B,KAAKygB,eAChD,gBAAClB,GAAD,KACGjS,EAAS9M,OAAS,GACjB,gBAACkf,GAAD,CAAqBG,WAAYA,GAC/B,gBAACC,GAAD,KACGnG,EACG3Z,KAAKshB,8BACLthB,KAAKuhB,gCAIf,gBAAC/B,GAAD,CAAqBK,WAAYA,GAC/B,gBAAC,GAAD,CAAmBvS,SAAUA,WAzGzC,GAA8B/K,aAqJfkL,mBAAeC,aApC9B,SAAyBhO,GACvB,MAAO,CACLuV,MAAO6F,YAAepb,GACtB2Z,cAAe0B,YAAuBrb,GACtC4N,SAAUoU,aAAYhiB,GAAO0W,KAAI,SAAA/J,GAAO,uBACnCA,EADmC,CAEtC8I,gBAAiBA,aAAgBzV,EAAO2M,EAAQnR,IAChDuZ,sCAAuCkN,aACrCjiB,EACA2M,EAAQnR,IAEVwZ,8BAA+BkN,aAAiCliB,EAAO2M,EAAQnR,IAC/EsZ,+CAAgDqN,aAC9CniB,EACA2M,EAAQnR,SAGZ2kB,WAAYiC,YAAcpiB,GAC1Bia,eAAgBgC,YAAsBjc,GACtCqW,kBAAmBgM,YAAwBriB,GAC3C2Y,UAAWoD,aAAwBC,YAAchc,GAAQ,OACzDkhB,YAAaoB,YAAetiB,GAC5Bga,eAAgB8B,YAAgB9b,GAChCihB,YAAasB,YAAgBviB,GAC7B8hB,cAAeU,aAAmBxiB,OAItC,SAA4BoO,GAC1B,MAAO,CACLqU,kBAAmBnU,YAAmBmU,GAAmBrU,GACzD4S,gBAAiB1S,YAAmBoU,GAAuBtU,GAC3DC,aAAcC,YAAmBC,EAAoBH,MAI3BJ,CAA6CsS,K,sBCnN5DqC,KAAf,E,spCCMO,IAAMC,GAAwB9lB,UAAO2B,IAAV,KAC9BjB,KAKO,SAAAnC,GACP,OAAOA,EAAMa,MAAMC,OAAOsB,aAGd,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAK/BmlB,GAAuB/lB,UAAO2B,IAAV,MAEpBqkB,GAAiBhmB,UAAO2B,IAAV,MAMdskB,GAAmBjmB,kBAAOyB,KAAPzB,CAAH,MAKlB,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAIpD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI5BulB,GAAgBlmB,kBAAOsQ,IAAPtQ,CAAH,MAObmmB,GAAuBnmB,kBAAO8B,IAAP9B,CAAH,MAGpBomB,GAAwBpmB,UAAOiU,KAAV,KAC9BoS,KAMO,SAAA9nB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aCrB1B2lB,GAAb,YAQE,WAAY/nB,GAA+B,IAAD,+BACxC,8CAAMA,KALRgoB,gBAI0C,IAF1CC,uBAE0C,IAY1CC,iBAAmB,SAACC,GAClB,EAAK3jB,SAAS,CACZkF,KAAMye,KAdgC,EAkB1C9U,WAAa,WACX,EAAK6U,kBAAiB,GACtBne,YAAW,WACT,EAAKie,WAAWI,QAAQC,SAAS,GAAG/C,UACnC,IAtBqC,EAgF1CgD,qBAAuB,kBAAM5nB,YAAS,yBAhFI,EAkF1C6nB,cAAgB,SAACC,GACX,CAACvhB,IAAKC,MAAMC,cAAeF,IAAKwhB,OAAOthB,eAAeE,SAASmhB,EAAIlhB,IAAIH,gBACzE,EAAKkM,cApFiC,EAwF1CqV,WAAa,WACoB,EAAK1oB,MAA5B2oB,mBAIN,EAAKT,kBAAiB,GAFtB,EAAKU,cA3FiC,EAiG1CC,OAAS,SAACL,GACR,IAAKA,EAAIlhB,IAAK,CAAC,IACLoC,EAAS,EAAK/E,MAAd+E,KACR,EAAKwe,kBAAkBxe,KApGe,EAwG1Cof,qBAAuB,WACrB,IAAMC,EAAgB,EAAK/oB,MAAMa,MADN,EAEc,EAAKb,MAAtC2oB,EAFmB,EAEnBA,mBAAoB7mB,EAFD,EAECA,SAC5B,OACE,gBAAC0lB,GAAD,KACE,gBAACD,GAAD,CACEpnB,GAAG,mBACHsD,KAAK,SACLulB,WAAW,EACXlnB,UAAW,EACXkF,UAAW,SAAAhD,GAAK,OAAI,EAAKukB,cAAcvkB,IACvCnD,MAAOkoB,GAEP,gBAACtB,GAAD,CAAgBnhB,IAAK,EAAK2hB,mBACxB,gBAACP,GAAD,CACEjkB,KAAK,SACLC,UAAWhD,YAAS,mBACpBoB,SAAUA,EACVgF,QAAS,EAAK+hB,OACdjiB,KAAM,GACNhF,KAAK,cACLf,MAAOkoB,IAET,gBAACnB,GAAD,CAAsB/mB,MAAOkoB,EAAexR,WAAW,MACpD7W,YAAS,uCAEZ,gBAACmnB,GAAD,CAAuBhnB,MAAOkoB,EAAeliB,YAAU,uBAAvD,IACInG,YAAS,yBAA0B,CAAEioB,uBADzC,KAIA,gBAAChB,GAAD,CACE7lB,SAAUA,EACVgF,QAAS,EAAKuM,WACdxS,MAAOkoB,EACPliB,YAAU,0BAETnG,YAAS,sBAEZ,gBAACinB,GAAD,CACE7lB,SAAUA,EACVgF,QAAS,EAAK8hB,WACd/nB,MAAOkoB,EACPrV,OAAQC,IAAOC,OAAOqV,UACtBpiB,YAAU,6BAETnG,YAAS,6BArJoB,EA6J1CkoB,WAAa,WACX,EAAK5oB,MAAM8G,WA5JX,EAAKnC,MAAQ,CAAE+E,MAAM,GACrB,EAAKse,WAAaxgB,cAClB,EAAKygB,kBAAoBzgB,cAJe,EAR5C,oFAiCwB,IAAD,OACnBuC,YAAW,WAEP,EAAKpF,MAAM+E,MACX,EAAKue,kBAAkBG,SACvB,EAAKH,kBAAkBG,QAAQC,SAAS5iB,QAExC,EAAKwiB,kBAAkBG,QAAQC,SAAS,GAAG/C,UAE5C,KA1CP,+BA6CY,IACA5b,EAASzE,KAAKN,MAAd+E,KADD,EAE8DzE,KAAKjF,MAAlEkpB,EAFD,EAECA,SAAUP,EAFX,EAEWA,mBAAoBQ,EAF/B,EAE+BA,iBAAkBrnB,EAFjD,EAEiDA,SACxD,OACE,gBAAC,WAAD,KACGonB,GACCC,IACCR,EACC,gBAAC,IAAD,CACExd,MAAO,CAAEC,QAAS,SAClBge,QAAS,QACT1f,KAAMA,EACN2f,eAAgBpkB,KAAKoO,WACrBiW,SAAU,MACVC,aAAc,QACdC,OAAO,EACPC,aAAW,EACXC,KAAMzkB,KAAK6jB,wBAEX,uBAAKxiB,IAAKrB,KAAK+iB,YACb,gBAAC,IAAD,CACElmB,SAAUA,EACVgF,QAAS7B,KAAKyjB,WACdhV,OAAQC,IAAOC,OAAOqV,UACtBpiB,YAAU,gCAET5B,KAAKqjB,0BAKZ,gBAAC,IAAD,CACExmB,SAAUA,EACVgF,QAAS7B,KAAK2jB,WACd/hB,YAAU,gCAET5B,KAAKqjB,8BAjFpB,GAAsC9gB,iBAAzBugB,GAeJtgB,aAAe,CACpBiC,MAAM,EACNwf,UAAU,GAkKCnpB,2BAAU4S,aATzB,SAAyBhO,GACvB,MAAO,CACL7D,OAAQ6oB,YAAUhlB,GAClBwkB,kBAAmBlP,YAAmBtV,GACtCgkB,mBACErI,YAAgC3b,GAAS4b,YAAwC5b,MAI9DgO,CAAyBoV,K,msBClNlD,SAAS6B,GAAe5pB,GACtB,OAAOA,EAAM6pB,uBACTjpB,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,IAC7CH,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,IAG5C,IAAM0nB,GAA2BroB,UAAO2B,IAAIzB,OAAM,SAAC3B,GAAD,MAAoC,CAC3F6pB,uBAAwB7pB,EAAM6pB,0BADQpoB,CAAH,MAGf,SAAAzB,GAAK,OAAI4pB,GAAe5pB,MAGxB,SAAAA,GAAK,OACvBA,EAAM6pB,uBACFjpB,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,IAC7CH,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAKxC2nB,GAAWtoB,kBAAOuoB,KAAYroB,OAAM,SAAC3B,GAAD,MAAoC,CACnF6pB,uBAAwB7pB,EAAM6pB,0BADRpoB,CAAH,MAGC,SAAAzB,GAAK,OAAI4pB,GAAe5pB,MAOjCiqB,GAA6BxoB,kBAAO8B,KAAM5B,MAAM,CAC3D,YAAa,2BAD2BF,CAAH,KAGnCU,KAMO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAE7DE,IAAMC,OAX6B,OCX1B2nB,GAAb,sLACY,IAAD,EAWHjlB,KAAKjF,MATPga,EAFK,EAELA,eACA+I,EAHK,EAGLA,kBACAoH,EAJK,EAILA,gBACAC,EALK,EAKLA,aACAC,EANK,EAMLA,cACA1I,EAPK,EAOLA,KAPK,IAQL2I,sBARK,aASLC,gCATK,MASsB,EATtB,EAULC,EAVK,EAULA,8BAGIC,EAAoBN,EAAkBC,EACxCM,EAAqB,UAAMhqB,YAAS,wBAAf,YAA0C+pB,GAEzC,IAAtBA,IAA4BJ,GAAiBF,EAAkB,IACjEO,EAAwBhqB,YAAS,6BAGX,IAApBypB,IACFO,EAAwBhqB,YAAS,qCAGnC,IAAMiqB,EACJL,GACCtQ,GACC+I,GACA0H,EAAoB,IACnBA,EAAoBN,GAAuC,IAApBA,IAEvCG,GAAkBE,GACrBA,EAA8BG,GAGhC,IAAMd,EAAyBS,EACE,IAA7BC,EACsB,IAAtBE,EACJ,OACEE,GACE,kBAACb,GAAD,CAA0BD,uBAAwBA,GAChD,kBAACE,GAAD,CACEnoB,KAAK,OACL0V,MAAM,YACNoD,WAAW,YACX9T,KAAK,QACLgkB,MAAOC,IAAKC,OAAOC,eACnBlB,uBAAwBA,IAE1B,kBAACI,GAAD,KAA6BtI,GAAQ+I,QAlD/C,GAA4CljB,IAAMwjB,WA+DnCrY,gBANS,SAAChO,GAAD,MAA0B,CAChDqV,eAAgBpH,YAAyBjO,GACzCoe,kBAAmBsB,YAAkB1f,GACrCwlB,gBAAiB7F,YAAyB3f,GAC1CylB,aAAc7F,YAAiB5f,MAElBgO,CAAyBuX,I,6mDCjFjC,IAAMe,GAAQxpB,kBAAO8B,IAAP9B,CAAH,KACdsT,KAOE,SAAA/U,GAAK,OACJA,EAAMkpB,UACPzmB,cADA,KAEW7B,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,IACpDY,aAAW,SACXkoB,KAESlrB,EAAMa,MAAMC,OAAOsB,UAGnBpC,EAAMa,MAAMC,OAAOsB,cAYzB6V,GAAYxW,UAAO0U,OAAOxU,OAAM,SAAC3B,GAAD,MAA4B,CACvE8B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,aAFGjC,CAAH,KAIlBkC,KAGY,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,mBACTzB,YAAeqV,IAAuB,KAK7DgV,IAEC,SAAAjrB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAGT6oB,GAWHrqB,YAAeqV,IAAuB,KAG/D,SAAAjW,GAAK,OACLA,EAAMkpB,UACNzmB,cADA,KASwBzC,EAAMa,MAAMC,OAAOC,cAUlCoqB,GAAc1pB,kBAAOyB,KAAMvB,OAAM,SAAC3B,GAAD,MAA8B,CAC1E8B,SAAU9B,EAAM8B,SAChB2B,KAAM,SACN,aAAczD,EAAM0D,aAHKjC,CAAH,MAQb,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAC7D8oB,MACA,SAAAlrB,GAAK,OACLA,EAAMorB,aACN3oB,cADA,SAMS,SAAAzC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI5B,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aCpG5BipB,GAAb,sLAOY,IAAD,EAQHpmB,KAAKjF,MANPsrB,EAFK,EAELA,kBACAC,EAHK,EAGLA,KACArC,EAJK,EAILA,SACAsC,EALK,EAKLA,UACA9nB,EANK,EAMLA,UACA5B,EAPK,EAOLA,SAEF,OACEypB,IACCC,GACEtC,GACC,gBAACiC,GAAD,eACEznB,UAAWA,EACX5B,SAAUA,IACJonB,GAAY,CAChBpiB,QAASwkB,EACTtkB,UAAW,SAAChD,GACQ,UAAdA,EAAMsD,KACRgkB,MAPR,CAWE1pB,KAAK,QACLgF,KAAM,MAIV,gBAAC,GAAD,CACElD,UAAWA,EACXwlB,SAAUA,EACVpnB,SAAUA,EACVgF,QAASwkB,GAET,gBAAC,GAAD,CAAOpC,SAAUA,EAAU3R,WAAW,KAAKkU,UAAQ,GAChD/qB,YAAS,oBA3CtB,GAAkC8G,iBAArB6jB,GACJ5jB,aAAe,CACpB8jB,MAAM,EACNrC,UAAU,EACVsC,WAAW,GA+CAH,U,02CCzDf,IAAMK,GAAUjpB,cAAH,MACF,SAAAzC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAC7DY,aAAW,UAMF2oB,GAAiBlqB,kBAAOyB,IAAPzB,CAAH,KAEvBiqB,GACAR,MACA,SAAAlrB,GAAK,OACLA,EAAMorB,aACN3oB,cADA,SAMS,SAAAzC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI5BwpB,GAAkBnqB,kBAAO8B,IAAP9B,CAAH,KACxBsT,IAGE2W,IAgBOG,GAAmBpqB,UAAO0U,OAAOxU,OAAM,SAAC3B,GAAD,MAAmC,CACrF8B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,UACpB,YAAa,sBAHiBjC,CAAH,KAKzBkC,KAEA,SAAA3D,GAAK,OACJA,EAAMorB,aACP3oB,cADA,SAMA,SAAAzC,GAAK,OACLA,EAAMorB,aACN3oB,cADA,QASAyoB,KAEmBY,IAAIC,eAAiBD,IAAIE,WAExCL,GAIAC,GAMFA,GAAoBD,IACX,SAAA3rB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAIrCwpB,GAAoBD,IACX,SAAA3rB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aCrD5B6pB,GA9Bf,sLACY,IAAD,EAC+DhnB,KAAKjF,MAAnEksB,EADD,EACCA,gBAAiBC,EADlB,EACkBA,YADlB,IAC+BX,iBAD/B,SACkD1pB,EADlD,EACkDA,SACzD,OAAO0pB,EACL,kBAACK,GAAD,CACE/kB,QAASolB,EACTpqB,SAAUA,EACV4B,UAAS,UAAKhD,YAAS,uBACvB0qB,YAAaI,EACb3kB,YAAU,oBAEV,kBAAC8kB,GAAD,CAAgB/pB,KAAK,WAAWwpB,aAAW,KAG7C,kBAACS,GAAD,CACE/kB,QAASolB,EACTpqB,SAAUA,EACV4B,UAAS,UAAKhD,YAAS,uBACvB0qB,YAAaI,EACb3kB,YAAU,oBAEV,kBAAC8kB,GAAD,CAAgB/pB,KAAK,aACrB,kBAACgqB,GAAD,CAAiBrU,WAAW,KAAKkD,UAAW,IACzC0R,QAvBX,GAA4BnB,a,0vCCN5B,IAAMoB,GAAc3pB,cAAH,MACK,SAAAzC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAY/DiqB,GAAe5qB,kBAAOuoB,KAAYroB,OAAM,SAAC3B,GAAD,MAA+B,CAClF,aAAcA,EAAM0D,aADMjC,CAAH,KAMnB6qB,MACO,SAAAtsB,GAAK,OAAIA,EAAMa,MAAMC,OAAOd,EAAMusB,cAQlCC,IAJwB/qB,kBAAOuoB,IAAPvoB,CAAH,MAITA,kBAAO8B,IAAP9B,CAAH,OAcTgrB,GAAehrB,UAAOsU,GAAGpU,OAAM,SAAC3B,GAAD,MAA+B,CACzE,aAAcA,EAAM0D,UACpBD,KAAMzD,EAAMyD,KACZ3B,SAAU9B,EAAM8B,YAHUL,CAAH,MASrB,SAAAzB,GAAK,OACLA,EAAMkpB,UACNzmB,cADA,KAEI2pB,GACAI,GACSxsB,EAAMa,MAAMC,OAAOsB,UASRpC,EAAMa,MAAMC,OAAOC,cAG3C,SAAAf,GAAK,OACJA,EAAMkpB,UACPzmB,cADA,KAEIyoB,KACAsB,GACSxsB,EAAMsV,SACX1U,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,GAAK,CAAEsqB,WAAW,IAC/D1sB,EAAMa,MAAMC,OAAOsB,UAGrBgqB,GAEMI,OC3DKG,G,8LAIFC,EAAqBC,EAA8B3S,GAClE,OAAO0S,EACHC,EAAmB,UACdnsB,YAAS,iCADK,YAC+BwZ,GAD/B,UAEdxZ,YAAS,kCAFK,YAEgCwZ,GAHtC,UAIVxZ,YAAS,8BAJC,YAIgCwZ,K,+BAGzC,IAAD,EAC4DjV,KAAKjF,MAAhE8sB,EADD,EACCA,SAAUhmB,EADX,EACWA,QAASoiB,EADpB,EACoBA,SAAUliB,EAD9B,EAC8BA,UAAWvD,EADzC,EACyCA,KAAM3B,EAD/C,EAC+CA,SAEpDoY,EAOE4S,EAPF5S,MACA6S,EAMED,EANFC,qBACAH,EAKEE,EALFF,WACAC,EAIEC,EAJFD,oBACAG,EAGEF,EAHFE,SACA7rB,EAEE2rB,EAFF3rB,KACA8rB,EACEH,EADFG,cAEI3X,EAAWnU,IAAS+rB,KAAsBD,EAAgBL,EAChE,OACE,gBAACH,GAAD,eACEvD,SAAUA,EACV5T,SAAUA,EACVxT,SAAUA,EACV2B,KAAMA,EACNC,UACGqpB,EAEG7S,EADAjV,KAAKkoB,iBAAiBP,EAAYC,EAAqB3S,KAGvDgP,GAAY,CAAEpiB,UAASE,eAE3B+lB,GAOV,SAA4BH,EAAiBC,EAA0BG,GACrE,IAAIpL,EAGAA,EAFAgL,EACEC,EACSO,IAA2BC,GAE3BD,IAA2BE,MAG7BF,IAA2BG,SAGpCP,IACFpL,EAAW,UAEb,IAAMtK,EAAQsV,EACVC,GAAuBG,EACrB,eACA,iBACF,YACJ,OACE,gBAACX,GAAD,eACEzqB,KAAMggB,EACNhb,KAAM4mB,IAAMC,MACZ7C,MAAOC,IAAKC,OAAO4C,iBACnBhT,WAAYpD,IACNsV,GAAc,CAAEe,SAAU,KAjCJC,CAAmBhB,EAAYC,EAAqBG,GAC9E,gBAACR,GAAD,KAAYtS,Q,GAtC2D1S,iB,ICf1DqmB,G,sLAGT,IAAD,EAUH5oB,KAAKjF,MARP8sB,EAFK,EAELA,SACAhmB,EAHK,EAGLA,QACAoiB,EAJK,EAILA,SACAliB,EALK,EAKLA,UACAvD,EANK,EAMLA,KACA3B,EAPK,EAOLA,SAPK,IAQLmY,0BARK,SASL6T,EATK,EASLA,mBAGA5T,EASE4S,EATF5S,MACA6S,EAQED,EARFC,qBACAH,EAOEE,EAPFF,WACAC,EAMEC,EANFD,oBACAG,EAKEF,EALFE,SACA7rB,EAIE2rB,EAJF3rB,KACA8rB,EAGEH,EAHFG,cACAc,EAEEjB,EAFFiB,wBACAC,EACElB,EADFkB,gBAEI1Y,EAAWnU,IAAS+rB,KAAsBD,EAAgBL,EAChE,OACE,gBAACH,GAAD,eACEvD,SAAUA,EACV5T,SAAUA,EACVxT,SAAUA,EACV2B,KAAMA,EACNC,UACGqpB,EAEG7S,EADAjV,KAAKkoB,iBAAiBP,EAAYC,EAAqB3S,KAGvDgP,GAAY,CAAEpiB,UAASE,eAE3B+lB,GA4EV,SACEH,EACAC,EACAG,GAKC,IAJD/S,EAIA,wDAHA6T,EAGA,uCAFAC,EAEA,uCADAC,EACA,uCACMC,EAAmBC,GACvBjU,EACA4S,EACAG,EACAJ,EACAkB,EACAC,EACAC,GAEIG,EAAoBC,GACxBnU,EACA4S,EACAG,EACAc,EACAC,GAGF,OACE,gBAAC1B,GAAD,eACEzqB,KAAMqsB,EACNrnB,KAAM4mB,IAAMC,MACZ7C,MAAOC,IAAKC,OAAO4C,iBACnBhT,WAAYyT,EACZ5B,WAAYtS,GAAsBkU,EAClCE,cAAepU,GAAsB,MAC/B2S,GAAc,CAAEe,SAAU,KA7G5BC,CACEhB,EACAC,EACAG,EACA/S,EACA6T,EACAC,EACAC,GAEJ,gBAACxB,GAAD,KAAYtS,Q,GAjDoCyS,IAuDxD,SAASuB,GACPjU,EACA4S,EACAG,EACAJ,EACAkB,EACAC,EACAC,GA8BA,OATIhB,EACiB,UACT/S,GAAsB2S,EAlB5BkB,EACEC,GAA2BC,EACtBZ,IAA2BC,GAE7BD,IAA2BG,SAE7BH,IAA2BC,GAczBpT,GAAsB2S,EAV3BC,EACKO,IAA2BC,GAE7BD,IAA2BE,MAUf,WAKvB,SAASc,GACPnU,EACA4S,EACAG,EACAc,EACAC,GAEA,IAAII,EAAoB,YAUxB,OATIlU,EAEAkU,EADEtB,GAAuBG,EACL,eAEA,kBAEZ/S,GAAsB6T,GAAsBC,IACtDI,EAAoB,gBAEfA,ECxHM,SAASG,GAAT,GAA2C,IAAftuB,EAAc,EAAdA,MAEvCuuB,EAQEvuB,EARFuuB,iBACAjd,EAOEtR,EAPFsR,QACAuJ,EAME7a,EANF6a,mBACAzD,EAKEpX,EALFoX,WACAxE,EAIE5S,EAJF4S,yBACAqH,EAGEja,EAHFia,mBACAe,EAEEhb,EAFFgb,kBACA8S,EACE9tB,EADF8tB,mBAGIU,EAAuB,SAACxqB,EAAD,EAA0B8oB,GAAmB,IAA9B3sB,EAA6B,EAA7BA,GAC1C,MAAkB,UAAd6D,EAAMsD,KACDuT,EAAmB1a,EAAI2sB,EAAS3sB,GAAI6a,IAKzCyT,EAAc,kBAAOrX,EAAa,GAAK,GAE7C,OAAOpX,EAAMsR,QAAQiK,UAAUF,KAAI,SAACyR,EAAe4B,GAAhB,OACjC9b,EACE,kBAAC,GAAD,eACEnP,KAAK,WACL6D,IAAKonB,EACL5B,SAAUA,EACV5D,SAAU4D,EAAS3sB,KAAOouB,EAC1BzsB,SAAU2sB,IACVxU,mBAAoBA,EACpB6T,mBAAoBA,GACfhB,EAAS3sB,KAAOouB,GAAoB,CACvCznB,QAAS,kBAAM+T,EAAmBvJ,EAAQnR,GAAI2sB,EAAS3sB,GAAI6a,IAC3DhU,UAAW,SAAAhD,GAAK,OAAIwqB,EAAqBxqB,EAAOsN,EAASwb,OAI7D,kBAAC,GAAD,eACErpB,KAAK,WACL6D,IAAKonB,EACL5B,SAAUA,EACV5D,SAAU4D,EAAS3sB,KAAOouB,EAC1BzsB,SAAU2sB,KACL3B,EAAS3sB,KAAOouB,GAAoB,CACvCznB,QAAS,kBAAM+T,EAAmBvJ,EAAQnR,GAAI2sB,EAAS3sB,GAAI6a,IAC3DhU,UAAW,SAAAhD,GAAK,OAAIwqB,EAAqBxqB,EAAOsN,EAASwb,U,62DCvC5D,IAAMvF,GAAwB9lB,UAAO2B,IAAV,KAC9BjB,KAKO,SAAAnC,GACP,OAAOA,EAAMa,MAAMC,OAAOsB,aAGd,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAK/BolB,GAAiBhmB,UAAO2B,IAAV,MAMdskB,GAAmBjmB,kBAAOyB,KAAPzB,CAAH,MAKlB,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAIpD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAO5BusB,GAAoBltB,UAAO2B,IAAV,MAWZ,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAM1C,SAAApC,GAAK,OACLA,EAAMsV,UACN7S,cADA,KAGczC,EAAMa,MAAMC,OAAO8B,iBAKxBgsB,GAAyBntB,UAAO2B,IAAV,MAEtByrB,GAAuBptB,kBAAO8B,KAAP9B,CAAH,MAIpBqtB,GAA0BrtB,UAAO2B,IAAV,MAEvB2rB,GAAuBttB,kBAAOmtB,GAAPntB,CAAH,MAEpButB,GAAqBvtB,kBAAOotB,GAAPptB,CAAH,MAElBkmB,GAAgBlmB,UAAO0U,OAAOxU,MAAM,CAC/C,YAAa,kBADcF,CAAH,MAgBbwtB,GAAuBxtB,UAAO2B,IAAV,KAE7B8rB,MC1BSC,GAAb,YAGE,WAAYnvB,GAA8B,IAAD,+BACvC,8CAAMA,KAHRgoB,gBAEyC,IAQzCoH,cAAgB,SAAC5G,GACVA,EAAIlhB,KACP,EAAK9C,SAAS,CACZ4S,YAAa,EAAKzS,MAAMyS,cAXW,EAgBzC/D,WAAa,WACP,EAAK1O,MAAMyS,YACb,EAAK5S,SAAS,CACZ4S,YAAY,KAnBuB,EAwBzCiY,wBAA0B,SAAC7G,GACrB,CAACvhB,IAAKC,MAAMC,cAAeF,IAAKwhB,OAAOthB,eAAeE,SAASmhB,EAAIlhB,IAAIH,gBACzE,EAAKkM,cA1BgC,EAwEzCic,6BAA+B,WAAO,IAAD,EAC+B,EAAKtvB,MAA/DyU,EAD2B,EAC3BA,OAAQ3T,EADmB,EACnBA,OAAQyuB,EADW,EACXA,eAGxB,OAJmC,EACKha,sBACMga,EAAiB/U,aAAS/F,KAEhD3T,EAASA,EAAO4B,eAAiB5B,GAAUA,EAAOC,WA5EnC,EA+EzCyuB,iCAAmC,WAAO,IAAD,EAUnC,EAAKxvB,MARPyU,EAFqC,EAErCA,OACAgF,EAHqC,EAGrCA,+CACAC,EAJqC,EAIrCA,sCACAC,EALqC,EAKrCA,8BALqC,IAMrCU,uBANqC,MAMnB,EANmB,MAOrCb,yBAPqC,SAQrCgC,EARqC,EAQrCA,MACA1a,EATqC,EASrCA,OAEIioB,EAAgB,EAAK/oB,MAAMa,MAC3ByZ,EAAkBd,GAAqBlE,aAASb,GAEtD,OACE,gBAAC,WAAD,KACE,gBAACka,GAAD,CAAmBrZ,SAAUgF,EAAiBzZ,MAAOkoB,GACnD,gBAACkG,GAAD,KACGzV,EACGC,EACAE,EAHN,IAIID,GAEJ,gBAAC,KAAD,CACE+V,YAAa,EACbC,WAAYlW,EAAoBgC,EAAQnB,EACxCsV,OAAQ,CACNC,KAAM,CACJC,OAAQ,EAAKP,+BACbQ,cAAeC,IAAqBC,eACpChtB,WAAY+sB,IAAqBE,YAEnCC,MAAO,CACLL,OAAQ/uB,GAAUF,YAAeE,EAAOsB,UAAW,UAK1D,EAAK+tB,gCArH6B,EA0HzCC,uBAAyB,WAAO,IAAD,EAOzB,EAAKpwB,MALPyU,EAF2B,EAE3BA,OACAgF,EAH2B,EAG3BA,+CACAC,EAJ2B,EAI3BA,sCACA8B,EAL2B,EAK3BA,MACA1a,EAN2B,EAM3BA,OAEIioB,EAAgB,EAAK/oB,MAAMa,MAC3ByZ,EAAkBhF,aAASb,GAEjC,OACE,gBAAC,WAAD,KACE,gBAACka,GAAD,CAAmBrZ,SAAUgF,EAAiBzZ,MAAOkoB,GACnD,gBAACkG,GAAD,KACGxV,EADH,IACoDC,GAEpD,gBAAC,KAAD,CACE+V,YAAa,EACbC,WAAYlU,EACZmU,OAAQ,CACNC,KAAM,CACJC,OAAQ,EAAKP,+BACbQ,cAAeC,IAAqBC,eACpChtB,WAAY+sB,IAAqBE,YAEnCC,MAAO,CACLL,OAAQ/uB,GAAUF,YAAeE,EAAOsB,UAAW,UAK1D,EAAK+tB,gCA1J6B,EA+JzCE,sBAAwB,WAAO,IAAD,EAOxB,EAAKrwB,MALPc,EAF0B,EAE1BA,OACA6c,EAH0B,EAG1BA,6BACA2S,EAJ0B,EAI1BA,sCACAC,EAL0B,EAK1BA,8CACAC,EAN0B,EAM1BA,eAEIzH,EAAgB,EAAK/oB,MAAMa,MAC3B4vB,OAA2CjhB,IAAnBghB,GAA+BA,EAE7D,OACE,gBAAC,WAAD,KACE,gBAAC7B,GAAD,CAAmBrZ,SAAUmb,EAAuB5vB,MAAOkoB,GACzD,gBAACkG,GAAD,KACGsB,EADH,IACmD5S,GAEnD,gBAAC,KAAD,CACE8R,YAAa,EACbC,gBAC4ClgB,IAA1C8gB,EACIA,EACA,EAENX,OAAQ,CACNC,KAAM,CACJC,OAAQ,EAAKP,+BACbQ,cAAeC,IAAqBC,eACpChtB,WAAY+sB,IAAqBE,YAEnCC,MAAO,CACLL,OAAQ/uB,GAAUF,YAAeE,EAAOsB,UAAW,UAK1D,EAAKsuB,qCAnM6B,EAwMzCC,oBAAsB,WAAO,IAAD,EACwB,EAAK3wB,MAA/Cga,EADkB,EAClBA,eAER,OAH0B,EACFzE,sBAGf,EAAK8a,wBAEPrW,EAAiB,EAAKwV,mCAAqC,EAAKY,0BA9MhC,EAiNzCtH,qBAAuB,WACrB,IAAMC,EAAgB,EAAK/oB,MAAMa,MAEjC,OACE,gBAAC,GAAD,CACEV,GAAG,mBACHsD,KAAK,SACLulB,WAAW,EACXlnB,UAAW,EACXkF,UAAW,SAAAhD,GAAK,OAAI,EAAKqrB,wBAAwBrrB,IACjDnD,MAAOkoB,GAEP,gBAAC,GAAD,KACE,gBAAC,GAAD,CACEtlB,KAAK,SACLC,UAAWhD,YAAS,mBACpBoB,SAAU,EACVkF,UAAW,SAAChD,GAAD,OAAgB,EAAKqrB,wBAAwBrrB,IACxD8C,QAAS,EAAKsoB,cACdxoB,KAAM,GACNhF,KAAK,cACLf,MAAOkoB,IAER,EAAK4H,yBAxO2B,EA8OzCR,4BAA8B,WAAO,IAAD,EAM9B,EAAKnwB,MAJPyU,EAFgC,EAEhCA,OACAiF,EAHgC,EAGhCA,sCACA7Y,EAJgC,EAIhCA,MACA+vB,EALgC,EAKhCA,sCAEF,OACE,gCACGtb,aAASb,IACR,gBAACma,GAAD,KACE,gBAACC,GAAD,CAAsBhuB,MAAOA,EAAO0W,WAAW,MAC5C7W,YAAS,2BAEXA,YAAS,qBAGb8Z,aAAS/F,IACR,gBAACsa,GAAD,KACE,gBAACC,GAAD,CAAoBnuB,MAAOA,EAAO0W,WAAW,MAC1C7W,YAAS,2BAEXA,YAAS,uBAAwB,CAChCkZ,yCAA0CgX,EAC1C/W,wBAAyBH,KAI9ByK,aAAa1P,IACZ,gBAACqa,GAAD,KACGpuB,YAAS,4CAA6C,CACrDmwB,sBAAuBD,EACvBE,oBAAqBpX,OA9QQ,EAsRzCgX,iCAAmC,WAAO,IAAD,EAWnC,EAAK1wB,MATP+wB,EAFqC,EAErCA,kCACAC,EAHqC,EAGrCA,+BACArT,EAJqC,EAIrCA,6BACAsT,EALqC,EAKrCA,iCACAT,EANqC,EAMrCA,eACAjX,EAPqC,EAOrCA,iBACAgW,EARqC,EAQrCA,eACA2B,EATqC,EASrCA,kBACArwB,EAVqC,EAUrCA,MAcEswB,EAAgB,oCAViB3hB,IAAnCwhB,QACsCxhB,IAAtCuhB,GACAC,GAAkC,GAClCD,EAAoC,IASpCI,EAAgB,yCAPmB3hB,IAAnCwhB,QACsCxhB,IAAtCuhB,GACAC,EAAiC,GACjCD,GAAqC,IAOrCI,EAAgB,kCAGlB,IAAMC,EAAoB1wB,YAASywB,EAAe,CAChDF,mCACAtT,+BACAuT,sBAGF,OACE,gCACGV,GACC,gBAAC5B,GAAD,KACE,gBAACC,GAAD,CAAsBhuB,MAAOA,EAAO0W,WAAW,MAC5C7W,YAAS,2BAEXA,YAAS,2BAGb6uB,GACC,gBAACR,GAAD,KACE,gBAACC,GAAD,CAAoBnuB,MAAOA,EAAO0W,WAAW,MAC1C7W,YAAS,2BAEX0wB,GAGJ7X,GAAoB,gBAACuV,GAAD,KAA0BsC,KA5UnD,EAAKzsB,MAAQ,CACXyS,YAAY,GAEd,EAAK4Q,WAAaxgB,cALqB,EAH3C,oFAiCwB,IAAD,OACnBuC,YAAW,WACT,IAAMyb,EAAUhd,SAASid,eAAe,oBACpCD,GAAW,EAAK7gB,MAAMyS,YACxBoO,EAAQF,QAEN,EAAK0C,WAAWI,UAAY,EAAKzjB,MAAMyS,YACzC,EAAK4Q,WAAWI,QAAQ9C,UAEzB,KA1CP,4CA6CwB+L,EAAiCC,GACrD,OAAOrsB,KAAKN,MAAMyS,aAAeka,EAAUla,aA9C/C,+BAiDY,IACAA,EAAenS,KAAKN,MAApByS,WADD,EAEqCnS,KAAKjF,MAAzCuxB,EAFD,EAECA,gBAAiBC,EAFlB,EAEkBA,eAEzB,OACE,gBAAC,IAAD,CACErmB,MAAO,CAAEme,SAAU,WAAYmI,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GAClExI,QAAS,QACT1f,KAAM0N,EACNiS,eAAgBpkB,KAAKoO,WACrBiW,SAAUiI,EACVhI,aAAc,QACdC,OAAO,EACPC,aAAW,EACXC,KAAMzkB,KAAK6jB,wBAEX,gBAAC,GAAD,CACEhnB,SAAU,EACVgF,QAAS7B,KAAKmqB,cACd9oB,IAAKrB,KAAK+iB,WACV6J,kBAAiBL,SArE3B,GAAqChqB,aA2XtBzH,2BAAU4S,aApCzB,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLhxB,OAAQixB,IAA4BptB,GACpC+U,sCAAuCkN,aACrCjiB,EACAmtB,EAASnP,WAEXlJ,+CAAgDqN,aAC9CniB,EACAmtB,EAASnP,WAEXiO,sCAAuCoB,aACrCrtB,EACAmtB,EAASnP,WAEXtI,gBAAiB4X,aAAmBttB,EAAOmtB,EAASnP,WACpDhJ,8BAA+BkN,aAAiCliB,EAAOmtB,EAASnP,WAChFnJ,kBAAmB0Y,IAAmCvtB,GACtD4Q,sBAAuBwc,IAAwCptB,GAC/D6rB,eAAgB0B,IAAyBvtB,GACzC4U,iBAAkB2Y,IAA6BvtB,GAC/C4qB,eAAgB2C,IAAyBvtB,GACzCwtB,YAAaD,IAAyBvtB,GACtCytB,+BAAgCL,IAAiDptB,GACjFosB,kCAAmCsB,YAAqC1tB,GACxEqsB,+BAAgCsB,YAAkC3tB,GAClEgZ,6BAA8B2C,YAAgC3b,GAC9DusB,kBAAmBa,IAAuCptB,GAC1DssB,iCAAkCsB,YAAoC5tB,GACtE2rB,sCAAuCkC,YAAyC7tB,GAChF4rB,8CAA+CkC,YAC7C9tB,MAKmBgO,CAAyBwc,K,gqDChc3C,IAAMuD,GAAyBjxB,UAAO2B,IAAV,MAQtBuvB,GAAclxB,UAAOsU,GAAGpU,OAAM,SAAC3B,GAAD,MAA8B,CACvEyD,KAAMzD,EAAMyD,KACZ,aAAczD,EAAM0D,aAFKjC,CAAH,KAMGb,YAAeqV,IAAuB,MACjD,SAAAjW,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,mBAIrBypB,IAAIC,eAAiBD,IAAIE,YAKnC4G,GAAYnxB,kBAAOyB,IAAPzB,CAAH,MAKX,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAGpDywB,GAAepxB,UAAOoU,GAAGlU,OAAM,SAAC3B,GAAD,MAAiB,CAC3DyD,KAAMzD,EAAMyD,QADchC,CAAH,MAYZwqB,GAASxqB,UAAO2B,IAAIzB,OAAM,SAAC3B,GAAD,MAAyB,CAC9D8B,SAAU9B,EAAM8B,SAChB2B,KAAMzD,EAAMyD,KACZ,gBAAiBzD,EAAM8yB,aACvB,aAAc9yB,EAAM0D,aAJAjC,CAAH,KASfypB,MAGS/V,GAAS1T,UAAO2B,IAAV,MAMN2vB,GAAatxB,UAAO2B,IAAV,MAKV4vB,GAAcvxB,kBAAO8B,IAAP9B,CAAH,KAEpBsT,KACO,SAAA/U,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAkB1B6wB,GAAaxxB,kBAAO8B,KAAM5B,OAAM,SAAC3B,GAAD,MAA6B,CACxE8B,SAAU9B,EAAM8B,SAChB2B,KAAMzD,EAAMyD,KACZ,aAAczD,EAAM0D,UACpBvD,GAAIH,EAAMG,MAJcsB,CAAH,MASZ,SAAAzB,GAAK,OACZA,EAAMsV,WAAatV,EAAMuV,sBACrBvV,EAAMa,MAAMC,OAAO8B,aACnBhC,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAOxC8wB,GAASzxB,UAAO2B,IAAV,KAOb6vB,I,SC7DAE,GAAsBzyB,YAAS,4BAExB0yB,GAAb,YACE,WAAYpzB,GAA8B,IAAD,+BACvC,8CAAMA,KAcRqzB,iBAAmB,WACjB,EAAK7uB,UAAS,SAAA2S,GAAS,MAAK,CAC1BC,YAAaD,EAAUC,gBAjBc,EAqBzCkc,2BAA6B,SAACC,EAAmBC,GAApB,OAC3B9yB,YAAS,2BAA4B,CACnCkZ,yCAA0C2Z,EAC1C1Z,wBAAyB2Z,KAxBY,EA2BzCC,kBAAoB,SAACF,EAAmBC,GAApB,OAClB9yB,YAAS,2BAA4B,CACnCoZ,gCAAiCyZ,EACjC1Z,wBAAyB2Z,KA9BY,EAiCzCE,2BAA6B,SAC3BpiB,EAIAkI,EACAD,EACAoa,EACAla,EACAC,EACAC,GACI,IACIlF,EAAWnD,EAAXmD,OACFmf,EAAapf,GAAiCC,GACpD,OACE,gBAAC,WAAD,KACG+E,GACCD,GACA,EAAK+Z,2BACH7Z,EACAC,GAEHF,IAAsBD,GAAoB7Y,YAASkzB,IAClDpa,GACA,EAAKia,kBACH9Z,EACAD,KA3D+B,EAiEzCma,gCAAkC,SAChCviB,EAIAkI,EACAD,EACAoa,EACAla,EACAC,EACAC,GACI,IACIlF,EAAkBnD,EAAlBmD,OAAQyF,EAAU5I,EAAV4I,MACVI,EAAkBhF,aAASb,GAC3Bmf,EAAapf,GAAiCC,GACpD,OACE,gBAAC,WAAD,KACE,gBAACye,GAAD,KACG5Y,GAAmBd,IAAsBD,GACxC,gBAACwZ,GAAD,KACE,gBAAC,IAAD,CAAMnxB,KAAK,KAAKgF,KAAM,EAAG0Q,MAAM,kBAGlCkD,aAAS/F,IAAW+E,IAAsBD,GACzC,gBAACwZ,GAAD,KACE,gBAAC,IAAD,CAAMnxB,KAAK,QAAQgF,KAAM,EAAG0Q,MAAM,YAAYzG,QAAS,MAG3D,gBAACoiB,GAAD,CACE3d,SAAUgF,GAAmBd,EAC7BiS,UAAQ,EACR/nB,UAAS,UAAKyvB,GAAL,YAA4BjZ,EAA5B,YAAqCxZ,YAASkzB,IACvD9xB,SAAU,EACV2B,KAAK,SACLoD,YAAU,yBACV0O,sBAAuBgE,EACvBpZ,GAAIwzB,GAEH,EAAKD,2BACJpiB,EACAkI,EACAD,EACAoa,EACAla,EACAC,EACAC,OA9G6B,EAsHzCwF,sBAAwB,SACtB7N,EAIAiI,EACAoa,EACAla,EACAC,GACI,IACIjF,EAAkBnD,EAAlBmD,OAAQyF,EAAU5I,EAAV4I,MACVI,EAAkBhF,aAASb,GAC3Bmf,EAAapf,GAAiCC,GACpD,OACE,gCACE,gBAACye,GAAD,KACG5Y,GACC,gBAACyY,GAAD,KACE,gBAAC,IAAD,CAAMnxB,KAAK,KAAKgF,KAAM,EAAG0Q,MAAM,kBAGnC,gBAAC2b,GAAD,CACEpsB,YAAU,yBACVyO,SAAUgF,EACVmR,UAAQ,EACR/nB,UAAS,UAAKyvB,GAAL,YAA4BjZ,EAA5B,YAAqCxZ,YAASkzB,IACvD9xB,UAAW,EACX2B,KAAK,SACL8R,sBAAuBgE,EACvBpZ,GAAIwzB,GAEHpa,EACG,EAAK+Z,2BACH7Z,EACAC,GAEFhZ,YAASkzB,OA1JkB,EAiKzCE,mBAAqB,SAACzL,EAAejR,EAAqBtV,EAAkBoY,GAAvD,OACnB,gBAAC,GAAD,CACExW,UACE0T,EAAU,UACH1W,YAAS,yBADN,YACkCwZ,GADlC,UAEHxZ,YAAS,wBAFN,YAEiCwZ,GAE7CpY,SAAUA,EACV2B,KAAK,WACLqvB,cAAc,EACdiB,gBAAe1L,EAAS5iB,OAAS,EAAI,OAAS,QAC9CqB,QAAS,EAAKusB,iBACdrsB,UAAW,SAAAhD,GACS,UAAdA,EAAMsD,KACR,EAAK+rB,qBAIT,gBAACL,GAAD,CAAazb,WAAW,KAAKkD,UAAW,IACrCP,GAEH,gBAAC0Y,GAAD,CAAWhsB,KAAM,EAAGhF,KAAMwV,EAAa,aAAe,mBAtLjB,EA0LzC4c,kBAAoB,SAAC3L,EAAejR,GAAhB,OAClB,gBAAC,IAAD,CAAUA,WAAYA,EAAY6c,eAAe,EAAOC,SAAU,IAAKC,gBAAgB,OACrF,gBAACtB,GAAD,CAAcpvB,KAAK,QAAQ4kB,KA5LU,EAgMzC+L,oBAAsB,SAAC9iB,GAAkB,IAAD,EAUlC,EAAKtR,MARPub,EAFoC,EAEpCA,UACAvB,EAHoC,EAGpCA,eACAN,EAJoC,EAIpCA,sCACAC,EALoC,EAKpCA,8BACAF,EANoC,EAMpCA,+CANoC,IAOpCD,yBAPoC,SAQpCD,EARoC,EAQpCA,iBACA8a,EAToC,EASpCA,aAEMl0B,EAAuCmR,EAAvCnR,GAAIia,EAAmC9I,EAAnC8I,gBAAiB3F,EAAkBnD,EAAlBmD,OAAQ+G,EAAUlK,EAAVkK,MAC/BmY,EAAe,yBAAqBU,GAC1C,OACE,gBAAC,GAAD,KACGja,GACC,gBAACsY,GAAD,KACE,gBAAC,GAAD,CACEnB,gBAAiB,MACjBhW,UAAWA,EACXC,MAAOA,EACP/G,OAAQA,EACRkO,UAAWxiB,EACXqxB,eAAgBmC,IAEjB3Z,EACG,EAAK6Z,gCACHviB,EACAkI,EACAD,EACAoa,EACAla,EACAC,EACAC,GAEF,EAAKwF,sBACH7N,EACAiI,EACAoa,EACAla,EACAC,MAxOyB,EAgPzC4a,iBAAmB,WAAO,IAAD,EAOnB,EAAKt0B,MALPu0B,EAFqB,EAErBA,UACAC,EAHqB,EAGrBA,iBACAjb,EAJqB,EAIrBA,iBACA3G,EALqB,EAKrBA,yBACA6hB,EANqB,EAMrBA,2BAKI7a,EAHsC8a,aAAcF,GAAkB5jB,QAC1E,SAAA+jB,GAAI,OAAiC,IAA7BA,EAAK9H,uBAEsEpnB,OAC/EoU,EAA0B2a,EAAiB/uB,OAE3CmvB,EAAmBhiB,EACrB,EAAK6gB,kBAAkBgB,EAA4B5a,GACnD,EAAKyZ,2BACH1Z,EACAC,GAGN,OACE,gBAAC,GAAD,KACE,gBAACoZ,GAAD,CACE3d,UAXwB,EAYxB5R,UAAS,UAAKyvB,GAAL,YAA4BoB,GACrCzyB,UAAW,EACX2B,KAAK,SACL8R,sBAAuBgE,GAEtBqb,KA5QP,EAAKjwB,MAAQ,CACXyS,WAAY,EAAKpX,MAAMkpB,UAHc,EAD3C,kFAQqB2L,GACb5vB,KAAKjF,MAAMkpB,WAAa2L,EAAU3L,UACpCjkB,KAAKT,SAAS,CACZ4S,WAAYnS,KAAKjF,MAAMkpB,aAX/B,+BAqRY,IAAD,EACmEjkB,KAAKjF,MAAvEsR,EADD,EACCA,QAAS+W,EADV,EACUA,SAAUvmB,EADpB,EACoBA,SAAU8e,EAD9B,EAC8BA,sBAAuB2T,EADrD,EACqDA,UACpDnd,EAAenS,KAAKN,MAApByS,WAER,OACE,gBAACub,GAAD,CAAalvB,KAAK,gBACfwB,KAAK6uB,mBACJzL,EACAjR,EACAtV,EACA8e,EAAwB2T,EAAYjjB,EAAQ4I,OAE7CjV,KAAK+uB,kBAAkB3L,EAAUjR,GACjCwJ,EAAwB3b,KAAKqvB,mBAAqBrvB,KAAKmvB,oBAAoB9iB,QAlSpF,GAAqC9J,aA+TtBmL,oBAvBf,SAAyBhO,EAAqBmtB,GAC5C,OAAIlR,YAAsBjc,GACjB,CACL6U,kBAAmBS,YAAmBtV,GACtCic,sBAAuBA,YAAsBjc,IAI1C,CACL+U,sCAAuCkN,aACrCjiB,EACAmtB,EAASxgB,QAAQnR,IAEnBwZ,8BAA+BkN,aAAiCliB,EAAOmtB,EAASxgB,QAAQnR,IACxFsZ,+CAAgDqN,aAC9CniB,EACAmtB,EAASxgB,QAAQnR,IAEnB6Z,eAAgBpH,YAAyBjO,GACzC6U,kBAAmBS,YAAmBtV,MAI3BgO,CAAyBygB,I,8IChXjC,IAAM0B,GAAwBrzB,kBAAOgrB,IAAc9qB,MAAM,CAC9D,YAAa,2BADsBF,CAAH,MAIrBszB,GAAYtzB,kBAAO+qB,GAAP/qB,CAAH,MCNDuzB,G,sLACT,IAAD,EACkD/vB,KAAKjF,MAAtD8G,EADD,EACCA,QAASoiB,EADV,EACUA,SAAUliB,EADpB,EACoBA,UAAWvD,EAD/B,EAC+BA,KAAM3B,EADrC,EACqCA,SAC5C,OACE,kBAACgzB,GAAD,eACE5L,SAAUA,EACVpnB,SAAUA,EACV2B,KAAMA,EACNC,UAAWhD,YAAS,gBACdwoB,GAAY,CAAEpiB,UAASE,cAE7B,kBAAC+tB,GAAD,KAAYr0B,YAAS,oB,GAX0Bu0B,iBCMjDzG,GAAuB,SAACxqB,EAAY8oB,EAAejS,GACvD,MAAkB,UAAd7W,EAAMsD,KACDuT,EAAmBiS,EAASnK,UAAWmK,EAAS3sB,KAKrD+0B,GAAc,SAAC9d,GACnB,OAAIA,EACK,GAED,GAGV,SAAS+d,GAAT,GAA+C,IAAfn1B,EAAc,EAAdA,MAE5BuuB,EAOEvuB,EAPFuuB,iBACA1T,EAME7a,EANF6a,mBACA2Z,EAKEx0B,EALFw0B,iBACApd,EAIEpX,EAJFoX,WACAxE,EAGE5S,EAHF4S,yBACAqH,EAEEja,EAFFia,mBACA6T,EACE9tB,EADF8tB,mBAEF,OAAO0G,EAAiBnZ,KAAI,SAACyR,EAAe4B,GAAhB,OAC1B9b,EACE,gBAAC,GAAD,eACEnP,KAAK,WACL6D,IAAKonB,EACL5B,SAAUA,EACV5D,SAAU4D,EAAS3sB,KAAOouB,EAC1BzsB,SAAUozB,GAAY9d,GACtB6C,mBAAoBA,EACpB6T,mBAAoBA,GACfhB,EAAS3sB,KAAOouB,GAAoB,CACvCznB,QAAS,kBAAM+T,EAAmBiS,EAASnK,UAAWmK,EAAS3sB,KAC/D6G,UAAW,SAAAhD,GAAK,OAAIwqB,GAAqBxqB,EAAO8oB,EAAUjS,OAI9D,gBAAC,GAAD,eACEpX,KAAK,WACL6D,IAAKonB,EACL5B,SAAUA,EACV5D,SAAU4D,EAAS3sB,KAAOouB,EAC1BzsB,SAAUozB,GAAY9d,IACjB0V,EAAS3sB,KAAOouB,GAAoB,CACvCznB,QAAS,kBAAM+T,EAAmBiS,EAASnK,UAAWmK,EAAS3sB,KAC/D6G,UAAW,SAAAhD,GAAK,OAAIwqB,GAAqBxqB,EAAO8oB,EAAUjS,U,IA+CrDua,G,sLAvCH,IAAD,EAWHnwB,KAAKjF,MATPuuB,EAFK,EAELA,iBACA1T,EAHK,EAGLA,mBACA2Z,EAJK,EAILA,iBACApd,EALK,EAKLA,WACAmC,EANK,EAMLA,iBACA3G,EAPK,EAOLA,yBACAqH,EARK,EAQLA,mBACAwa,EATK,EASLA,2BACA3G,EAVK,EAULA,mBAGF,OACE,gBAAC,GAAD,CACEyG,UAAW7zB,YAAS,kCACpBwoB,WAAUqF,EACViG,iBAAkBA,EAClBjb,iBAAkBA,EAClBkb,2BAA4BA,EAC5B7hB,yBAA0BA,EAC1B9Q,SAAU,GAEV,gBAACqzB,GAAD,CACEn1B,MAAO,CACLuuB,mBACA1T,qBACA2Z,mBACApd,aACAxE,2BACAqH,qBACA6T,6B,GAhCyBtmB,a,osDC9D9B,IAAMyd,GAAWxjB,UAAOoU,GAAGlU,OAAM,SAAC3B,GAAD,MAA2B,CACjEyD,KAAMzD,EAAMyD,KACZ,YAAa,+BAFShC,CAAH,KAQjBkxB,GAAiBA,IAUR0C,GAAuB5zB,UAAO6zB,IAAI3zB,OAAM,SAAC3B,GAAD,MAAkC,CACrF,aAAcA,EAAM0D,aADcjC,CAAH,MAMrB,SAAAzB,GAAK,OAAKA,EAAMu1B,mBAAN,6CAClBtZ,eACiCrb,YAAeqV,IAAuB,MACrD,SAAAjW,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAErD0pB,IAAIC,eAAiBD,IAAIE,WAM1C/G,IAKOuQ,GAA8B/zB,UAAO2B,IAAV,MAQ3BqyB,GAAsCh0B,UAAO2B,IAAIzB,OAC5D,SAAC3B,GACC,MAAO,KAFwCyB,CAAH,MAYpC,SAAAzB,GAAK,OAAKA,EAAMu1B,mBAAN,iBACa30B,YAAeqV,IAAuB,MACnD,SAAAjW,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAG/DszB,GAAkCj0B,UAAO2B,IAAV,MAa/B0Z,GAAuBrb,kBAAOsb,IAAPtb,CAAH,MAGjB,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAGzD4a,GAAkBvb,kBAAO8B,IAAP9B,CAAH,MAMjB,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI1BuzB,GAAal0B,UAAO2B,IAAV,MChDvB,SAASwyB,GAAT,GAA6C,IAAf51B,EAAc,EAAdA,MAE1BoS,EAaEpS,EAbFoS,gBACAyjB,EAYE71B,EAZF61B,gBACAtH,EAWEvuB,EAXFuuB,iBACA1T,EAUE7a,EAVF6a,mBACAC,EASE9a,EATF8a,4BACA1D,EAQEpX,EARFoX,WACA0e,EAOE91B,EAPF81B,wBACAC,EAME/1B,EANF+1B,iBACA/a,EAKEhb,EALFgb,kBACApI,EAIE5S,EAJF4S,yBACA2G,EAGEvZ,EAHFuZ,iBACAqB,EAEE5a,EAFF4a,0BACAkT,EACE9tB,EADF8tB,mBAEM7T,EAAuB7H,EAAvB6H,mBACR,OAAO7H,EAAgBG,SAAS8I,KAAI,SAAC/J,EAAc+iB,GAAf,OAClC,kBAAC,GAAD,CACE/sB,IAAK+sB,EACLnL,SAAU5X,EAAQnR,KAAO01B,EACzBvkB,QAASA,EACTiK,UAAWjK,EAAQiK,UACnBzZ,SAAUsV,EAAa,GAAK,EAC5BmC,iBAAkBA,EAClB8a,aAAcA,GAEb/iB,EAAQ+F,mBAAqBuD,GAC5B,kBAAC,GAAD,CACEnX,KAAK,WACL3B,SAAU,EACVonB,SAAU5X,EAAQnR,KAAO01B,GAAmBC,EAC5ChvB,QAAS,kBAAMgU,EAA4BxJ,EAAQnR,GAAI6a,IACvDhU,UAAW,SAAAhD,GACS,UAAdA,EAAMsD,KACRwT,EAA4BxJ,EAAQnR,GAAI6a,MAKhD,kBAACsT,GAAD,CACEtuB,MAAO,CACLsR,UACAid,mBACAnX,aACAyD,qBACAkb,mBACA/a,oBACApI,2BACAqH,qBACA6T,4B,IAiNKkI,G,YApMb,WAAYh2B,GAA0B,IAAD,+BACnC,8CAAMA,KAHRod,kBAEqC,IAQrC6Y,qCAAuC,WAAO,IAAD,EAQvC,EAAKj2B,MANPyd,EAFyC,EAEzCA,eACAO,EAHyC,EAGzCA,0BACAG,EAJyC,EAIzCA,aACAT,EALyC,EAKzCA,6BACAC,EANyC,EAMzCA,6BACA6S,EAPyC,EAOzCA,eAGMvW,EAAuB,EAAKja,MAAMoS,gBAAlC6H,mBAER,OACE,kBAACub,GAAD,KACE,kBAAC,GAAD,CACErb,SAAUF,EAAqBwD,EAAiBO,EAChDrD,cAAeV,GAAsBuW,EAAiB,eAAiB,YACvE3f,QAASoJ,GAAsBuW,EAAiB0F,IAAQC,YAAcD,IAAQE,WAC9E/X,WAAYF,EACZkY,iBAAkB,CAChBxlB,QAASqlB,IAAQE,WACjB9e,MAAO,aAET8G,aAAc,EAAKhB,eAErB,kBAAC,GAAD,CAAiBvW,YAAU,2BACxBoT,EACGvZ,YAAS,mBAAoB,CAC3Bkd,eAAgBH,IAElB/c,YAAS,kCAAmC,CAC1Cmd,uBAAwBH,EACxBI,eAAgBH,OAxCO,EA+CrC6M,8BAAgC,SAACnmB,GAC/B,EAAKG,SAAS,CAAE8xB,iCAAkCjyB,KAhDf,EAmDrC8a,sBAAwB,SAAC1B,EAAwBU,GAAzB,OACtB,kBAACqX,GAAD,KACE,kBAAC,GAAD,CACErb,SAAUsD,EACV9C,cAAc,eACd9J,QAASqlB,IAAQC,YACjB9X,WAAYF,EACZkY,iBAAkB,CAChBxlB,QAASqlB,IAAQE,WACjB9e,MAAO,aAET8G,aAAc,EAAKhB,eAErB,kBAAC,GAAD,KACG1c,YAAS,mBAAoB,CAC5Bkd,eAAgBH,OAlEa,EA6LrCmL,WAAa,WAAO,IAAD,EACmD,EAAK5oB,MAAjEoS,EADS,EACTA,gBAAiBE,EADR,EACQA,oBAAqBgZ,EAD7B,EAC6BA,kBAC9ChZ,EAAoBF,EAAgBG,UACpC+Y,KA9LA,EAAK3mB,MAAQ,CACX2xB,kCAAkC,GAEpC,EAAKlZ,aAAe5V,IAAM+uB,YALS,E,wEAwE3B,IAAD,EAwBHtxB,KAAKjF,MAtBPoS,EAFK,EAELA,gBACAyjB,EAHK,EAGLA,gBACAtH,EAJK,EAILA,iBACArC,EALK,EAKLA,gBACAZ,EANK,EAMLA,kBACAzQ,EAPK,EAOLA,mBACAC,EARK,EAQLA,4BACA0b,EATK,EASLA,gBACApf,EAVK,EAULA,WACA0e,EAXK,EAWLA,wBACArY,EAZK,EAYLA,eACAU,EAbK,EAaLA,aACA5E,EAdK,EAcLA,iBACAkF,EAfK,EAeLA,4BACA+V,EAhBK,EAgBLA,iBACA5V,EAjBK,EAiBLA,eACA5D,EAlBK,EAkBLA,kBACApI,EAnBK,EAmBLA,yBACAuW,EApBK,EAoBLA,iBACAzL,EArBK,EAqBLA,6BACA9C,EAtBK,EAsBLA,0BACAkT,EAvBK,EAuBLA,mBAEM7T,EAAuB7H,EAAvB6H,mBACAqc,EAAqCrxB,KAAKN,MAA1C2xB,iCAER,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACd,GAAD,KACE,kBAACN,GAAD,CACE/uB,IAAKrB,KAAKmY,aACVhG,WAAYA,EACZsf,eAActf,EACd1T,UAAS,UAAKhD,YAAS,2BACvB60B,mBAAoBe,GAAoCnN,GAExD,kBAAC,GAAD,CACEgD,YAAa/Z,EAAgB8H,MAC7BgS,gBAAiBA,EACjBpqB,SAAUsV,EAAa,GAAK,IAE7BmC,GACCkF,EAA8B,IAC7B7L,EACG3N,KAAKgxB,uCACLhxB,KAAKka,sBAAsB1B,EAAgBU,IAEhDS,GACC,kBAAC,GAAD,CAAUnb,KAAK,WACb,kBAAC,GAAD,CACE8qB,iBAAkBA,EAClB1T,mBAAoBA,EACpB2Z,iBAAkBA,EAClBpd,WAAYA,EACZmC,iBAAkBA,EAClBU,mBAAoBA,EACpBrH,yBAA0BA,EAC1B6hB,2BAA4B/W,EAC5BoQ,mBAAoBA,MAIxBlP,GACA,kBAAC,GAAD,CAAUnb,KAAK,WACb,kBAACmyB,GAAD,CACE51B,MAAO,CACLoS,kBACAyjB,kBACAtH,mBACArC,kBACAZ,oBACAzQ,qBACAC,8BACA0b,kBACApf,aACA0e,0BACAljB,2BACAoI,oBACAzB,mBACAqB,4BACAkT,0BAMTlb,GAA4BuW,GAC3B,kBAACsM,GAAD,CACEF,mBAAoBe,GAAoCnN,GAExD,kBAACuM,GAAD,KACE,kBAAC,GAAD,CACE5uB,QAAS7B,KAAK2jB,WACdM,SAAUC,EACVrnB,SAAU,KAGd,kBAAC,GAAD,CACEuoB,eAAe,EACfG,8BAA+BvlB,KAAKulB,iCAI1C,kBAAC,GAAD,CACE9mB,UAAWhD,YAAS,aACpB6qB,MAAM3Y,IAA4BuW,EAClCD,SAAUsN,EACVlL,kBAAmBA,EACnBxpB,SAAUsV,EAAa,GAAK,U,GA5Ld5P,IAAMwjB,W,ifC9GzB,IAAM2L,GAAiBC,oBAAH,MAWdC,GAAqBp1B,kBAAOuoB,KAAYroB,OAAM,SAAC3B,GAAD,MAAqC,CAC9FyD,KAAMzD,EAAMyD,KACZ3B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,aAHYjC,CAAH,KAM3BuB,aAAW,wCAKX,SAAAhD,GAAK,OACJA,EAAMkpB,UACPzmB,cADA,KAEIyoB,KAEayL,O,2rCCrBd,IAAM1e,GAAYxW,UAAO2B,IAAIzB,OAAM,SAAC3B,GAAD,MAA4B,CACpEyD,KAAMzD,EAAMyD,KACZ,YAAa,sBAFUhC,CAAH,KAOlBo1B,GAAwBA,GAGJC,MAQXC,GAAet1B,UAAO2B,IAAV,MACT,SAAApD,GAAK,OAAIA,EAAMsQ,OAAS,MAS3B0mB,GAAYv1B,UAAO0U,OAAV,KAClB+U,MAUA,SAAAlrB,GAAK,OAAIyC,cAAJ,KACD6pB,KACO1rB,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,GAAK,CAC/D60B,YAAY,OAKF3K,MACC,SAAAtsB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAOrC,SAAApC,GAAK,OACLA,EAAMk3B,MACNz0B,cADA,SAKA,SAAAzC,GAAK,OACLA,EAAMm3B,MACN10B,cADA,SAUS20B,GAAQ31B,UAAO2B,IAAV,KACdJ,aAAW,eACE,SAAAhD,GAAK,OAAIA,EAAMq3B,YC5DXC,G,YACnB,WAAYt3B,GAA8B,IAAD,+BACvC,8CAAMA,KAiCRu3B,oBAAsBC,MAAS,WAC7B,EAAKhzB,SAAS,CAAEizB,aAAcvvB,OAAOwvB,cACrC,EAAKC,yBAAyB,EAAKhzB,MAAM8yB,gBACxC,KArCsC,EAuCzCE,yBAA2B,SAACrnB,GACtBA,GAAUwmB,KACZ,EAAKtyB,SAAS,CAAEozB,2BAA4BC,MAE5C,EAAKrzB,SAAS,CAAEozB,2BAA4BE,OA3CP,EA+CzCC,cAAgB,SAAC7e,GAAgB,IAAD,EACG,EAAKvU,MAA9BqzB,EADsB,EACtBA,WAAYC,EADU,EACVA,SACpB,OAAO/e,GAAS8e,GAAc9e,GAAS+e,GAjDA,EAoDzCC,SAAW,WACT,IAAMC,EAAa,EAAKn4B,MAAMo4B,wBADf,EAEoC,EAAKzzB,MAAhDqzB,EAFO,EAEPA,WAAYJ,EAFL,EAEKA,2BACpB,EAAKS,kBAAkBF,EAAYH,EAAaJ,IAvDT,EA0DzCU,SAAW,WACT,IAAMH,EAAa,EAAKn4B,MAAMo4B,wBADf,EAEoC,EAAKzzB,MAAhDqzB,EAFO,EAEPA,WAAYJ,EAFL,EAEKA,2BACpB,EAAKS,kBAAkBF,EAAYH,EAAaJ,IA7DT,EAgEzCS,kBAAoB,SAACF,EAAiBjf,GAAgB,IAC5C0e,EAA+B,EAAKjzB,MAApCizB,2BACR,EAAKpzB,SA6BT,SAAyB2zB,EAAiBjf,EAAY0e,GACpD,IAAMW,EAUR,SAAkBJ,EAAiBjf,EAAY0e,GAC7C,GAAI1e,GAAS,EACX,MAAO,CACLsf,MAAO,EACPC,IAAKN,GAAcP,EAA6BA,EAA6BO,GAIjF,IAAMO,EAAYP,EAAa,EAAIjf,EACnC,GAAIwf,GAAad,EACf,MAAO,CAAEY,MAAOtf,EAAOuf,IAAKvf,EAAQ0e,GAGtC,IACMe,EAAMzf,GADK0e,EAA6Bc,GACf,EAC/B,MAAO,CAAEF,MAAOG,GAAO,EAAIA,EAAM,EAAGF,IAAKvf,EAAQwf,GAzBnCE,CAAST,EAAYjf,EAAO0e,GACpCI,EAAaO,EAAMC,MACnBP,EAAWM,EAAME,IAKvB,MAAO,CAAEI,YADWb,EAAa,EACXc,YAHpBX,EAAaH,IAAeJ,GAC5BO,EAAaP,EAEoBI,aAAYC,YArC/Bc,CAAgBZ,EAAYjf,EAAO0e,KAhEjD,EAAKjzB,MAAQ,CACXm0B,aAAa,EACbD,aAAa,EACbb,YAAa,EACbC,UAAW,EACXL,2BAA4BE,IAC5BL,aAAcvvB,OAAOwvB,aARgB,E,mFAavCzyB,KAAK0yB,yBAAyB1yB,KAAKN,MAAM8yB,cACzCvvB,OAAO8wB,iBAAiB,SAAU/zB,KAAKsyB,qBAEvCtyB,KAAKozB,kBAAkBpzB,KAAKjF,MAAMo4B,wBAAyBnzB,KAAKjF,MAAMi5B,mB,yCAGrDpE,GACjB,IAAM3b,EAAQ2b,EAAUoE,gBAD0B,EAEGh0B,KAAKjF,MAAlDi5B,EAF0C,EAE1CA,gBAAiBb,EAFyB,EAEzBA,yBAEtBlf,IAAU+f,IAAoBh0B,KAAK8yB,cAAc7e,IAClDjU,KAAKjF,MAAMo4B,0BAA4BvD,EAAUuD,0BAEjDnzB,KAAKozB,kBAAkBD,EAAyBa,K,6CAKlD/wB,OAAOgxB,oBAAoB,SAAUj0B,KAAKsyB,uB,+BAsClC,IAAD,EACoBtyB,KAAKjF,MAAxBqoB,EADD,EACCA,SAAU5kB,EADX,EACWA,KADX,EAEsEwB,KAAKN,MAA1Em0B,EAFD,EAECA,YAAaD,EAFd,EAEcA,YAAab,EAF3B,EAE2BA,WAAYJ,EAFvC,EAEuCA,2BACxCuB,EA1FS,GA2FbvB,EA1Fe,IA0F4BA,EAA6B,GACpEP,EA5FS,GA4FEW,EA3FA,GA2F0BA,EAC3C,OACE,kBAAC,GAAD,CAAWv0B,KAAMA,GACdo1B,GACC,kBAAC7B,GAAD,CAAWl1B,SAAU,EAAGgF,QAAS7B,KAAKqzB,SAAUpB,MAAI,GAClD,kBAAC,IAAD,CAAMt1B,KAAK,gBAGf,kBAACm1B,GAAD,CAAczmB,OAAQ6oB,GACpB,kBAAC/B,GAAD,CAAOC,SAAUA,GAAWhP,IAE7ByQ,GACC,kBAAC9B,GAAD,CAAWl1B,SAAU,EAAGgF,QAAS7B,KAAKizB,SAAUf,MAAI,GAClD,kBAAC,IAAD,CAAMv1B,KAAK,uB,GAxFsBopB,aCTtC,IAAMoO,GAAyB,SAAC,GAAD,IACpCC,EADoC,EACpCA,aACAvyB,EAFoC,EAEpCA,QACAE,EAHoC,EAGpCA,UACAkiB,EAJoC,EAIpCA,SACAzlB,EALoC,EAKpCA,KACA3B,EANoC,EAMpCA,SANoC,OAQpCw3B,GAAsB,cACpB51B,UAAW21B,EACXnf,MAAOmf,EACPnQ,WACApiB,UACAE,YACAJ,KAAM4mB,IAAM+L,OACZ91B,OACA3B,YACG03B,GAAoBtQ,MA6D3B,SAASoQ,GAAsBG,GAC7B,OAAO,kBAAC5C,GAAuB4C,GAGjC,SAASD,GAAoBtQ,GAC3B,OAAO,cACLtnB,KAAM,QACN+rB,SAAU,EACV/C,MAAO1B,EAAW2B,IAAKC,OAAO4O,aAAe7O,IAAKC,OAAO4C,iBACzDrY,SAAU,SAACvU,GAAD,OAAiB64B,GAAwBzQ,EAAUpoB,IAC7DstB,cAAe,SAACttB,GAAD,OAAiBF,YAAeE,EAAOsB,UAAW,OAC5D8mB,GAAY,CACf0Q,cAAe,SAAC94B,GAAD,OAAiBA,EAAOsB,WACvCy3B,WAAYhP,IAAKC,OAAO4O,eA0E9B,SAASxL,GAAYpB,EAAe7S,EAA6B6T,GAC/D,OAAOhB,EAASE,SACZ,SAWN,SACEJ,EACA3S,EACA4S,EACAkB,EACAC,EACAF,GAEA,OAAIlB,GAAc3S,EACZ4S,EACKO,IAA2BC,GAE7BD,IAA2BE,MACzBV,IAAe3S,EACpB6T,EACEC,GAA2BC,EACtBZ,IAA2BC,GAE7BD,IAA2BG,SAE7BH,IAA2BC,GAE3BD,IAA2BG,SAhChCuM,CACEhN,EAASF,WACT3S,EACA6S,EAASD,oBACTC,EAASiB,wBACTjB,EAASkB,gBACTF,GAoCR,SAASiM,GACPjN,EACAhsB,EACAmZ,EACA6T,EACAjd,GACC,IACOgc,EAA2DC,EAA3DD,oBAAqBG,EAAsCF,EAAtCE,SAAUe,EAA4BjB,EAA5BiB,wBACvC,OAAI9T,EACE4S,GAAuBG,EAClBlsB,EAAO8B,aAEP9B,EAAO4B,gBAGbuX,GAAsB6T,GAAsBC,EACxCjtB,EAAO8B,aAEThC,YAAeE,EAAOsB,UAAWyO,GAE1C,SAASmpB,GAAyBlN,EAAehsB,GAC/C,OAAOgsB,EAASD,qBAAuBC,EAASE,SAC5ClsB,EAAO8B,aACP9B,EAAO4B,eAGb,SAASi3B,GAAwBzQ,EAAepoB,GAC9C,OAAOooB,EAAWpoB,EAAOC,UAAYH,YAAeE,EAAOsB,UAAW,IAGzD63B,OA3Me,SAAC,GAUH,IAT1BnN,EASyB,EATzBA,SACAhmB,EAQyB,EARzBA,QACAE,EAOyB,EAPzBA,UACAkiB,EAMyB,EANzBA,SACAzlB,EAKyB,EALzBA,KACA3B,EAIyB,EAJzBA,SACA8Q,EAGyB,EAHzBA,yBACAqH,EAEyB,EAFzBA,mBACA6T,EACyB,EADzBA,mBAEIoM,EA4EN,SAA8BhR,EAAmB4D,GAC/C,IAAIlrB,EAGAA,EAFAkrB,EAASF,WACPE,EAASD,oBACJO,IAA2BC,GAE3BD,IAA2BE,MAG7BF,IAA2BG,SAGhCT,EAASE,WACXprB,EAAO,UAET,IAAIgpB,EAAgBC,IAAKC,OAAO4C,iBAC5BxE,EACF0B,EAAQC,IAAKC,OAAO4O,aACX5M,EAASF,aAClBhC,EAAQC,IAAKC,OAAOC,gBAGtB,OAAO,cACLnpB,OACA+rB,SAAUb,EAASF,WAAa,EAAI,EACpCvX,SAAU,SAACvU,GAAD,OACRgsB,EAASF,WACLoN,GAAyBlN,EAAUhsB,GACnC64B,GAAwBzQ,EAAUpoB,IACxCstB,cAAe,SAACttB,GAAD,OAmDnB,SAAuBgsB,EAAehsB,GACpC,OAAOgsB,EAASF,WACZoN,GAAyBlN,EAAUhsB,GACnCF,YAAeE,EAAOsB,UAAW,IAtDHgsB,CAActB,EAAUhsB,IACxD8pB,UACK1B,GAAY,CACf2Q,WAAYhP,IAAKC,OAAO4O,cAV5B,IAYOxQ,IACF4D,EAASF,YAAc,CACtBgN,cAAe,SAAC94B,GAAD,OAAiBA,EAAOsB,aAhH7B+3B,CAAqBjR,EAAU4D,GAC3CA,EAASC,qBACXmN,EAAYV,GAAoBtQ,GACvBtW,IACTsnB,EA4CJ,SACEhR,EACA4D,EACA7S,EACA6T,GAEA,OAAO,cACLlsB,KAAMssB,GAAYpB,EAAU7S,EAAoB6T,GAChDH,SAAUb,EAASF,WAAa,EAAI,EACpCvX,SAAU,SAACvU,GAAD,OACRi5B,GAAwBjN,EAAUhsB,EAAQmZ,EAAoB6T,EAAoB,KACpFM,cAAe,SAACttB,GAAD,OACbi5B,GAAwBjN,EAAUhsB,EAAQmZ,EAAoB6T,EAAoB,KACpFlD,MAAO1B,EACH2B,IAAKC,OAAO4O,aACZ5M,EAASF,WACT/B,IAAKC,OAAOC,eACZF,IAAKC,OAAO4C,mBACXxE,GAAY,CACf2Q,WAAYhP,IAAKC,OAAO4O,cAb5B,IAeOxQ,IACF4D,EAASF,YAAc,CACtBgN,cAAe,SAAC94B,GAAD,OAAiBA,EAAOsB,aAnE/Bg4B,CACVlR,EACA4D,EACA7S,EACA6T,IAIJ,IAAMpqB,EAAYopB,EAASF,WACvBE,EAASD,oBAAT,UACKnsB,YAAS,iCADd,YACkDosB,EAAS5S,OAD3D,UAEKxZ,YAAS,kCAFd,YAEmDosB,EAAS5S,OAH9C,UAIXxZ,YAAS,8BAJE,YAI+BosB,EAAS5S,OAC1D,OAAOof,GAAsB,cAC3B51B,UAAWopB,EAASC,qBAAuBD,EAAS5S,MAAQxW,EAC5DwW,MAAO4S,EAAS5S,OAASxW,EACzBwlB,WACApiB,UACAE,YACAJ,KAAM4mB,IAAM+L,OACZ91B,OACA3B,YACGo4B,KCrEDG,G,sLACM,IAAD,EASHp1B,KAAKjF,MAPPw0B,EAFK,EAELA,iBACA3Z,EAHK,EAGLA,mBACA0T,EAJK,EAILA,iBACA+L,EALK,EAKLA,oBACArgB,EANK,EAMLA,mBACAD,EAPK,EAOLA,eACA8T,EARK,EAQLA,mBAGF,OACE,gBAAC,GAAD,CACEmL,gBAAiBqB,EACjBlC,wBAAyB5D,EAAiB/uB,OAC1ChC,KAAK,QAEJ+wB,EAAiBnZ,KAAI,SAACsZ,EAAW4F,GAAZ,OACpB,gBAAC,GAAD,eACEjzB,IAAKizB,EACL92B,KAAK,WACL3B,SAAU,EACVgrB,SAAU6H,EACV/hB,yBAA0BoH,EAC1BC,mBAAoBA,EACpB6T,mBAAoBA,EACpB5E,SAAUyL,EAAKx0B,KAAOouB,GACjBoG,EAAKx0B,KAAOouB,GAAoB,CACnCznB,QAAS,kBAAM+T,EAAmB8Z,EAAKhS,UAAWgS,EAAKx0B,KACvD6G,UAAW,SAAAhD,GACS,UAAdA,EAAMsD,KACRuT,EAAmB8Z,EAAKhS,UAAWgS,EAAKx0B,gB,GAhCpBqH,aAkDvBmL,oBAPf,SAAyBhO,GACvB,MAAO,CACL7D,OAAQ6oB,YAAUhlB,GAClB61B,gCAAiCC,aAAmC91B,MAIzDgO,CAAyB0nB,I,q1CCzDjC,IAAMK,GAAwBj5B,UAAO6zB,IAAI3zB,OAAM,SAAC3B,GAAD,MAAwC,CAC5F,aAAcA,EAAM0D,UACpB,cAAe1D,EAAM26B,cAFcl5B,CAAH,KAOvBqqB,IAAI8O,gBACJ9O,IAAI8O,gBACFC,IAAQC,eAKC,SAAA96B,GAAK,OAAIA,EAAMa,MAAMC,OAAOi6B,iBAC9C/3B,aAAW,QAGT6oB,IAMF,SAAA7rB,GAAK,OACJA,EAAMoX,YACP3U,cADA,QAMAH,IAAM0iB,MA/BwB,OAuCrBgW,GAAkBv5B,UAAO2B,IAAV,MAKhB,SAAApD,GAAK,OAAKA,EAAMi7B,kBAAoB,iBAAmB,oBAUjD,SAAAj7B,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAKxD,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAKzD2wB,GAAatxB,UAAO2B,IAAV,MAGP,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,gB,qBC7DtCs4B,GACkB,GA4BXC,GAAb,8MACEC,kBAAoB,SAAC5f,GACnB,OAAIA,GAAS0f,GACJA,GAEF1f,GALX,EAQEqY,gCAAkC,SAACviB,EAAc2I,GAC/C,OAAIA,EACK,EAAKmhB,kBAAkB9pB,EAAQkK,OAEjC,EAAK4f,kBAAkB9pB,EAAQ+I,kBAZ1C,EAeE8E,sBAAwB,SAAC7N,GACvB,OAAO,EAAK8pB,kBAAkB9pB,EAAQkK,QAhB1C,EA6CE6f,gBAAkB,SAAC/pB,GAAkB,IAAD,EACU,EAAKtR,MAAzCoS,EAD0B,EAC1BA,gBAAiB4H,EADS,EACTA,eACnBC,EAAqB7H,EAAgB6H,mBAE3C,OAAID,EACKC,GAAsB3E,aAAShE,EAAQmD,QAEvCa,aAAShE,EAAQmD,SApD9B,EAwDE6mB,eAAiB,WAAO,IAAD,EAC0C,EAAKt7B,MAA5D61B,EADa,EACbA,gBAAiBzjB,EADJ,EACIA,gBAAiBmc,EADrB,EACqBA,iBACtCjd,EAAe,KACfiK,EAAmB,GACnB+e,GAAuB,EACvBiB,GAAsB,EAmB1B,OAjBI1F,IACFvkB,EACEc,EAAgBG,SAASipB,MAAK,SAAC7G,EAAMzb,GACnC,OAAOyb,EAAKx0B,KAAO01B,MACf,GACH4F,KAAQnqB,KACXiqB,EAAqBnpB,EAAgBG,SAAShJ,QAAQ+H,IASxDgpB,GAPA/e,GAAajK,EAAQiK,WAAa,IAAIF,KAAI,SAACyR,EAAe4B,GAAhB,MAAwC,CAChFpnB,IAAI,GAAD,OAAKonB,GACR5B,WACAD,oBAAqBC,EAASD,oBAC9BzS,gBAAiB0S,EAAS1S,gBAC1BuI,UAAWrR,EAAQnR,QAEWu7B,WAAU,SAAA/G,GAAI,OAAIA,EAAK7H,SAAS3sB,KAAOouB,MAElE,CAAEjd,UAASiK,YAAW+e,sBAAqBiB,uBAhFtD,2FAmB4BjqB,GAAe,IAAD,EACcrM,KAAKjF,MAAjDc,EAD8B,EAC9BA,OAAQsR,EADsB,EACtBA,gBAAiB4H,EADK,EACLA,eAC3BC,EAAqB7H,EAAgB6H,mBAC3C,OACE,gBAAC,KAAD,CACEwV,YAAa,GACbC,WACE1V,EACI/U,KAAK4uB,gCAAgCviB,EAAS2I,GAC9ChV,KAAKka,sBAAsB7N,GAEjCqe,OAAQ,CACNC,KAAM,CACJC,OAAQrV,aAASlJ,EAAQmD,QAAU3T,EAAO4B,eAAiB5B,EAAOC,UAClE+uB,cAAe,OACf9sB,WAAY,kCAEdktB,MAAO,CACLL,OAAQjvB,YAAeE,EAAOsB,UAAW,KACzCY,WAAY,4BAtCxB,+BAmFY,IAAD,EAoBHiC,KAAKjF,MAlBPoS,EAFK,EAELA,gBACAgF,EAHK,EAGLA,WACAmX,EAJK,EAILA,iBACAsH,EALK,EAKLA,gBACA3J,EANK,EAMLA,gBACArR,EAPK,EAOLA,mBACAyQ,EARK,EAQLA,kBACAxQ,EATK,EASLA,4BACA0b,EAVK,EAULA,gBACAV,EAXK,EAWLA,wBACAtB,EAZK,EAYLA,iBACA5V,EAbK,EAaLA,eACA5D,EAdK,EAcLA,kBACAhB,EAfK,EAeLA,eACAY,EAhBK,EAgBLA,0BACAkT,EAjBK,EAiBLA,mBACAlb,EAlBK,EAkBLA,yBACAuW,EAnBK,EAmBLA,iBAGIlP,EAAqB7H,EAAgB6H,mBAtBpC,EAuBiEhV,KAAKq2B,iBAArEhqB,EAvBD,EAuBCA,QAASiK,EAvBV,EAuBUA,UAAW+e,EAvBrB,EAuBqBA,oBAAqBiB,EAvB1C,EAuB0CA,mBAEjD,OACE,gBAACb,GAAD,CAAuBtjB,WAAYA,EAAY1T,UAAWhD,YAAS,yBACjE,gBAAC,GAAD,CAAQ8qB,WAAS,EAACU,gBAAiBA,EAAiBpqB,SAAUsV,GAAc,EAAI,IAC/EwH,GACC,gBAAC,GAAD,CACE4V,iBAAkBA,EAClB3Z,mBAAoBA,EACpB0T,iBAAkBA,EAClB+L,oBAAqBA,EACrBtgB,eAAgBA,EAChBC,mBAAoBA,EACpB6T,mBAAoBA,KAGtBlP,GAAkBiX,GAClB,gBAAC,GAAD,CACEoD,gBAAiBqB,EACjBlC,wBAA0B7c,EAAU9V,SAAmB6L,EAAQ+F,kBAC/D5T,KAAK,QAEJ6N,EAAQ+F,mBAAqBuD,GAC5B,gBAAC,GAAD,CACE9T,QAAS,kBAAMgU,EAA4BxJ,EAAQnR,GAAI6a,IACvDhU,UAAW,SAAAhD,GACS,UAAdA,EAAMsD,KACRwT,EAA4BxJ,EAAQnR,GAAI6a,IAG5CvX,KAAK,WACL3B,SAAU,EACVonB,SAAU4M,IAGbva,EAAUF,KAAI,SAAAsZ,GAAI,OACjB,gBAAC,GAAD,eACErtB,IAAKqtB,EAAKrtB,IACV7D,KAAK,WACL3B,SAAU,EACVgrB,SAAU6H,EAAK7H,SACf5D,SAAUyL,EAAK7H,SAAS3sB,KAAOouB,EAC/B3b,yBAA0BoH,EAC1BC,mBAAoBA,EACpB6T,mBAAoBA,GACf6G,EAAK7H,SAAS3sB,KAAOouB,GAAoB,CAC5CznB,QAAS,kBACP+T,EAAmB8Z,EAAKhS,UAAWgS,EAAK7H,SAAS3sB,GAAI6a,IACvDhU,UAAW,SAAAhD,GACS,UAAdA,EAAMsD,KACRuT,EAAmB8Z,EAAKhS,UAAWgS,EAAK7H,SAAS3sB,GAAI6a,YAQjE4D,GAAkBtN,GAAWA,EAAQ8I,iBACrC,gBAAC4gB,GAAD,CAAiBC,kBAAmBnD,IAAgCvc,EAAU9V,QAC5E,gBAAC,GAAD,CACE8rB,gBAAiB,YACjBhW,UAAWA,EACXC,MAAOlK,EAAQkK,MACf/G,OAAQnD,EAAQmD,OAChBkO,UAAWrR,EAAQnR,GACnBqxB,eAAc,yBAAoB+J,KAEnCt2B,KAAKo2B,gBAAgB/pB,GACpB,gBAAC,GAAD,KACE,gBAAC,IAAD,CAAM1P,KAAK,KAAKgF,KAAM,EAAG0Q,MAAM,qBAGjCrS,KAAK02B,0BAA0BrqB,IAIrC,gBAAC,GAAD,CACE5N,UAAWhD,YAAS,aACpB8qB,WAAS,EACTtC,SAAUsN,EACVlL,kBAAmBA,EACnBxpB,SAAUsV,GAAc,EAAI,EAC5BmU,MAAM3Y,IAA4BuW,SA7L5C,GAAkC3hB,aA2MnBmL,oBAPf,SAAyBhO,GACvB,MAAO,CACL7D,OAAQ6oB,YAAUhlB,GAClBqV,eAAgBpH,YAAyBjO,MAI9BgO,CAAyBwoB,I,8tBCnPjC,IAAMS,GAAWn6B,kBAAOyB,IAAPzB,CAAH,MACV,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAQpDy5B,GAAOp6B,UAAO0U,OAAOxU,OAAM,SAAC3B,GAAD,MAAuB,CAC7D8B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,UACpB,YAAa,sBAHKjC,CAAH,KAKbkC,IAKSk3B,IAAQiB,SACjB5Q,KACQ0Q,IACC,SAAA57B,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAO7Bw5B,IACC,SAAA57B,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAITw5B,GAI5Bt5B,IAAM0iB,MA7BO,OAkCb,SAAAhlB,GAAK,OACLA,EAAMoX,YACN9U,IAAMC,OADN,SCwCSw5B,GAAb,8MACElhB,mBAAqB,SAAC8H,EAAmBrH,GAAwB,IAAD,EAQ1D,EAAKtb,MANP2e,EAF4D,EAE5DA,eACA3L,EAH4D,EAG5DA,aACA2S,EAJ4D,EAI5DA,gBACAC,EAL4D,EAK5DA,YACA5K,EAN4D,EAM5DA,kBACA6K,EAP4D,EAO5DA,aAIAlH,GACCkH,IAAgB7R,IAAY8R,aAAeD,IAAgB7R,IAAY+R,QAExE/S,EAAagT,gBAAgBJ,GAC7B5S,EAAaiT,cAEXjL,GACF,EAAKghB,SAAS9V,aAAevD,EAAWrH,IACxC,EAAK2gB,eAAe3gB,GACpBqK,EAAgBS,aAAa9K,IAE7B,EAAK0gB,SAAS9V,aAAevD,EAAWrH,KAvB9C,EA2BEgQ,kBAAoB,WAClB,EAAK0Q,SAAS9nB,MA5BlB,EA+BEgY,gBAAkB,WAChB,EAAK8P,SAASE,MAhClB,EAmCEphB,4BAA8B,SAAC6H,EAAmB3H,GAC5CA,GACF,EAAKghB,SAAS3V,aAAwB1D,IACtC,EAAKsZ,eAAetZ,IAEpB,EAAKqZ,SAAS3V,aAAwB1D,KAxC5C,EA4CErQ,oBAAsB,SAAChB,GAAkB,IAAD,EACG,EAAKtR,MAAtC2e,EAD8B,EAC9BA,eAAgB3L,EADc,EACdA,aACpBA,GAAgB2L,IAClB3L,EAAae,eAAeC,IAAYC,SACxCjB,EAAampB,uBAEf,EAAKn8B,MAAMo8B,QAAQ9pB,oBAAoBhB,IAlD3C,EAqDE0qB,SAAW,SAAC1zB,GACN,EAAKtI,MAAMq8B,sBACb,EAAKC,gCAEP,EAAKt8B,MAAMsT,cAAchL,IAzD7B,EA4DE2zB,eAAiB,SAAC97B,GACZ,EAAKH,MAAMq8B,sBACb,EAAKC,gCAEP,EAAKt8B,MAAMmmB,WAAWhmB,IAhE1B,EAmEEm8B,8BAAgC,WAC9B,EAAKt8B,MAAMo8B,QAAQE,iCApEvB,0EAuEY,IACAllB,EAAenS,KAAKjF,MAApBoX,WACFmlB,EAAW,CACfnqB,gBAAiBnN,KAAKjF,MAAMoS,gBAC5ByjB,gBAAiB5wB,KAAKjF,MAAM61B,gBAC5BtH,iBAAkBtpB,KAAKjF,MAAMuuB,iBAC7BrC,gBAAiBjnB,KAAKinB,gBACtBZ,kBAAmBrmB,KAAKqmB,kBACxBzQ,mBAAoB5V,KAAK4V,mBACzBC,4BAA6B7V,KAAK6V,4BAClCxI,oBAAqBrN,KAAKqN,oBAC1BkkB,iBAAkBvxB,KAAKjF,MAAM61B,gBAC7Bze,aACA0e,wBAAyB7wB,KAAKjF,MAAM81B,wBACpCrY,eAAgBxY,KAAKjF,MAAM2E,MAAM63B,OAAOhhB,MACxC2C,aAAclZ,KAAKjF,MAAMme,aACzB5E,iBAAkBtU,KAAKjF,MAAMuZ,iBAC7BkF,4BAA6BxZ,KAAKjF,MAAMye,4BACxC+V,iBAAkBvvB,KAAKjF,MAAMw0B,iBAC7B5V,eAAgB3Z,KAAKjF,MAAM4e,eAC3B5D,kBAAmB/V,KAAKjF,MAAMgb,kBAC9BpI,yBAA0B3N,KAAKjF,MAAM4S,yBACrC+K,6BAA8B1Y,KAAKjF,MAAM2d,6BACzCD,6BAA8BzY,KAAKjF,MAAM0d,6BACzCM,0BAA2B/Y,KAAKjF,MAAMge,0BACtCmL,iBAAkBlkB,KAAKjF,MAAMmpB,iBAC7BsT,kBAAmBx3B,KAAKjF,MAAMy8B,oBAC9BjM,eAAgBvrB,KAAKjF,MAAMwwB,eAC3B5V,0BAA2B3V,KAAKjF,MAAM4a,0BACtCkT,mBAAoB7oB,KAAKjF,MAAM8tB,oBAEjC,OACE,kBAAC,IAAM2I,SAAP,KACE,kBAAC,GAAgB8F,GACjB,kBAACV,GAAD,CACEzkB,WAAYA,EACZtQ,QAAS7B,KAAKq3B,8BACdx6B,SAAU,EACV4B,UAAWhD,YACT0W,EAAa,kCAAoC,oCAGnD,kBAACwkB,GAAD,CAAUh6B,KAAK,YAAYgF,KAAM,MAEnC,kBAAC,GAAiB21B,QAnH1B,GAAmCvR,aAqKpBvY,mBACbC,YAAeC,aA7CjB,SAAyBhO,GACvB,IAAM+3B,EAASC,aAAkBC,KAC3BC,EAA0BF,aAAkBG,KAElD,MAAO,CACL1lB,WAAY2lB,aAA2Bp4B,GACvCyN,gBAAiBS,YAAmBlO,GACpC03B,qBAAsBW,aAAgBr4B,GACtCmxB,wBAAyBA,KAAwB3xB,KAC/C84B,eAAyBrxB,QAAQ,IAAK,KAExCiqB,gBAAiB6G,EAAO/Z,WAAaka,EAAwBla,UAC7D4L,iBAAkBmO,EAAOphB,WACzB6C,aAAc+B,YAAqBvb,GACnC4U,iBAAkBhE,YAAsB5Q,GACxC8Z,4BAA6B0B,aAA+Bxb,GAC5D6vB,iBAAkB0I,YAAiBv4B,EAAOw4B,YAAWx4B,IACrDia,eAAgBgC,YAAsBjc,GACtCqW,kBAAmBgM,YAAwBriB,GAC3CiO,yBAA0BA,YAAyBjO,GACnDgZ,6BAA8B2C,YAAgC3b,GAC9D+Y,6BAA8B6C,YAAwC5b,GACtEqZ,0BAA2BwC,YAA6B7b,GACxDwkB,kBAAmBlP,YAAmBtV,GACtCy4B,iBAAkBA,aAAiBz4B,GACnC6rB,eAAgBlb,YAAS3Q,GACzBkhB,YAAaoB,YAAetiB,GAC5Bga,eAAgB8B,YAAgB9b,GAChCihB,YAAasB,YAAgBviB,GAC7BiW,0BAA2BA,YAA0BjW,GACrD04B,0BAA2BC,YAAoC34B,GAC/Dgf,eAAgBY,YAAiB5f,GACjCmpB,mBAAoBA,aAAmBnpB,OAI3C,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrCC,aAAcC,YAAmBC,EAAoBH,GACrD4S,gBAAiB1S,YAAmBoU,GAAuBtU,MAK9CJ,CAA6CopB,M,qkCCvPvD,IAAMwB,GAAY97B,kBAAO8B,IAAP9B,CAAH,KAClBU,KACO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAKpDo7B,GAAgC/7B,kBAAO8B,IAAP9B,CAAH,KAGtCa,IAAM0S,OAHgC,OAQ7ByoB,GAA2Bh8B,UAAO2B,IAAV,MAC1B,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAEvB,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAGzDs7B,GAA2Bj8B,UAAO2B,IAAV,MAIxBu6B,GAAyBl8B,kBAAO8B,IAAP9B,CAAH,KAC/Byf,IACA0c,KAIS7mB,GAAwBtV,kBAAO8B,IAAP9B,CAAH,KAC9Byf,KAIS2c,GAA0Bp8B,kBAAO8B,IAAP9B,CAAH,KAChCmQ,KAMSksB,GAAwBr8B,kBAAOyB,IAAPzB,CAAH,MACvB,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,a,WCjDxB,SAASg9B,GAA0BC,EAA0CC,GAC1F,6LAEI,MAAoC,oBAAzBA,EACF,kBAACD,EAAqB/4B,KAAKjF,OAEhCi+B,EAAqBh5B,KAAKjF,OACrB,kBAACk+B,GAAA,EAAD,MAGF,kBAACF,EAAqB/4B,KAAKjF,WATtC,EAAM,CAA0BgrB,aCuC3B,IAAMmT,GAAb,8MACEC,mBAAqB,WAAO,IAAD,EAOrB,EAAKp+B,MALPo+B,EAFuB,EAEvBA,mBACAzf,EAHuB,EAGvBA,eACA3L,EAJuB,EAIvBA,aACA4S,EALuB,EAKvBA,YACAC,EANuB,EAMvBA,YAEFuY,KAEEzf,GACCkH,IAAgB7R,IAAY8R,aAAeD,IAAgB7R,IAAY+R,QAExE/S,EAAagT,gBAAgBJ,GAC7B5S,EAAaiT,eAfnB,EAmBEoY,iBAAmB,SAACl+B,IAElBgmB,EADuB,EAAKnmB,MAApBmmB,YACGhmB,IArBf,0EAwBY,IAAD,EACoD8E,KAAKjF,MAAxDsR,EADD,EACCA,QAASoL,EADV,EACUA,QAAS4hB,EADnB,EACmBA,UAAWtjB,EAD9B,EAC8BA,kBAEnCujB,EAKEjtB,EALFitB,sBACAlnB,EAIE/F,EAJF+F,kBACA6C,EAGE5I,EAHF4I,MACA/Z,EAEEmR,EAFFnR,GACAq+B,EACEltB,EADFktB,gDAGF,OACE,kBAAC,WAAD,KACGF,IAActjB,GAAqB,kBAAC,IAAD,CAAY0B,QAASA,IACzD,kBAAC6gB,GAAD,KAAY78B,YAAS,uBACrB,kBAAC+a,GAAA,EAAD,CACEC,QAAS,CACPva,KAAMwa,KAAqBC,QAC3BC,SAAUC,KAA0BC,MACpC5b,KACA+Z,UAGF,kBAACsjB,GAAD,CACEjmB,WAAW,KACXzV,SAAU,EACV3B,GAAI2jB,IAAoB2a,wBACxBxf,aAAa,GAEZ/E,IAGL,kBAACujB,GAAD,KACE,kBAACC,GAAD,KACE,kBAACI,GAAD,CAAuBl3B,KAAM,GAAIhF,KAAK,uBACtC,kBAAC+7B,GAAD,CAAwBpmB,WAAY,KACjC7W,YAAS,yBAEZ,kBAAC,GAAD,CAAuB6W,WAAY,KAAMF,KACtCknB,GACD,kBAACV,GAAD,CAAyBtmB,WAAY,KAClC7W,YAAS,4CAA6C,CACrDmwB,sBAAuB2N,EACvB1N,oBAAqByN,OAM/B,kBAAC,IAAD,CAAWjf,OAAQ,GAAIzO,QAAS,GAAKyG,MAAM,eACzC0D,GACA,kBAAC,IAAD,CACEtH,OAAQC,IAAOC,OAAOC,QACtB/M,QAAS7B,KAAKm5B,mBACdt8B,SAAU,EACV48B,WAAW,cAEVh+B,YAAS,yBAhFtB,GAAuCsqB,aAkIxBtY,mBACbC,aA3CF,SAAyBhO,EAAqBmtB,GAC5C,IACQnP,GADUqE,YAAwBriB,GAG/BmtB,EAEFA,EAAS6M,MAAMjC,QAJhB/Z,UAFmD,EAQtBic,KAA4Bj6B,EAAOge,GAAhEzI,EARmD,EAQnDA,MAAO7C,EAR4C,EAQ5CA,kBAEf,MAAO,CACLqF,QAASmiB,YAAQl6B,GACjB25B,UAAWQ,YAAgBn6B,GAC3BqW,kBAAmBgM,YAAwBriB,GAC3C2M,QAAS,CACPnR,GAAIwiB,EACJzI,QACA7C,oBACAknB,sBAAuBK,KACrBj6B,EACAge,GAEF6b,gDAAiDI,KAC/Cj6B,EACAge,IAGJkD,YAAaoB,YAAetiB,GAC5Bga,eAAgB8B,YAAgB9b,GAChCihB,YAAasB,YAAgBviB,OAGjC,SAA4BoO,GAC1B,MAAO,CACLC,aAAcC,YAAmBC,EAAoBH,MASvDJ,CAGEorB,GAAuBI,IAR3B,SAA8Bn+B,GAC5B,OAAQA,EAAMsR,a,UCdDvR,wBAtJO,SAACC,GAAD,OACpB,kBAAC,IAAD,CACEC,MAAM,QACNqQ,OAAO,QACP/P,QAAQ,cACRL,QAAQ,MACRE,MAAM,6BACNqD,KAAK,MACLhD,UAAS,UAAKC,YAAS,yBAEvB,8CACA,0DACA,8BACE,4BACEL,EAAE,OACFC,EAAE,OACFL,MAAM,SACNqQ,OAAO,SACPE,YAAY,oBACZrQ,GAAG,YAEH,oCAAgB4+B,aAAa,IAAItuB,GAAG,mBAEtC,4BACEpQ,EAAE,OACFC,EAAE,OACFL,MAAM,SACNqQ,OAAO,SACPE,YAAY,oBACZrQ,GAAG,YAEH,oCAAgB4+B,aAAa,IAAItuB,GAAG,oBAGxC,uBACEtQ,GAAG,uBACH0vB,OAAO,OACPJ,YAAY,IACZ9uB,KAAK,OACL+P,SAAS,UACTC,UAAU,uCAEV,uBAAGxQ,GAAG,WAAWwQ,UAAU,qCACzB,0BACE3P,EAAE,grCASFb,GAAG,SACHQ,KAAMX,EAAMa,MAAMC,OAAOsB,UACzByO,QAAQ,eACRD,OAAO,mBAET,uBACEzQ,GAAG,UACHwQ,UAAU,wIAEV,uBAAGxQ,GAAG,UAAUwQ,UAAU,kCACxB,0BACE3P,EAAE,4PAEFb,GAAG,QACHQ,KAAMC,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,GAAK,CAAE60B,YAAY,IACtEvmB,SAAS,UACTG,QAAQ,gBAEV,0BACE7P,EAAE,4zBAOFb,GAAG,QACHQ,KAAMX,EAAMa,MAAMC,OAAOsB,UACzBsO,SAAS,UACTG,QAAQ,gBAEV,0BACE7P,EAAE,6OAEFb,GAAG,QACH6+B,cAAc,MACdnP,OAAQ7vB,EAAMa,MAAMC,OAAOsB,UAC3BqtB,YAAY,YACZ9uB,KAAMX,EAAMa,MAAMC,OAAOuB,iBACzBqO,SAAS,YAEX,uBAAGvQ,GAAG,QAAQwQ,UAAU,kCACxB,0BACE3P,EAAE,+MAGFb,GAAG,QACHiR,YAAY,MACZzQ,KAAMX,EAAMa,MAAMC,OAAOsB,UACzBsO,SAAS,UACTG,QAAQ,gBAEV,4BACE1Q,GAAG,OACHiR,YAAY,MACZzQ,KAAMX,EAAMa,MAAMC,OAAOsB,UACzBsO,SAAS,UACTI,GAAG,aACHC,GAAG,aACHG,EAAE,eAEJ,4BACE/Q,GAAG,OACHQ,KAAMX,EAAMa,MAAMC,OAAOuB,iBACzBqO,SAAS,UACTI,GAAG,aACHC,GAAG,YACHG,EAAE,eAEJ,0BACElQ,EAAE,sjBAKFb,GAAG,QACHiR,YAAY,MACZzQ,KAAMX,EAAMa,MAAMC,OAAOsB,UACzBsO,SAAS,cAIf,6BACEvQ,GAAG,cACHQ,KAAMX,EAAMa,MAAMC,OAAOsB,UACzByO,QAAQ,cACRD,OAAO,iBACPE,GAAG,MACHC,GAAG,QACHC,GAAG,KACHC,GAAG,cCQElR,wBAxJU,SAACC,GAAD,OACvB,kBAAC,IAAD,CACEC,MAAM,QACNqQ,OAAO,QACP/P,QAAQ,cACRL,QAAQ,MACRE,MAAM,6BACNK,UAAS,UAAKC,YAAS,gCAEvB,qDACA,8BACE,4BACEL,EAAE,OACFC,EAAE,OACFL,MAAM,SACNqQ,OAAO,SACPE,YAAY,oBACZrQ,GAAG,YAEH,oCAAgB4+B,aAAa,IAAItuB,GAAG,mBAEtC,4BACEpQ,EAAE,OACFC,EAAE,OACFL,MAAM,SACNqQ,OAAO,SACPE,YAAY,oBACZrQ,GAAG,YAEH,oCAAgB4+B,aAAa,IAAItuB,GAAG,mBAEtC,4BAAQtQ,GAAG,SAAS2Q,GAAG,MAAMC,GAAG,KAAKG,EAAE,QAEzC,uBACE/Q,GAAG,4CACH0vB,OAAO,OACPJ,YAAY,IACZ9uB,KAAK,OACL+P,SAAS,WAET,uBACEvQ,GAAG,6CACHwQ,UAAU,uCAEV,uBAAGxQ,GAAG,QAAQwQ,UAAU,qCACtB,6BACExQ,GAAG,SACHQ,KAAK,UACLkQ,QAAQ,cACRD,OAAO,iBACPE,GAAG,MACHC,GAAG,QACHC,GAAG,KACHC,GAAG,QAEL,0BACEjQ,EAAE,suCAUFb,GAAG,SACHQ,KAAK,UACLkQ,QAAQ,OACRD,OAAO,mBAET,0BACE5P,EAAE,6ZAIFb,GAAG,YACH6+B,cAAc,MACdnP,OAAO,UACPJ,YAAY,IACZ9uB,KAAK,UACLgQ,UAAU,4FAEZ,0BACE3P,EAAE,qSAGFb,GAAG,UACHQ,KAAK,UACLkQ,QAAQ,cACRF,UAAU,4FAEZ,0BACE3P,EAAE,mSAGFb,GAAG,UACHQ,KAAK,UACLkQ,QAAQ,cACRF,UAAU,4FAEZ,0BACE3P,EAAE,kzBAOFb,GAAG,UACHQ,KAAK,UACLkQ,QAAQ,cACRF,UAAU,4FAEZ,0BACE3P,EAAE,8EACFb,GAAG,SACHQ,KAAK,UACLkQ,QAAQ,MACRF,UAAU,4FAEZ,uBAAGxQ,GAAG,QACJ,yBAAKQ,KAAK,UAAUwQ,UAAU,YAC9B,yBACE6tB,cAAc,MACdnP,OAAO,UACPJ,YAAY,IACZre,YAAY,OACZzQ,KAAK,UACLwQ,UAAU,aAGd,0BACEnQ,EAAE,i0BAMFb,GAAG,eACH0vB,OAAO,UACPJ,YAAY,MACZ9uB,KAAK,UACL+P,SAAS,UACTG,QAAQ,cACRF,UAAU,mG,w7BCpJf,IAAMmB,GAAgBrQ,kBAAOsQ,IAAPtQ,CAAH,KACtBkC,KAGkB,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAIrC,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAGjB,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OACjE,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAQ5BsP,GAAqBjQ,UAAO2B,IAAV,MAOlBmO,GAAe9P,kBAAO8B,IAAP9B,CAAH,MAKd,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAG1B68B,GAAuBx9B,UAAO6P,QAAV,MCyBlB4tB,GAhD+D,SAC5El/B,GACI,IAAD,EACuDwH,YAAwB,GAD/E,oBACI23B,EADJ,KAC2BC,EAD3B,KA0BH,OACE,gBAAC,IAAD,CAAcj+B,KAAMoS,IAAaC,cAAcC,YAC7C,gBAACwrB,GAAD,KACE,gBAAC,GAAD,CAAc1nB,WAAW,OAAO3Q,KAAM,IACnClG,YAAS,8BAfhB,gBAAC,IAAD,CAAcS,KAAMoS,IAAaC,cAAcC,YAC7C,gBAAC,GAAD,KACE,gBAAC,KAAD,CACEmO,SAAS,eACTyd,SAAU,GACVC,gBAAiB5+B,YAAS,gCAa5B,gBAAC,GAAD,CAAegT,OAAQC,IAAOC,OAAOC,QAAS/M,QA9BrB,gCAAA6B,EAAAmL,OAAA,mDACxBqrB,EADwB,uBAE3BC,GAAyB,GAFE,EAGap/B,EAAMu/B,cAAtCC,EAHmB,EAGnBA,WAAYtT,EAHO,EAGPA,gBACZ7Y,EAAerT,EAAfqT,WAJmB,WAAA1K,EAAA,MAKrB62B,KALqB,OAM3BnsB,IACA6Y,IAP2B,sCA8BsDpqB,SAAU,GACtFpB,YAAS,wBAEZ,gBAAC,IAAD,CACEihB,KAAMjhB,YAAS,wBACfgT,OAAQ+rB,IAAK7rB,OAAO8rB,KACpB54B,QAAS9G,EAAMqT,gB,8vCC5CzB,IAIassB,GAAiBl+B,UAAO2B,IAAV,KAJR,eAeD,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAOjCw9B,GAAqBn+B,UAAO2B,IAAV,KAC3BjB,IAEA+sB,MAEO,SAAAlvB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAM7D,SAAApC,GAAK,OACLA,EAAMsV,UACN7S,cADA,KAEWzC,EAAMa,MAAMC,OAAO8B,iBAIrBi9B,GAAuBp+B,UAAO2B,IAAV,KAxCd,cACF,6BA4DO,SAAApD,GAAK,OAAIA,EAAMma,WA3Dd,QA2DyE,SAAAna,GAAK,OAAIA,EAAMma,WA5DhG,QAqEC,SAAAna,GAAK,OACjBA,EAAMsV,SACFtV,EAAMa,MAAMC,OAAO8B,aACnBhC,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,O,sHC/EhD,IAAM09B,GAASr+B,UAAOs+B,IAAIp+B,OAAM,SAAC3B,GAAD,MAAyB,CAC9DyD,KAAMzD,EAAMyD,KACZ,aAAczD,EAAMS,aAFAgB,CAAH,MC+CJ1B,wBA/CuB,SAACC,GAAD,OACpC,kBAAC8/B,GAAD,CACE7/B,MAAM,QACNqQ,OAAO,QACP/P,QAAQ,cACRL,QAAQ,MACRE,MAAM,6BACNqD,KAAK,OAEL,8BACE,4BACEtD,GAAG,YACHF,MAAM,OACNqQ,OAAO,OACPjQ,EAAE,KACFC,EAAE,KACFkQ,YAAY,qBAEZ,oCAAgBC,GAAG,oBAGvB,uBAAG9P,KAAK,OAAOq/B,YAAU,WACvB,0BACEr/B,KAAMC,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,GACnDpB,EAAE,6gBAIF4P,OAAO,kBACPC,QAAQ,MACRF,UAAU,oBAEZ,uBAAGhQ,KAAMC,YAAeZ,EAAMa,MAAMC,OAAO8B,aAAc,GAAMo9B,YAAU,WACvE,0BACEh/B,EAAE,82BAOF2P,UAAU,0BCPL5Q,wBAlCuB,SAACC,GAAD,OACpC,kBAAC8/B,GAAD,CACE7/B,MAAM,QACNqQ,OAAO,OACP/P,QAAQ,aACRL,QAAQ,MACRE,MAAM,6BACNqD,KAAK,OAEL,8BACE,4BACEtD,GAAG,YACHF,MAAM,OACNqQ,OAAO,OACPjQ,EAAE,KACFC,EAAE,KACFkQ,YAAY,qBAEZ,oCAAgBC,GAAG,oBAGvB,0BACE9P,KAAMC,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,GACnDsO,SAAS,UACT1P,EAAE,6gBAIF4P,OAAO,kBACPC,QAAQ,MACRF,UAAU,uBCkCDgC,oBARf,SAAyBhO,GACvB,MAAO,CACL7D,OAAQ6oB,YAAUhlB,GAClB2Q,SAAU4c,IAAyBvtB,GACnC6W,MAAO0W,IAAyBvtB,MAIrBgO,EAhDqB,SAAC,GAKH,IAAD,IAJ/B2C,gBAI+B,aAH/BkG,aAG+B,MAHvB,EAGuB,MAF/B2C,oBAE+B,MAFhB,EAEgB,EAD/Brd,EAC+B,EAD/BA,OAEMqZ,EAAYgE,EAAe,IAAO8hB,IACxC,OACE,oCACG3qB,EAAW,kBAAC,GAAD,MAA6B,kBAAC,GAAD,MACzC,kBAACqqB,GAAD,CAAgBrqB,SAAUA,GACxB,kBAACsqB,GAAD,CAAoBtqB,SAAUA,GAC3BkG,EACD,oCAEF,kBAAC,KAAD,CACEiU,YAAa,EACbC,WAAYlU,EACZmU,OAAQ,CACNC,KAAM,CACJC,OACE/uB,IAAWwU,EAAWxU,EAAO8B,aAAehC,YAAeE,EAAOsB,UAAW,KAC/E0tB,cAAeC,IAAqBC,eACpChtB,WAAY+sB,IAAqBE,YAEnCC,MAAO,CACLL,OAAQ/uB,GAAUF,YAAeE,EAAOsB,UAAW,SAIzD,kBAACy9B,GAAD,CAAsB1lB,SAAUA,EAAU7E,SAAUA,GAClD,4BACE,kBAAC,IAAD,CAAM1T,KAAK,KAAKgF,KAAM,EAAG0Q,MAAM,2B,0DCtD5B,YACE4oB,EAAkBj3B,GADpB,4GAEiBk3B,MAAM,GAAD,OAAID,IAAeE,OAAM,SAAAC,GAAE,OAAIC,QAAQC,MAAMF,OAFnE,cAELv2B,EAFK,0BAGQA,EAAS/B,QAHjB,UAGLA,EAHK,OAILy4B,EAAWv2B,UAAU0B,UAAUgzB,MAAM,SACrC8B,EAAYx2B,UAAU0B,UAAUgzB,MAAM,SAEvC6B,GAAaC,EAPP,0CAQF94B,KAASI,EAAMkB,EAAUlB,EAAK5G,OAR5B,eAUL6G,EAAS,IAAIqE,WACbq0B,EAAM,IAAI53B,KAAK,CAACf,GAAO,CAAE5G,KAAM4G,EAAK5G,OAC1C6G,EAAO4B,OAAS,WACG1B,OAAOwB,OACpBlB,SAASm4B,MAAb,uBACkB34B,EAAOsE,OADzB,gHAdS,kBAkBJtE,EAAOuE,cAAcm0B,IAlBjB,uCCgDA,O,wGA1CChkB,GACZ,OAAO,IAAIjR,IAAIiR,EAASxU,OAAO4D,SAAS80B,QAAQt3B,O,wCAG1B1B,EAAWi5B,EAAsBC,G,6FACjDC,EAAeC,KAAgBC,WAAW,CAC9CC,YAAaC,IAAcC,KAC3BC,YAAaL,KAAgBM,cAEvB,gBAAkBR,EAElBS,EAAkC35B,EAAlC25B,SAAUC,EAAwB55B,EAAxB45B,WAAY9kB,EAAY9U,EAAZ8U,QACxB+kB,EAAOx8B,KAAKy8B,cAAchlB,G,mBACJilB,KAAUC,IAAV,UACvBf,EADuB,mCACmBgB,aAASN,GAD5B,8BAE1B,CACEO,MAAO,CACLN,aACA9kB,QAAS+kB,GAEXV,a,UAGoB,OAVlBj3B,E,QAUO2K,O,wBACL8rB,EAAQz2B,EAASi4B,OACvBzB,QAAQC,MAAMA,EAAMyB,S,mBACb,G,mCAEkBl4B,EAASi4B,Q,eAA9BE,E,yBACCA,EAAa35B,K,4FAGIV,EAAWi5B,EAAsBC,G,oGAC/B77B,KAAKi9B,kBAAkBt6B,EAAMi5B,EAAiBC,I,UAAlEZ,E,OACAj3B,E,UAAcvI,YAAS,2B,SACzBw/B,E,yCACKiC,GAAoBjC,EAAaj3B,I,iCAEnC,G,4KC5CX,IAKem5B,GALY3gC,UAAO2B,IAAV,MCkCTuP,oBARf,SAAyBhO,GACvB,MAAO,CACL2Q,SAAU4c,IAAyBvtB,GACnC09B,oBAAqBnQ,IAAoCvtB,GACzD29B,oBAAqBpQ,IAAoCvtB,MAI9CgO,EAvBgB,SAAC3S,GAAoC,IAC1DsV,EAAuDtV,EAAvDsV,SAAU+sB,EAA6CriC,EAA7CqiC,oBAAqBC,EAAwBtiC,EAAxBsiC,oBACnCC,EAAgBjtB,EAAW+sB,EAAsBC,EAErD,OACE,gBAAC,WAAD,KACGC,EAAc98B,OAAS,GACtB,gBAAC,GAAD,KACE,gBAACga,GAAA,EAAD,CAAUC,MAAO6iB,EAAe5iB,aAAc,S,m/CCdjD,IAAM1H,GAAYxW,UAAO2B,IAAV,MAEN,SAAApD,GAAK,OAAKA,EAAMs+B,UAAY,IAAM,UAGrCwB,GAASr+B,UAAO2B,IAAV,MAIN6oB,GAASxqB,kBAAO8B,IAAP9B,CAAH,KAGfa,IAAM0iB,MAHS,OAQNwd,GAAa/gC,kBAAO8B,IAAP9B,CAAH,MAEZ,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAEnCE,IAAMuP,OAJa,MAQnBvP,IAAMuS,MARa,MAYnBvS,IAAMC,OAZa,OAiBVkgC,GAAgBhhC,UAAO2B,IAAV,MAcbs/B,GAAmBjhC,kBAAOkhC,IAAPlhC,CAAH,KAIzBa,IAAMC,OAJmB,OAShBqgC,GAAwBnhC,UAAO2B,IAAV,MCkDrBy/B,ID9CqBphC,UAAO2B,IAAV,MC8C/B,YACE,WAAYpD,GAA0B,IAAD,+BACnC,8CAAMA,KAQRsiB,eAAiB,WAAO,IAAD,EAQjB,EAAKtiB,MANP8iC,EAFmB,EAEnBA,iBACAxc,EAHmB,EAGnBA,mBACAhT,EAJmB,EAInBA,cACA4Y,EALmB,EAKnBA,gBACA6W,EANmB,EAMnBA,oBANmB,EAOnB1e,mBAGwB0e,EACxBzvB,EAAc4S,aAAe6c,EAAmBpgB,UAAWogB,EAAmB5iC,KACrE2iC,IACTxc,IAEA4F,KAxBiC,EAwCrC8W,qBAAuB,WAAgB,IAAD,EACY,EAAKhjC,MACrD,OAFoC,EAC5B0jB,sBAD4B,EACLuf,aACe,GA1CX,EA6CrCC,gBAAkB,4BAAAv6B,EAAAmL,OAAA,uDACRR,EAAkB,EAAKtT,MAAvBsT,cADQ,WAAA3K,EAAA,MAEiB,EAAK3I,MAAMoT,cAAc8vB,mBAF1C,cAEVC,EAFU,kBAAAx6B,EAAA,MAGV2K,EAAc6vB,IAHJ,sCA7CmB,EAmDrCC,yBAA2B,WAAO,IACxBlX,EAAoB,EAAKlsB,MAAzBksB,gBACR,EAAKlsB,MAAMqjC,aAAaC,UAAU,CAChCC,QAASC,KACTC,kBAAmB,uCACnBC,UAAWR,GACX1D,WAAY,EAAKx/B,MAAMoT,cAAc8vB,gBACrChX,kBACAyX,qBAAqB,EACrBC,mBAAmB,KA5Dc,EAgErCC,cAAgB,oBAAAl7B,EAAAmL,OAAA,kEAAAnL,EAAA,MACR,EAAK3I,MAAMoT,cAAc0wB,YADjB,UAGT,EAAK9jC,MAAM+jC,aAHF,uBAIZ,EAAK/jC,MAAMqjC,aAAaC,UAAU,CAChCC,QAASS,KACTP,kBAAmB,kCACnBC,UAAWO,KACXN,qBAAqB,IARX,WAAAh7B,EAAA,MAUN,EAAK3I,MAAMoT,cAAc8wB,aAVnB,OAaV,EAAKlkC,MAAM+jC,cACb,EAAKI,eAdO,sCAhEqB,EAkFrCC,oBAAsB,4BAAAz7B,EAAAmL,OAAA,uDACdlM,EAAO,CACX25B,SAAU,EAAKvhC,MAAMuhC,SACrBC,WAAY,EAAKxhC,MAAMwhC,WACvBrV,YAAa,EAAKnsB,MAAMka,MACxBsB,MAAO,EAAKxb,MAAMwb,MAClBkB,QAAS,EAAK1c,MAAM0c,SAEtB,EAAKlY,SAAS,CAAE6/B,sBAAsB,IARlB,WAAA17B,EAAA,MAUkB27B,GAAkBF,oBACtDx8B,EACA,EAAK5H,MAAM6gC,gBACX,EAAK7gC,MAAM8gC,mBAbO,cAUdyD,EAVc,kBAAA57B,EAAA,MAed,EAAK3I,MAAMoT,cAAcoxB,sBAAsBD,IAfjC,OAgBpB,EAAK//B,SAAS,CACZ6/B,sBAAsB,EACtBI,4BAA6BF,IAG3B,EAAKvkC,MAAM+jC,eAAiB,EAAKp/B,MAAM+/B,mBACzC,EAAKP,aAAa,CAAEQ,mBAAmB,IAtBrB,sCAlFe,EA4GrCC,YAAc,WAAO,IAAD,EACuB,EAAK5kC,MAAtC+jC,EADU,EACVA,aAAcc,EADJ,EACIA,eACtB,EAAK7kC,MAAMqjC,aAAaC,UAAU,CAChCC,QACEQ,IAAiB,EAAKp/B,MAAM+/B,kBAAoBI,KAAqBd,KACvEP,kBACEM,IAAiB,EAAKp/B,MAAM+/B,kBACxB,+BACA,kCACNhB,UACEK,GAAgBc,IAAmB,EAAKlgC,MAAM+/B,kBAC1CK,KACAd,KACNN,qBAAqB,EACrBC,kBAAmBG,KA1Hc,EA8HrCiB,YAAc,oBAAAr8B,EAAAmL,OAAA,gDACZ,EAAKtP,SAAS,CAAEigC,4BAA4B,IADhC,sCA9HuB,EAuSrCQ,gCAAkC,WAAO,IAAD,EACiB,EAAKjlC,MAApD2d,EAD8B,EAC9BA,6BAA8BQ,EADA,EACAA,aACtC,OAAIR,EAA+B,EAC1B,kBAAC,GAAD,CAAsBQ,aAAcA,IAEtC,kBAAC+mB,GAAA,EAAD,OA5S4B,EA+SrCC,WAAa,WAAO,IAAD,EACmD,EAAKnlC,MAAjEsV,EADS,EACTA,SAAU6O,EADD,EACCA,aAAc3J,EADf,EACeA,SAChC,OAFiB,EACyBjF,sBAExC,kBAAC,GAAD,KAAS,EAAK0vB,mCAEd,kBAAC,GAAD,KACG3vB,GAAY,kBAAC4vB,GAAA,EAAD,MACZ/gB,GAAgB,kBAAC,GAAD,MAChB3J,GAAY,kBAAC,GAAD,QAvTkB,EA4TrC4qB,WAAa,WAAO,IAAD,EAC4B,EAAKplC,MAA1CsV,EADS,EACTA,SAAU6O,EADD,EACCA,aAAc3J,EADf,EACeA,SAChC,OACE,kBAAC,GAAD,CAAQjD,WAAW,KAAKpX,GAAI2jB,IAAoBuhB,YAAapmB,aAAa,GACvE3J,GAAY5U,YAAS,qBACrByjB,GAAgBzjB,YAAS,8BACzB8Z,GAAY9Z,YAAS,4BAlUS,EAuUrC4kC,qBAAuB,WAAO,IAAD,EAMvB,EAAKtlC,MAJP4S,EAFyB,EAEzBA,yBACA2C,EAHyB,EAGzBA,sBACAiG,EAJyB,EAIzBA,MACAmC,EALyB,EAKzBA,6BAGF,OAAI/K,GAA4B2C,GAAyBoI,EAA+B,EAC/Ejd,YAAS,yDAA0D,CAAE8a,UAEvE9a,YAAS,yCAlVmB,EAqVrCk0B,iBAAmB,WAAO,IAAD,EACsB,EAAK50B,MAA1CsV,EADe,EACfA,SAAU6O,EADK,EACLA,aAAc3J,EADT,EACSA,SAChC,OACE,kBAACgoB,GAAD,CAAY37B,YAAU,yBACnByO,GAAY,EAAKgwB,uBACjBnhB,GAAgBzjB,YAAS,wCACzB8Z,GAAY9Z,YAAS,sCA3VS,EAgWrC6kC,uBAAyB,WAAO,IAAD,EACwC,EAAKvlC,MAAlEwlC,EADqB,EACrBA,YAAahrB,EADQ,EACRA,SAAUirB,EADF,EACEA,YAAaC,EADf,EACeA,cAAeC,EAD9B,EAC8BA,MAC3D,OAAQH,GAAehrB,IAAairB,IAAgBC,IAAkBC,GAlWnC,EAqWrCC,0BAA4B,WAAO,IAAD,EACQ,EAAK5lC,MAArCqkB,EADwB,EACxBA,kBAAmB7J,EADK,EACLA,SAC3B,OACE6J,GACA7J,GACE,kBAACgoB,GAAD,CAAY37B,YAAU,iCAAtB,UACMnG,YAAS,gCADf,OA1W+B,EAiXrCmlC,sBAAwB,WAAO,IAAD,EAQxB,EAAK7lC,MANPuV,EAF0B,EAE1BA,sBACAuwB,EAH0B,EAG1BA,qBACAnoB,EAJ0B,EAI1BA,6BACA6c,EAL0B,EAK1BA,gCACAhc,EAN0B,EAM1BA,oBACAK,EAP0B,EAO1BA,aAGF,OAAItJ,EACGuwB,EAWH,kBAACtD,GAAD,CAAY37B,YAAU,wBACnBnG,YAAS,6CAA8C,CACtDmwB,sBAAuB2J,EACvB1J,oBAAqBnT,KAZvB,kBAAC6kB,GAAD,CAAY37B,YAAU,wBACnBnG,YAAS,gDAAiD,CACzDmwB,sBAAuB2J,EACvB1J,oBAAqBnT,KAe7B,kBAAC6kB,GAAD,CAAY37B,YAAU,wBACnBnG,YAAS,sCAAuC,CAC/CqlC,qBAAsBvnB,EACtBwnB,mBAAoBnnB,MAjZ1B,EAAKla,MAAQ,CACX0/B,sBAAsB,EACtBI,4BAA4B,EAC5BC,mBAAmB,GALc,EADvC,8EA6BoD,IAAD,yDAAJ,GAAI,IAAlCC,yBAAkC,SAC/C1/B,KAAKjF,MAAMqjC,aAAaC,UAAU,CAChCC,QAASuB,KACTrB,kBAAmB,+BACnBC,UAAWqB,KACXkB,8BAA+BtB,EAC/BhB,qBAAqB,EACrBC,mBAAmB,IAErB3+B,KAAKT,SAAS,CAAEkgC,mBAAmB,MAtCvC,+HAoIIl8B,SAAS0R,MAAT,UAAoBxZ,YAAS,4BAA7B,cAA8DuE,KAAKjF,MAAMka,OApI7E,mBAqIUjV,KAAKjF,MAAMkmC,eAAeC,oCArIpC,SAsIwElhC,KAAKjF,MAAjE6lB,EAtIZ,EAsIYA,YAAalI,EAtIzB,EAsIyBA,6BAA8B3K,EAtIvD,EAsIuDA,aAC/C6S,IAAgB7R,IAAYoyB,SAA4C,IAAjCzoB,IACzC3K,EAAae,eAAeC,IAAYC,SACxCjB,EAAampB,uBAzInB,kGA6I8B,IAAD,EAC8Cl3B,KAAKjF,MAApEqkB,EADiB,EACjBA,kBAAmBF,EADF,EACEA,aAAcshB,EADhB,EACgBA,YAAaE,EAD7B,EAC6BA,MAAOnqB,EADpC,EACoCA,MAC7D,OACE,oCACG6I,GACCpf,KAAK+9B,wBACLxnB,EAAQ,KACRvW,KAAKohC,qCACLhiB,GAAqBpf,KAAKohC,qCAC1BliB,IAAiBshB,IAAgBE,GAAS1gC,KAAKqhC,6BAtJzD,mDA2JgC,IAAD,EAYvBrhC,KAAKjF,MAVPsV,EAFyB,EAEzBA,SACAmwB,EAHyB,EAGzBA,YACAE,EAJyB,EAIzBA,MACAthB,EALyB,EAKzBA,kBACAqhB,EANyB,EAMzBA,cACAa,EAPyB,EAOzBA,aACApiB,EARyB,EAQzBA,aACAqiB,EATyB,EASzBA,yBACAhrB,EAVyB,EAUzBA,MAGIirB,EAbqB,EAWzB5gB,cAEqC7R,IAAYC,QACnD,OACE,oCACGkQ,GACAE,GAAqB7I,EApOZ,KAoOiCgrB,IAA6BC,EACpExhC,KAAKyhC,6BACL,IACFjB,IAAgBE,GAAS1gC,KAAKqhC,2BAC9BjiB,IACC/O,GACDowB,GACAa,GACAthC,KAAKohC,qCACLX,IACCa,IACAliB,GACD/O,GACArQ,KAAK0hC,iCAzLf,wDA8LqC,IAAD,EAC0B1hC,KAAKjF,MAAvD4mC,EADwB,EACxBA,uBAAwBpC,EADA,EACAA,sBAChC,OACE,kBAAC/B,GAAD,KACE,kBAAC,IAAD,CACElR,gBAAiB,MACjB7d,OAAQmzB,IAAQC,UAChBzd,eAAgBpkB,KAAK+/B,YACrB+B,YAAa9hC,KAAKN,MAAM8/B,2BACxBzC,QAASthC,YAAS,6BAClBsmC,cACE,kBAAC,IAAD,CACE7lC,KAAK,SACLuS,OAAQkzB,GAA0BpC,EAAwB,YAAc,UACxE1iC,SAAU,EACVgF,QAAS7B,KAAKm/B,oBACd6C,UAAWhiC,KAAKN,MAAM0/B,qBACtBl/B,OAAQF,KAAK+/B,aAEZtkC,YAAS,gCAjNxB,gDA0NI,OACE,kBAAC+hC,GAAD,KACE,kBAAC,IAAD,CACE/uB,OAAQ,YACR5R,SAAU,EACVgF,QAAS7B,KAAK2/B,YACd/9B,YAAU,uBAETnG,YAAS,sBAlOpB,mDAyOI,OACE,kBAAC+hC,GAAD,KACE,kBAAC,IAAD,CAAQ3gC,SAAU,EAAGgF,QAAS7B,KAAKqd,eAAgBzb,YAAU,0BAC1DnG,YAAS,yBA5OpB,oDAmPI,OACE,kBAAC,IAAD,CACEihB,KAAMjhB,YAAS,uBACfgT,OAAQ+rB,IAAK7rB,OAAO8rB,KACpB54B,QAAS7B,KAAKm+B,yBACdthC,SAAU,MAxPlB,0DA8PI,OACE,kBAAC2gC,GAAD,KACE,kBAAC,IAAD,CAAQ/uB,OAAQC,IAAOC,OAAOC,QAAS/R,SAAU,EAAGgF,QAAS7B,KAAKi+B,iBAC/DxiC,YAAS,wBAEZ,kBAAC,GAAD,CAAwB2pB,eAAe,OAnQ/C,kDAwQ+B,IACnB/U,EAAarQ,KAAKjF,MAAlBsV,SAER,OACE,kBAACmtB,GAAD,KACE,kBAAC,IAAD,CACE/uB,OAAQ4B,EAAW,UAAY,YAC/BxT,SAAU,EACVgF,QAAS7B,KAAK4+B,eAEbnjC,YAAS,wBAlRpB,6CAwR0B,IAAD,EAC0BuE,KAAKjF,MAA5C6gC,EADa,EACbA,gBAAiBzZ,EADJ,EACIA,kBACzB,OACE,kBAACqb,GAAD,KACE,kBAAC,IAAD,CACE/uB,OAAO,UACP5R,SAAU,EACVgF,QAAS,kBAAMsgB,EAAkB8f,QAAQrG,IACzCh6B,YAAU,qBAETnG,YAAS,oBAlSpB,+BA0ZY,IAAD,EAYHuE,KAAKjF,MAVPsV,EAFK,EAELA,SACAmwB,EAHK,EAGLA,YACAE,EAJK,EAILA,MACAwB,EALK,EAKLA,6BACAtC,EANK,EAMLA,eACAuC,EAPK,EAOLA,2BACA3oB,EARK,EAQLA,4BACA/B,EATK,EASLA,QACA4hB,EAVK,EAULA,UACA1rB,EAXK,EAWLA,yBAEF,OACE,kBAAC,GAAD,CAAW0rB,UAAWA,GACnBA,GAAa,kBAAC,IAAD,CAAY5hB,QAASA,IAClCzX,KAAKkgC,aACLlgC,KAAKmgC,aACLngC,KAAK2vB,mBAJR,OAMGhiB,IACE3N,KAAK+9B,wBACN/9B,KAAK2gC,6BACLhzB,GAA4B3N,KAAK2gC,4BAClCnnB,EAA8B,GAAKxZ,KAAK4gC,wBACzC,kBAAC,GAAD,KACE,kBAACjD,GAAD,KACGuE,GACC7xB,GACAuvB,GACAuC,IACC3B,GACDxgC,KAAKoiC,mCACLz0B,GAA4B3N,KAAKqiC,6BAClCriC,KAAKsgC,0BAA4BtgC,KAAKsiC,uBACtC30B,GAA4B3N,KAAKuiC,4BAChC/B,GAAeE,IAAU1gC,KAAKwiC,6BAElC,kBAAC,GAAD,OAEF,kBAAC/E,GAAD,WAlcR,GAAiCzN,kBA4flBviB,mBAAeC,aApD9B,SAAyBhO,GACvB,MAAO,CACL2Q,SAAU4c,IAAyBvtB,GACnC+gC,cAAegC,IAA+B/iC,GAC9C4hC,aAAcmB,IAA8B/iC,GAC5CuV,MAAOgY,IAA+BvtB,GACtCgZ,6BAA8B2C,YAAgC3b,GAC9D8Z,4BAA6B0B,aAA+Bxb,GAC5D61B,gCAAiC/H,YAAiD9tB,GAClF8gC,YAAaiC,IAA6B/iC,GAC1CghC,MAAOgC,aAAiBhjC,GACxB48B,SAAUrP,IAA4BvtB,GACtC68B,WAAYtP,IAA8BvtB,GAC1C6W,MAAO0W,IAAyBvtB,GAChC+X,QAASgrB,IAAyB/iC,GAClC25B,UAAWoJ,IAAiC/iC,GAC5CyiC,2BAA4BM,IAA4C/iC,GACxEk8B,gBAAiB6G,IAAoC/iC,GACrDm8B,iBAAkB4G,IAAqC/iC,GACvDiiC,uBAAwB1U,IAAiCvtB,GACzDkgC,eAAgB+C,aAAajjC,GAC7BwiC,6BAA8BO,IAA8C/iC,GAC5E6/B,sBAAuBtS,IAAwCvtB,GAC/Do/B,aAAc2D,IAA8B/iC,GAC5C4Q,sBAAuBmyB,IAAuC/iC,GAC9DmhC,qBAAsBA,YAAqBnhC,GAC3C6Z,oBAAqB4B,aAAuBzb,GAC5Cwf,aAAc+N,IAA6BvtB,GAC3C0f,kBAAmBqjB,IAAmC/iC,GACtDwZ,aAAcupB,IAAsC/iC,GACpD6hC,yBAA0BqB,YAAyBljC,GACnDiO,yBAA0B80B,IAA0C/iC,GACpE+e,sBAAuBgkB,IAA0C/iC,GACjE6gC,YAAaA,aAAY7gC,GACzB6V,SAAU0X,IAAyBvtB,GACnCs+B,aAAc/Q,IAAiCvtB,GAC/CkhB,YAAaoB,YAAetiB,GAC5Bka,aAAcgC,aAAiBlc,GAC/Bo+B,mBAAoB+E,YAAmCnjC,OAI3D,SAA4BoO,GAC1B,MAAO,CACLK,cAAeH,YAAmBG,EAAeL,GACjDqU,kBAAmBnU,YAAmBmU,GAAmBrU,GACzDswB,aAAcpwB,YAAmBowB,GAActwB,GAC/CmzB,eAAgBjzB,YAAmBizB,GAAgBnzB,GACnDC,aAAcC,YAAmBC,EAAoBH,MAI3BJ,CAA6CkwB,K,ksGC9lBpE,IAAMkF,GAAWtmC,UAAO2B,IAAIzB,OAAM,SAAC3B,GAAD,MAA2B,CAClE,cAAeA,EAAM26B,cADCl5B,CAAH,KAMRo5B,IAAQmN,UAEC,SAAAhoC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOuB,iBAAkB,MAC/EW,aAAW,WACXkoB,gBACA,SAAClrB,GAAD,OACAA,EAAMioC,yBACNxlC,cADA,KAEIH,IAAMmU,OAFV,UAeSyxB,GAAwBzmC,kBAAO0mC,KAAP1mC,CAAH,KAIrBo5B,IAAQ/O,IACVA,IAAIC,eAEX/oB,aAAW,oBACX,SAAAhD,GAAK,OAAI6kB,aAAe7kB,EAAM8kB,WAAWzZ,QACzC/I,IAAM0iB,MATwB,MAY9B1iB,IAAMmU,OAZwB,OAiB9B,SAAAzW,GAAK,OACLA,EAAMioC,yBACNxlC,cADA,KAEuBqpB,IAAIC,eAAiBD,IAAIE,eAKhD,SAAAhsB,GAAK,OACJA,EAAMioC,yBACPxlC,cADA,KAEWqpB,IAAIC,eACXzpB,IAAM8lC,OAHV,UAeSC,GAAwB5mC,kBAAOmjB,KAAPnjB,CAAH,KAGxBqqB,IAAIC,eACSD,IAAIC,gBAEvB,SAAA/rB,GAAK,OAAI6kB,aAAe7kB,EAAM8kB,WAAWzZ,QACzCrI,aAAW,gBACX,SAAAhD,GAAK,OACJA,EAAMioC,yBACPxlC,cADA,QAKAH,IAAMmU,OAdwB,MAmB5B6xB,MASOC,GAAgB9mC,UAAO2B,IAAV,MAabolC,GAAmB/mC,UAAO6P,QAAV,MAClB,SAAAtR,GAAK,OAAKA,EAAMgb,mBAAqBhb,EAAMyoC,gBAAjC,UAAsD,IAAtD,eAAkE,IAAlE,SACT,SAAAzoC,GAAK,OACbA,EAAMgb,mBAAqBhb,EAAMyoC,gBAAjC,UAAsDzoC,EAAM0oC,cAAgB,EAA5E,MAAoF,aAC3E,SAAA1oC,GACT,OAAIA,EAAMgb,mBAAqBhb,EAAMyoC,gBAC5B,IAEFzoC,EAAMs+B,UAAY,cAAgB,mBAUtBqK,MACV,SAAA3oC,GAAK,OAAKA,EAAMgb,mBAAqBhb,EAAMyoC,gBAAjC,UAAsD,IAAtD,eAAkE,IAAlE,SAGA,SAAAzoC,GAAK,OACtBA,EAAMioC,wBAA0BW,KAAc,GAAKC,QAC5C,SAAA7oC,GAAK,OAAKA,EAAMgb,mBAAqBhb,EAAMyoC,gBAAjC,UAAsD,IAAtD,eAAkE,IAAlE,QAGnBnmC,IAAM0iB,MA3BmB,OA+BzB,SAAAhlB,GAAK,OACLA,EAAMs+B,UACF77B,cADJ,KAEQH,IAAM0iB,MAFd,OAMIviB,cANJ,KAOQH,IAAM0iB,MAPd,UAaS/M,GAAYxW,UAAO2B,IAAV,KAMlB6Y,gBAEkB,SAAAjc,GAAK,OAAIA,EAAMa,MAAMC,OAAOgoC,iBAE9CxmC,IAAM0iB,MAVY,OClJT+jB,GAAb,YAQE,WAAY/oC,GAA4C,IAAD,+BACrD,8CAAMA,KALRgpC,aAIuD,IAFvDC,qBAEuD,IAkBvDC,iBAAmB,SAACC,GAClB,OACE,EAAKnpC,MAAMgb,oBACVouB,KAAejlC,KAAKglC,IAAarT,KAAwB3xB,KAAKglC,IAExD,kBAEFA,GAzB8C,EA4BvDE,QAAU,SAACC,EAAWC,GAAsB,IAAD,EACT,EAAKvpC,MAA7B8L,EADiC,EACjCA,SAAU09B,EADuB,EACvBA,UAClB,IAAID,EAkBJ,OAfIC,EAAUjgC,QAAQ,EAAKy/B,SAAWQ,EAAUjgC,QAAQuC,EAASq9B,UAC/DM,KAASC,OACPJ,EAxD2C,GA0D3C,CAAEz4B,QAAS,EAAGvQ,EAAG,KACjB,CAAEuQ,QAAS,EAAGvQ,EAAG,EAAGqpC,MA3DuB,GA2DqBC,WAAY,cAG9EH,KAASC,OACPJ,EA/D2C,GAiE3C,CAAEz4B,QAAS,EAAGvQ,GAAI,KAClB,CAAEuQ,QAAS,EAAGvQ,EAAG,EAAGqpC,MAlEuB,GAkEqBC,WAAY,cAGzE,MAhD8C,EAmDvDC,OAAS,SAACP,GAAe,IAAD,EACU,EAAKtpC,MAA7B8L,EADc,EACdA,SAAU09B,EADI,EACJA,UACdA,EAAUjgC,QAAQ,EAAKy/B,SAAWQ,EAAUjgC,QAAQuC,EAASq9B,UAC/DM,KAASC,OACPJ,EA5E2C,GA8E3C,CAAEz4B,QAAS,EAAGvQ,EAAG,GACjB,CAAEuQ,QAAS,EAAGvQ,GAAI,IAAKspC,WAAY,cAGrCH,KAASC,OACPJ,EAnF2C,GAqF3C,CAAEz4B,QAAS,EAAGvQ,EAAG,GACjB,CAAEuQ,QAAS,EAAGvQ,EAAG,IAAKspC,WAAY,eA/DtC,EAAKZ,QAAU,GACf,EAAKC,gBAAkB,GAH8B,EARzD,mFAcuB,IAAD,OACVn9B,EAAa7G,KAAKjF,MAAlB8L,SACR7G,KAAK+jC,QAAUl9B,EAASq9B,SACxBlkC,KAAKgkC,gBAAkBa,KAAQC,QAAO,SAAAC,GACpC,EAAKhB,QAAUgB,EAAeb,cAlBpC,6CAuBIlkC,KAAKgkC,oBAvBT,+BA8EY,IAAD,EAC6DhkC,KAAKjF,MAAjEqoB,EADD,EACCA,SAAUvc,EADX,EACWA,SAAUm8B,EADrB,EACqBA,wBAAyBnjB,EAD9C,EAC8CA,WACrD,OACE,kBAACmlB,GAAA,EAAD,CACEvG,UAAW2E,GACXJ,wBAAyBA,EACzBnjB,WAAYA,GAEZ,kBAAColB,GAAA,EAAD,CACE5iC,IAAKrC,KAAKikC,iBAAiBp9B,EAASq9B,UACpC14B,IAAE,EACF05B,QAAQ,EACRd,QAASpkC,KAAKokC,QACdQ,OAAQ5kC,KAAK4kC,OACbO,QAvGwC,KAyGvC/hB,QA9FX,GAAmD2C,aA2GpCrY,oBANf,SAAyBhO,GACvB,MAAO,CACL6kC,UAAWa,aAAS1lC,MAITgO,CAAyBo2B,I,oBChI3BuB,GAAyB,SAAChvB,EAAoBivB,GAArB,OAAuD,SAAAx3B,GAC3FA,EAAS,CACP5R,KAAMqpC,KAAYC,kDAClBpiC,QAAS,CAAEiT,aAAYivB,gBAIdG,GAA0B,SAACpvB,EAAoBivB,EAAkBI,GAAvC,OAA6E,SAAA53B,GAElH,OAAQ43B,GACN,KAAKH,KAAYI,mDACf73B,EAAS,CACP5R,KAAMqpC,KAAYI,mDAClBviC,QAAS,CAAEiT,aAAYivB,cAEzB,MACF,KAAKC,KAAYK,2BACf93B,EAAS,CACP5R,KAAMqpC,KAAYK,2BAClBxiC,QAAS,CAAEiT,aAAYivB,cAEzB,MACF,QACEx3B,EAAS,CACP5R,KAAMqpC,KAAYI,mDAClBviC,QAAS,CAAEiT,aAAYivB,iBCRlBO,GAAb,8MAKEC,WAAa,SAAC5qC,EAAY6qC,EAAgBC,GACpCA,EACF,EAAKjrC,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQkO,uBAAuBnqC,EAAI6qC,GAEpE,EAAKhrC,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQsO,wBACjBvqC,EACA6qC,EACA,sDAGF,EAAKhrC,MAAMkrC,aACb,EAAKlrC,MAAM2lB,iBAAmB,EAAK3lB,MAAM2lB,gBAAgBwlB,mBAAmBhrC,IAjBlF,0EAqBY,IAAD,EAC8B8E,KAAKjF,MADnC,IACCorC,eADD,MACW,GADX,EACexe,EADf,EACeA,WACtB,OACE,gBAAC,IAAD,CACElN,MAAO0rB,EACPH,YAAahmC,KAAKjF,MAAMqrC,eACxBN,WAAY9lC,KAAK8lC,WACjB5qC,GAAI8E,KAAKjF,MAAMG,GACfmrC,aAAc1e,EACd9qB,SAAU,QA9BlB,GAAoC0F,aAAvBsjC,GACJrjC,aAAe,CACpB4jC,gBAAgB,EAChBD,QAAS,IA8CEz4B,oBAbf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,QAI5C,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6Cm4B,ICnD/CU,GAAb,8MACET,WAAa,SAAC5qC,EAAY6qC,GACxB,EAAKhrC,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQsO,wBAAwBvqC,EAAI6qC,EAAQ,8BACrD,EAAKhrC,MAAMkrC,aACb,EAAKlrC,MAAM2lB,iBAAmB,EAAK3lB,MAAM2lB,gBAAgBwlB,mBAAmBhrC,IALlF,0EASY,IAAD,EACyB8E,KAAKjF,MAA7BorC,EADD,EACCA,QAASxe,EADV,EACUA,WACjB,OACE,gBAAC,IAAD,CACElN,MAAO0rB,GAAW,GAClBL,WAAY9lC,KAAK8lC,WACjB5qC,GAAI8E,KAAKjF,MAAMG,GACfsrC,eAAa,EACbH,aAAc1e,EACd9qB,SAAU,EACVmpC,YAAY,QAnBpB,GAAuCzjC,aAsCxBmL,oBAbf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,QAI5C,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6C64B,I,oVCrDrD,IAAME,GAAoBjqC,UAAO6P,QAAQ3P,MAAM,CACpD,YAAa,sBADkBF,CAAH,MAcjBkqC,GAA2BlqC,UAAO2B,IAAIzB,OAAM,SAAA3B,GAAK,MAAK,CACjE,YAAa,sBADyByB,CAAH,MASxB,SAAAzB,GAAK,OAAKA,EAAM4rC,QAAU,QAAU,UAC3B,SAAA5rC,GAAK,OACvBY,YACEZ,EAAM6kB,gBAAkB7kB,EAAM6kB,eAAevN,MAAQtX,EAAM6kB,eAAevN,MAAQ,OAClF,O,oBC3BOu0B,GAA4B,SAACvwB,EAAoBivB,EAAkBuB,GAAvC,OAA2E,SAAA/4B,GAClHA,EAAS,CACP5R,KAAMqpC,KAAYuB,sCAClB1jC,QAAS,CAAEiT,aAAYivB,WAAUuB,iB,oWCH9B,IAAME,GAAcvqC,UAAO2B,IAAV,KAQpBd,IAAMC,OARc,OAeTypC,MCTAC,GAFgB,SAACjsC,GAAD,OAAiC,gBAACgsC,GAAD,KAAchsC,EAAMqoB,WCNrE6jB,GADH,SAAClsC,GAAD,OAAgBA,EAAMqoB,U,i0BCc3B,IAAM8jB,GAAe1qC,UAAO0U,OAAOxU,OAAM,SAAC3B,GAAD,MAA+B,CAC7EyD,KAAMzD,EAAMyD,KACZ,gBAAiBzD,EAAMosC,YACvB,aAAcpsC,EAAM0D,UACpB,eAAgB1D,EAAMqsC,YACtBvqC,SAAU9B,EAAM8B,YALUL,CAAH,KAOrBkC,KASkB,SAAA3D,GAAK,OACvBA,EAAMssC,SACFtsC,EAAMa,MAAMC,OAAOC,UACnBH,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAS7B,SAAApC,GAAK,OACzBA,EAAMssC,SACFtsC,EAAMa,MAAMC,OAAO6U,gBACnB/U,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAM3B,SAAApC,GAAK,OAC3BA,EAAMssC,SACFtsC,EAAMa,MAAMC,OAAO6U,gBACnB/U,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAIjDE,IAAMC,OA5Ce,OCgBVgqC,GAjBO,SAACvsC,GAAwB,IACrC8G,EAAkE9G,EAAlE8G,QAASwlC,EAAyDtsC,EAAzDssC,SAAUE,EAA+CxsC,EAA/CwsC,SAAU9oC,EAAqC1D,EAArC0D,UAAW5B,EAA0B9B,EAA1B8B,SAAUsqC,EAAgBpsC,EAAhBosC,YAC1D,OACE,gBAAC,GAAD,KACE,gBAACD,GAAD,CACE1oC,KAAM+oC,EACN9oC,UAAWA,EACX2oC,YAAaC,EACbxlC,QAASA,EACTwlC,SAAUA,EACVxqC,SAAUA,EACVsqC,YAAaA,M,qVCfrB,IAAMK,GACI,GADJA,GAEI,EAyBKC,GArBsBjrC,UAAO2B,IAAV,MAGtB,SAAApD,GAAK,OAAKA,EAAMsQ,QAAUm8B,IAAiE,GAAxCzsC,EAAMsf,QAAUmtB,OAMjE,SAAAzsC,GAAK,OAAIA,EAAMsQ,QAAUm8B,MAIf,SAAAzsC,GAAK,OACzBA,EAAMa,MAAMC,OAAOd,EAAMsX,OACrBtX,EAAMa,MAAMC,OAAOd,EAAMsX,OACzBtX,EAAMa,MAAMC,OAAO6rC,kBACZ,SAAA3sC,GAAK,OAAKA,EAAM6Q,QAAU7Q,EAAM6Q,QAAU,O,q8GCrBlD,IAAM+7B,GAAanrC,kBAAO8B,IAAP9B,CAAH,MAKZ,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YACnCE,IAAMC,OANa,OAWVsqC,GAAyBprC,UAAO2B,IAAV,KAI/Bd,IAAMC,OAJyB,OAUtBuqC,GAAiBrrC,UAAO2B,IAAV,MAQd2pC,GAAUtrC,UAAO2B,IAAV,MAaE,SAAApD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO6rC,eAAgB,MAE7ExqC,IAEAy7B,KAEO,SAAA59B,GAAK,OAAIA,EAAMa,MAAMC,OAAO6U,mBAeX,SAAA3V,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO6rC,eAAgB,MAEnFrqC,IAAMC,OApCU,OAyCPyqC,GAAcvrC,UAAOiU,KAAV,MAQXu3B,GAAcxrC,UAAOoU,GAAV,MAOXq3B,GAAmBzrC,UAAOsU,GAAGpU,OAAM,SAAC3B,GAAD,MAAmC,CACjF,cAAeA,EAAM26B,cADSl5B,CAAH,KAMzBa,IAAMC,OANmB,OAkBhB4qC,GAAiB1rC,UAAOsU,GAAGpU,OAAM,SAAC3B,GAAD,MAAiC,CAC7E8B,SAAU9B,EAAM8B,UAAY,EAC5B,aAAc9B,EAAM0D,UACpBD,KAAMzD,EAAMyD,QAHgBhC,CAAH,KAWrB6lB,IAQkB,SAAAtnB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAElEklB,GAAmBA,GAK3BolB,GAIEA,GAIFG,GAGAvqC,IAAMC,OArCiB,KA0CrBE,cA1CqB,KA2CnBiqC,GAGAG,GAIEC,GAOEC,MCtICK,GAAb,YACE,WAAYptC,GAA8B,IAAD,+BACvC,8CAAMA,KAOR6rC,0BAA4B,SAACwB,EAAaC,GAAqB,IACrDntC,EAAO,EAAKH,MAAZG,GACAirC,EAAY,EAAKzmC,MAAjBymC,QACRA,EAAQmC,SAAQ,SAAA5kC,GACV0kC,EAAOltC,KAAOwI,EAAExI,KAClBktC,EAAOG,cAAe,EACtBH,EAAOC,OAASA,MAGpB,EAAKttC,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQyP,0BAA0B1rC,EAAIktC,EAAOltC,GAAIktC,EAAOC,QACrE,EAAK9oC,SAAS,CAAE4mC,YACZ,EAAKprC,MAAMkrC,aACb,EAAKlrC,MAAM2lB,iBAAmB,EAAK3lB,MAAM2lB,gBAAgBwlB,mBAAmBhrC,IAnB9E,EAAKwE,MAAQ,CACXymC,QAAS,EAAKprC,MAAMorC,SAAW,GAC/Bxe,WAAY,EAAK5sB,MAAM4sB,YAJc,EAD3C,kFA0BqBiI,GACb5vB,KAAKjF,MAAMG,KAAO00B,EAAU10B,IAAM8E,KAAKjF,MAAMorC,UAAYvW,EAAUuW,SACrEnmC,KAAKT,SAAS,CACZ4mC,QAASnmC,KAAKjF,MAAMorC,SAAW,GAC/Bxe,WAAY3nB,KAAKjF,MAAM4sB,eA9B/B,+BAmCY,IAAD,SACyB3nB,KAAKN,MAA7BymC,EADD,EACCA,QAASxe,EADV,EACUA,WACX6gB,EAAW/sC,YAAS,iCAAkC,QACtDgtC,EAAYhtC,YAAS,kCAAmC,SAC9D,OACE,gBAACusC,GAAD,KACE,gBAACC,GAAD,CAAkBvS,YAAY,GAC5B,gBAACmS,GAAD,KACE,gBAACC,GAAD,KACE,gBAACC,GAAD,CAAa9yB,MAAOuzB,GAAWA,IAEjC,gBAACV,GAAD,KACE,gBAACC,GAAD,CAAa9yB,MAAOwzB,GAAYA,MAIrCtC,EAAQ/vB,KAAI,SAACgyB,EAAan0B,GAAd,OACX,gBAACi0B,GAAD,CACE7lC,IAAK4R,EACLzV,KAAK,aACLC,UAAS,gBAAWwV,GACpB2Y,kBAAA,gBAA0B3Y,IAE1B,gBAAC2zB,GAAD,KACE,gBAACC,GAAD,KACE,gBAACC,GAAD,KACE,gBAACC,GAAD,CAAa9yB,MAAOuzB,GAAWA,IAEjC,gBAACV,GAAD,KACE,gBAACC,GAAD,CAAa9yB,MAAOwzB,GAAYA,MAItC,gBAAC,GAAD,KACE,gBAAC,GAAD,CACE5mC,QACE8lB,OAAapd,EAAY,kBAAM,EAAKq8B,0BAA0BwB,GAAQ,IAExEb,SAAS,QACT9oC,UAAU,OACV4oC,SAAUe,EAAOC,QAAUD,EAAOG,aAClC1rC,SAAU,EACVsqC,YAAaxf,IAEf,gBAAC,GAAD,CACE9lB,QACE8lB,OAAapd,EAAY,kBAAM,EAAKq8B,0BAA0BwB,GAAQ,IAExEb,SAAS,QACT9oC,UAAU,QACV4oC,UAAWe,EAAOC,QAAUD,EAAOG,aACnC1rC,SAAU,EACVsqC,YAAaxf,KAGjB,gBAACggB,GAAD,CAAYzsC,GAAE,gBAAW+Y,GAAS3B,WAAW,KAC1C81B,EAAO1rB,MAEV,gBAAC,GAAD,CAAuB9Q,QAAS,GAAKyG,MAAM,uBA7FvD,GAAqC9P,aAkHtBmL,oBAbf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,QAI5C,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6Cy6B,I,oBCpJ/CO,GAA+B,SAC1CryB,EACAsyB,GAF0C,OAG1B,SAAA76B,GAChBA,EAAS,CACP5R,KAAMqpC,KAAYqD,iCAClBxlC,QAAS,CAAEiT,aAAYsyB,oB,gtBCJpB,IAAME,GAAoBrsC,UAAO2B,IAAV,MACR,SAAApD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAW/C,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,MAK7EuV,IAIAhU,IAAMC,OArBkB,MAyB1BD,IAAMC,OAzBoB,OCoBjBwrC,GAAb,YACE,WAAY/tC,GAA2B,IAAD,+BACpC,8CAAMA,KACD2E,MAAQ,CACXymC,QAAS,EAAKprC,MAAMorC,SAAW,IAHG,EADxC,+EAQkBpnC,GAAa,IAAD,EACDiB,KAAKjF,MAAtBorC,eADkB,MACR,GADQ,EAE1BA,EAAQwC,aAAe5pC,EAAMI,OAAOC,MACpCY,KAAKT,SAAS,CACZ4mC,YAEEnmC,KAAKjF,MAAMkrC,cACbjmC,KAAKjF,MAAMo8B,SACTn3B,KAAKjF,MAAMo8B,QAAQuR,6BAA6B1oC,KAAKjF,MAAMG,GAAIirC,EAAQwC,cACzE3oC,KAAKjF,MAAM2lB,iBAAmB1gB,KAAKjF,MAAM2lB,gBAAgBwlB,mBAAmBlmC,KAAKjF,MAAMG,OAjB7F,2CAqBwB,IACZirC,EAAYnmC,KAAKN,MAAjBymC,QACRnmC,KAAKjF,MAAMo8B,SACTn3B,KAAKjF,MAAMo8B,QAAQuR,6BAA6BvC,EAAQjrC,GAAIirC,EAAQwC,gBAxB1E,+BA2BY,IAAD,SACsC3oC,KAAKjF,MAD3C,IACC4sB,kBADD,aACqBwe,eADrB,MAC+B,GAD/B,EAEP,OACE,gBAAC0C,GAAD,KACE,gBAACE,GAAA,EAAD,CACEnsC,YAAW,UAAKnB,YAAS,2BACzButC,SAAU,aACV9oC,OAAQ,kBAAM,EAAK+oC,sBACnBjqC,SAAU,SAAC4F,GAAD,OAAY,EAAKskC,gBAAgBtkC,IAC3C3E,aAAckmC,EAAQwC,aACtBx3B,SAAUwW,EACV9qB,SAAU,SAtCpB,GAAkC0F,iBA0DnBmL,oBAbf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,QAI5C,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6Co7B,I,8BChF/CK,GAA4B,SAAChD,EAAc9vB,GAAf,OAAmD,SAAAvI,GAC1FA,EAAS,CACP5R,KAAMqpC,KAAY6D,sCAClBhmC,QAAS,CAAE+iC,UAAS9vB,kBCkBXgzB,GAAb,sLAEI5uB,EACAvf,EACAouC,EACArD,EACAsD,GAEC,IADDC,EACA,wDACAF,EAAOH,0BAA0B1uB,EAAOvf,GACpC+qC,IAAgBuD,GAClBD,GAAkBA,EAAerD,mBAAmBhrC,KAX1D,oCAeiB,IAAD,EACqD8E,KAAKjF,MAD1D,IACJorC,eADI,MACM,GADN,MACUthC,gBADV,MACqB,GADrB,EACyB4kC,EADzB,EACyBA,wBACrC,OAAK5kC,EAASrE,OAMPqE,EALD4kC,EACKtD,EAEFuD,aAAqBvD,KArBlC,+BA2BI,IAAMwD,EAAe,CAAC,CAAEzuC,GAAI8E,KAAKjF,MAAMG,GAAIuf,MAAOza,KAAK4pC,gBACvD,OACE,gBAAC,IAAD,CACE3D,YAAajmC,KAAKjF,MAAMkrC,YACxB4D,SAAU7pC,KAAK6pC,SACfnpB,gBAAiB1gB,KAAKjF,MAAM2lB,gBAC5ByW,QAASn3B,KAAKjF,MAAMo8B,QACpBj8B,GAAI8E,KAAKjF,MAAMG,GACf4uC,gBAAgB,EAChBH,aAAcA,EACdhiB,WAAY3nB,KAAKjF,MAAM4sB,iBArC/B,GAAiCplB,aA0DlBmL,oBAff,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,IACxC2J,SAAUklC,aAAgBrqC,EAAOmtB,EAAS3xB,IAC1CuuC,wBAAyBO,YAA0BtqC,OAIvD,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6C27B,I,oBC/E/CY,GAA0B,SAAC1zB,EAAe2zB,EAAqB7zB,GAArC,OAAyE,SAAAvI,GAC9GA,EAAS,CACP5R,KAAMqpC,KAAY4E,mCAClB/mC,QAAS,CAAEmT,QAAO2zB,aAAY7zB,kBCN5B+zB,G,WAKJ,aAAe,qBACbA,EAAoBC,UAAY,GAChCD,EAAoBE,gBAAkB,cACtCF,EAAoBG,YAAc,8BAClCH,EAAoBI,sBAAwB,CAE1CC,KAAM,0BAENlX,MAAO,2BAEPmX,MAAO,2BAEPC,OAAQ,4BAERC,OAAQ,4BAERC,QAAS,qC,4DAISC,GACpB,GAAKA,EAAL,CAGI9qC,KAAKw2B,QAAQ4T,EAAoBC,YACnCrqC,KAAK+qC,wBAGP,IAAMC,EAAc,IAAIC,GAAoBH,GAG5C,OADAV,EAAoBC,UAAUS,GAAaE,EACpCA,K,sCAKcE,GAC4C,qBAAtDd,EAAoBC,UAAUa,EAASJ,mBACzCV,EAAoBC,UAAUa,EAASJ,WAG5C9qC,KAAKw2B,QAAQ4T,EAAoBC,YACnCrqC,KAAKmrC,4B,8CAKPloC,OAAO8wB,iBAAiB,UAAW/zB,KAAKorC,sB,gDAIxCnoC,OAAOgxB,oBAAoB,UAAWj0B,KAAKorC,sB,yCAGlBrsC,GACzB,IAAI4D,EAAO,KAEX,IACE,GAAI5D,EAAM48B,SAAWyO,EAAoBG,YAAa,CAGpD,IAFA5nC,EAAOw5B,KAAKkP,MAAMtsC,EAAM4D,OAEf2oC,WAAalB,EAAoBE,gBACxC,OAEF,IAAMiB,EAAkB5oC,EAAKzG,KACvB4uC,EACJS,IAAoBnB,EAAoBI,sBAAsBK,QAAUloC,EAAK6oC,QAAQC,QAAQC,MAAQ,GACjGC,EAAsBvB,EAAoBC,UAAUS,GAC1D,GAAmC,qBAAxBa,GAA+D,OAAxBA,EAChD,OAEEJ,IAAoBnB,EAAoBI,sBAAsBE,QACtB,kBAA/B/nC,EAAK6oC,QAAQI,QAAQr1B,OAAsB5T,EAAK6oC,QAAQI,QAAQr1B,MAAQ,EACjFo1B,EAAoBp1B,MAAQ5T,EAAK6oC,QAAQI,QAAQr1B,MACJ,kBAA7B5T,EAAK6oC,QAAQd,MAAMn0B,OAAsB5T,EAAK6oC,QAAQd,MAAMn0B,MAAQ,IACpFo1B,EAAoBp1B,MAAQ5T,EAAK6oC,QAAQd,MAAMn0B,QAG/Cg1B,IAAoBnB,EAAoBI,sBAAsBI,SAChEe,EAAoBzB,YAAa,IAGrC,MAAO2B,GACP,OAAO,K,8BAIKC,GACd,IAAK,IAAMzpC,KAAOypC,EAChB,GAAI/jC,OAAOK,UAAU2jC,eAAe9nC,KAAK6nC,EAAKzpC,GAC5C,OAAO,EAIX,OAAO,M,KAnGL+nC,GACUC,e,EADVD,GAEWE,qB,EAFXF,GAGWG,iB,EAHXH,GAIWI,2B,MAmGXS,GAKJ,WAAYH,GAAoB,0BAJhCA,eAI+B,OAH/Bv0B,WAG+B,OAF/B2zB,gBAE+B,EAC7BlqC,KAAK8qC,UAAYA,EACjB9qC,KAAKuW,MAAQ,EACbvW,KAAKkqC,YAAa,GAIP,OAAIE,G,wsBChHZ,IAAM4B,GAAwBxvC,UAAO2B,IAAV,MAMrB8tC,GAAkBzvC,UAAO2B,IAAV,MAMZ,SAAApD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAEzD,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAOtD+uC,GAAgB1vC,UAAO2B,IAAV,MAGJ,SAAApD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAM/D,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OCNtDgvC,GAAb,YASE,WAAYpxC,GAAuB,IAAD,+BAChC,8CAAMA,KATR8sB,cAQkC,IAPlCqjB,cAOkC,IANlCkB,sBAMkC,IALlCC,gBAKkC,IAJlCC,eAIkC,IAHlC/1B,WAGkC,IAFlCy0B,iBAEkC,IAsBlCuB,wBAA0B,WAAO,IAAD,EACL,EAAKxxC,MAAtBorC,eADsB,MACZ,GADY,EAE1B,EAAK+E,WACP/E,EAAQ5vB,MAAQ,EAAK20B,SAAS30B,MAC9B4vB,EAAQ+D,WAAa,EAAKgB,SAAShB,WACnC,EAAKnvC,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQ8S,wBACjB9D,EAAQ5vB,MACR4vB,EAAQ+D,WACR,EAAKnvC,MAAMsb,aAGb,EAAKtb,MAAMkrC,aACb,EAAKlrC,MAAM2lB,iBAAmB,EAAK3lB,MAAM2lB,gBAAgBwlB,mBAAmB,EAAKnrC,MAAMG,KAjCzF,EAAK2sB,SAAW,KAChB,EAAKqjB,SAAW,KAChB,EAAKkB,iBAAmB7pC,cACxB,EAAK8pC,WAAatxC,EAAM+vC,WAAa,GACrC,EAAKwB,UAAYvxC,EAAMuxC,UACvB,EAAK/1B,MAAQ,EAAKi2B,sBAClB,EAAKxB,YAAcZ,GARa,EATpC,8EAqBI,MAAO,CAAEntB,OAAQjd,KAAKssC,aArB1B,qCAyBQtsC,KAAKkrC,WACPlrC,KAAKkrC,SAAS30B,MAAQ,EACtBvW,KAAKkrC,SAAShB,YAAa,KA3BjC,wCAiDQlqC,KAAKqsC,aACPrsC,KAAKkrC,SAAWlrC,KAAKgrC,YAAYyB,eAAezsC,KAAKqsC,YACrDrsC,KAAKjF,MAAMorC,UAAYnmC,KAAKjF,MAAMorC,QAAQ+D,WAAalqC,KAAKkrC,SAAShB,eAnD3E,4CAwDI,OAAIlqC,KAAKkrC,SACAlrC,KAAKkrC,SAAS30B,MAGhB,IA5DX,0CAgEIvW,KAAK0sC,kBACD1sC,KAAKosC,iBAAiBjpB,SACxBnjB,KAAKosC,iBAAiBjpB,QAAQwpB,qBAAqB,UAAU,GAAG3mC,aAAa,WAAY,GAE3F/C,OAAO8wB,iBAAiB,UAAW/zB,KAAKusC,2BApE5C,4CAwESvsC,KAAKjF,MAAM6sB,qBAAuB5nB,KAAKjF,MAAM4sB,YAChD3nB,KAAK4sC,iBAzEX,6CA8EI5sC,KAAKgrC,YAAY6B,gBAAgB7sC,KAAKkrC,UACtCjoC,OAAOgxB,oBAAoB,UAAWj0B,KAAKusC,2BA/E/C,+BAmFI,OAAQvsC,KAAKjF,MAAM6sB,qBAAwB5nB,KAAKjF,MAAM4sB,WAMpD,gBAACskB,GAAD,KACE,gBAACC,GAAD,KACE,gBAAC,KAAD,CAAMvvC,KAAK,UAEb,gBAAC2B,GAAA,EAAD,CAAMgU,WAAW,KAAK7W,YAAS,0BATjC,gBAACuwC,GAAD,CACE3qC,IAAKrB,KAAKosC,iBACVpvB,wBAAyBhd,KAAK8sC,qBAtFtC,GAA8BvqC,aAmHfmL,oBAhBf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLyf,UAAWS,aAAartC,EAAOmtB,EAAS3xB,IACxC4vC,UAAWkC,aAAattC,EAAOmtB,EAAS3xB,IACxCirC,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,IACxCmb,WAAYwW,EAAS3xB,OAIzB,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6Cy+B,I,oBC3I/Cc,GAAuB,SAAC52B,EAAoB1T,GAArB,OAAgD,SAAAmL,GAClFA,EAAS,CACP5R,KAAMqpC,KAAY2H,yBAClB9pC,QAAS,CAAEiT,aAAY1T,Y,kxGCDpB,IAAMwqC,GAAuB3wC,UAAO2B,IAAV,KAC7BkT,KACO,SAAAtW,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAQjCkU,IAIAA,IAGAA,IAGAA,IAGAA,IAIAA,KAQuB,SAAAtW,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,YACnDuV,IACAhU,IAAMC,OArCqB,MAgDL,SAACvC,GAAD,OAAgBA,EAAMa,MAAMC,OAAOC,aAuEvDuB,IAAM8lC,OAvHmB,MAyI3B9xB,IAqBEA,KAOsB,SAAAtW,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aACvC,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBASV,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAO7D,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aACvC,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAOlCgwC,GAAkB5wC,UAAO2B,IAAV,MCnKfkvC,GAAb,YACE,WAAYtyC,GAA6B,IAAD,+BACtC,8CAAMA,KAwBRuyC,mBAAqB,WACnB,IAAMC,EAAahqC,SAASiqC,iBAAiB,SADpB,uBAEzB,YAAmBD,EAAnB,+CAA0B,SACnB1wC,SAAW,GAHO,oFAzBa,EAgCxC4wC,YAAc,WAEZ,IADA,IAAMC,EAAUnqC,SAASiqC,iBAAiB,aACjCpoC,EAAI,EAAGA,EAAIsoC,EAAGltC,OAAQ4E,IAAK,CAClC,IAAMuoC,EAAUpqC,SAASC,cAAc,UACvCkqC,EAAGtoC,GAAGwoC,WAAWC,aAAaF,EAASD,EAAGtoC,IAC1CuoC,EAAQ3nC,aAAa,QAAS,qBAC9B2nC,EAAQtnC,YAAYqnC,EAAGtoC,MApCzB,EAAK1F,MAAQ,CACXouC,aAAc/yC,EAAM+yC,cAHgB,EAD1C,mFAQuB,IACXA,EAAiB9tC,KAAKN,MAAtBouC,aACR9tC,KAAKjF,MAAMo8B,SACTn3B,KAAKjF,MAAMo8B,QAAQ8V,qBAAqBa,EAAa5yC,GAAI4yC,EAAaC,aACxE/tC,KAAKytC,cACLztC,KAAKstC,uBAbT,yCAgBqB1d,GACbA,EAAU10B,KAAO8E,KAAKjF,MAAMG,IAAM00B,EAAUke,eAAiB9tC,KAAKjF,MAAM+yC,cAC1E9tC,KAAKT,SAAS,CACZuuC,aAAc9tC,KAAKjF,MAAM+yC,eAG7B9tC,KAAKytC,cACLztC,KAAKstC,uBAvBT,qCA2CiB3wC,EAAcumB,GAAc,IACjC4qB,EAAiB9tC,KAAKN,MAAtBouC,aACRA,EAAaC,YAAb,gBAAgCD,EAAaC,YAA7C,gBAA2DpxC,EAAOumB,EAAO9jB,QACzEY,KAAKjF,MAAMo8B,SACTn3B,KAAKjF,MAAMo8B,QAAQ8V,qBAAqBa,EAAa5yC,GAAI4yC,EAAaC,aACpE/tC,KAAKjF,MAAMkrC,aACbjmC,KAAKjF,MAAM2lB,iBAAmB1gB,KAAKjF,MAAM2lB,gBAAgBwlB,mBAAmBlmC,KAAKjF,MAAMG,MAjD7F,sCAqDkB6D,GAAa,IACnB+uC,EAAiB9tC,KAAKN,MAAtBouC,aACRA,EAAaC,YAAb,gBACKD,EAAaC,YADlB,gBAEGhvC,EAAMI,OAAOxC,KACkB,kBAAvBoC,EAAMI,OAAOC,OAAsBL,EAAMI,OAAOC,iBAAiBuE,OACpE5E,EAAMI,OAAOC,MAAM4uC,OACnBjvC,EAAMI,OAAOC,QAErBY,KAAKjF,MAAMo8B,SACTn3B,KAAKjF,MAAMo8B,QAAQ8V,qBAAqBa,EAAa5yC,GAAI4yC,EAAaC,aACpE/tC,KAAKjF,MAAMkrC,aACbjmC,KAAKjF,MAAM2lB,iBAAmB1gB,KAAKjF,MAAM2lB,gBAAgBwlB,mBAAmBlmC,KAAKjF,MAAMG,MAjE7F,+BAqEY,IAAD,OACC4yC,EAAiB9tC,KAAKN,MAAtBouC,aACAnmB,EAAe3nB,KAAKjF,MAApB4sB,WAEFsmB,EAAc,CAClBtnC,QAAS,SAAChE,GAA2C,IAC3CurC,EAAsBvrC,EAAtBurC,QAAS9qB,EAAazgB,EAAbygB,SACjB,GAAI8qB,EAAS,CACX,IAAMC,EAASD,EAAQ,iBACjBE,EAAcN,EAAaC,YAAYI,GAE7C,GAAsB,gBAAlBD,EAAQG,MACV,OACE,gBAACC,GAAA,EAAD,CACEhiB,gBAAiB,SACjBjqB,IAAK8rC,EACLxxC,KAAMwxC,EACNnvC,SAAU,SAACD,GAAD,OAAgB,EAAKwvC,eAAeJ,EAAQpvC,IACtDK,MAAOgvC,EACPxxC,YAAW,UAAKnB,YAAS,2BACzB+yC,oBAAmB,UAAK/yC,YAAS,2BACjCkH,KAAM8rC,KAAWrrB,EAAU6qB,GAAa73B,KAAI,SAAC8M,GAAD,MAAkB,CAC5D9jB,MAAO8jB,EAAOnoB,MAAMqE,OAAS,OAE/B+R,SAAUwW,EACV+d,aAAcgJ,MAEbD,KAAWrrB,EAAU6qB,IAI5B,GAAsB,eAAlBC,EAAQG,MACV,OACE,gBAACM,GAAA,EAAD,CACE9xC,SAAU,EACVwF,IAAK8rC,EACLvxC,YAAW,UAAKnB,YAAS,6BACzBkB,KAAMwxC,EACNjuC,OAAQ,SAACnB,GAAD,OAAgB,EAAK6vC,gBAAgB7vC,IAC7CK,MAAOgvC,EACPj9B,SAAUwW,IAMlB,OAAO,IAcX,OAVKmmB,EAAae,kBAChBf,EAAae,gBAAkB,CAC7BzvC,MAAO,KAIN0uC,EAAae,gBAAgBzvC,QAChC0uC,EAAae,gBAAgBzvC,MAAQ,IAIrC,gBAACguC,GAAD,KACE,gBAACD,GAAD,KACG2B,KAAOhB,EAAae,gBAAgBzvC,MAAO6uC,IAAgB,WApItE,GAAoC1rC,aAwJrBmL,oBAbf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLihB,aAAcxH,aAAe5mC,EAAOmtB,EAAS3xB,QAIjD,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6C2/B,I,qBCpLtD0B,GAAW,SAAOC,GAAP,SAAAtrC,EAAAmL,OAAA,yEACf6tB,KAAUC,IAAV,UAAiBqS,GAAe,CAAEC,KAAM,UAAWC,SAAS,KAD7C,sCAGXC,GAAmB,SAACx7B,GACxB,IAAMy7B,ExFUyB,SAAC/rC,GAChC,IAAI+rC,EAAY/rC,EAAI2Q,UAAU3Q,EAAIiB,QAAQ,UAAY,GAKtD,OAJA8qC,EAAYA,EAAUp7B,UACpB,EACAo7B,EAAU5uC,QAAU4uC,EAAU5uC,OAAS4uC,EAAU9qC,QAAQ,YwFdzC+qC,CAAkB17B,GAC9B27B,EAAiB37B,EAASK,UAAU,EAAGL,EAASrP,QAAQ,UAAY,GAE1E,OAAyD,IAAlDgrC,EAAehrC,QAAQirC,KAAvB,UACAD,EADA,iBACuBF,GAC1Bz7B,GAGS,YACOA,GADP,+EAEL67B,EAAaL,GAAiBx7B,GAFzB,mBAGYo7B,GAASS,IAHrB,UAIa,MAJb,OAIEhgC,OAJF,0CAKF,GALE,iCAOJ,GAPI,sC,UCbFigC,GAAgC,SAC3CtJ,EACA9vB,GAF2C,OAG3B,SAAAvI,GAChBA,EAAS,CACP5R,KAAMqpC,KAAYmK,4CAClBtsC,QAAS,CAAE+iC,UAAS9vB,kB,m4BCDjB,IAAMs5B,GAAwBnzC,UAAO2B,IAAV,MACtB,SAAApD,GAAK,OAAKA,EAAM60C,cAAgB,OAAS,WACrC,SAAA70C,GAAK,OACjBA,EAAM80C,kBAAoB90C,EAAM60C,cAC5Bj0C,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KAC7C,iBACK,SAAApC,GAAK,OAAKA,EAAM80C,gBAAkB,SAAW,OAI3C,SAAA90C,GAAK,OAAKA,EAAM60C,cAAgB,IAAM,OAEvC,SAAA70C,GAAK,OAAKA,EAAM80C,gBAAkB,SAAW,MAGvDxyC,IAAMuP,OAfwB,OAgCrBkjC,GAAiBtzC,UAAO2B,IAAV,MACvB,SAAApD,GAAK,OACLA,EAAMspB,SACF7mB,cADJ,KAGazC,EAAMspB,SAAShpB,EACdN,EAAMspB,SAASjpB,EAETL,EAAM60C,cAA6B,GAAb,WACxB70C,EAAM60C,cAAwB,IAAR,OAEpCpyC,cATJ,SCuJWuyC,GAlKf,YAKE,WAAYh1C,GAAgC,IAAD,+BACzC,8CAAMA,KAFRi1C,eAC2C,IA6B3CC,gBAAkB,SAAC7wC,EAAYmhB,EAAcopB,GAC3C,IAAIuG,EAAwB,GACxBC,EAAmB,GACnB5vB,EAAQ4C,UAGZwmB,EAAarB,SAAQ,SAAC8H,EAAWn8B,GAC3Bm8B,EAAKl1C,KAAOkE,IACd+wC,EAAcl8B,WAIO1J,IAArBgW,EAAQ8mB,UACNsC,EAAawG,GAAa11B,MAAMja,QAClCmpC,EAAa,GAAGlvB,MAAM0F,KAAKwpB,EAAawG,GAAa11B,MAAM,IAE7DkvB,EAAa,GAAGlvB,MAAM6tB,SAAQ,SAAC5Y,EAAWzb,GACpCyb,EAAKx0B,KAAOqlB,EAAQrlB,KACtBg1C,EAAmBvG,EAAa,GAAGlvB,MAAM41B,OAAOp8B,EAAO,SAI3D01B,EAAarB,SAAQ,SAAC5Y,EAAWzb,GAC3Byb,EAAKx0B,KAAOkE,GAASswB,EAAKjV,MAAMja,QAClCmpC,EAAa,GAAGlvB,MAAM0F,KAAKwpB,EAAa11B,GAAOwG,MAAM,IAEnDiV,EAAK4gB,qBAAuB/vB,EAAQrlB,KACtCg1C,EAAmBvG,EAAa11B,GAAOwG,MAAM41B,OAAO,EAAG,OAGlC,KAArB9vB,EAAQ8mB,UACVsC,EAAa,GAAGlvB,MAAM6tB,SAAQ,SAAC5Y,EAAWzb,GACpCyb,EAAKx0B,KAAOqlB,EAAQrlB,KACtBg1C,EAAmBvG,EAAa,GAAGlvB,MAAM41B,OAAOp8B,EAAO,QAM/D01B,EAAawG,GAAa11B,MAAQy1B,EAClC,EAAK3wC,SAAS,CAAEoqC,iBAChB,EAAK5uC,MAAM8uC,SACT,EAAKnqC,MAAMiqC,aACX,EAAK5uC,MAAMG,GACX,EAAKH,MAAMo8B,QACX,EAAKp8B,MAAMkrC,YACX,EAAKlrC,MAAM2lB,mBAzEb,EAAKsvB,UAAYztC,cACjB,EAAK7C,MAAQ,CACXiqC,aAAc5uC,EAAM4uC,aACpB4G,QAASx1C,EAAMw1C,SAAW,EAC1B5oB,WAAY5sB,EAAM4sB,aAAc,GANO,EAL7C,wEAoFY,IAAD,SACqE3nB,KAAKjF,MAD1E,IACCy1C,iBADD,MACa,GADb,MACiB3wB,kBADjB,MAC8B,GAD9B,EACkC+vB,EADlC,EACkCA,cAAeC,EADjD,EACiDA,gBAChDlG,EAAiB3pC,KAAKN,MAAtBiqC,aACF8G,EAAoBD,EAAUp6B,KAAI,SAAAs6B,GAAQ,MAAK,CACnDx1C,GAAIw1C,EAASx1C,GACbwhB,KAAMg0B,EAASh0B,KACfthB,EAAGs1C,EAASt1C,EACZC,EAAGq1C,EAASr1C,EACZi1C,mBAAoB,OAEhBK,EAAqB16B,MAAM7Z,KAAKutC,GAkBtC,OAjBAgH,EAAmBrI,SAAQ,SAAA/nB,GACrBA,EAAQ9F,MAAMja,QAAU+f,EAAQrlB,KAAO01C,KACzCH,EAAkBnI,SAAQ,SAAA5Y,GACpBA,EAAKhT,OAAS6D,EAAQ9F,MAAM,GAAGiC,MAAQgT,EAAKx0B,KAAOqlB,EAAQ9F,MAAM,GAAGvf,KACtEw0B,EAAK4gB,mBAAqB5gB,EAAKx0B,OAGnCqlB,EAAQ8mB,SAAW9mB,EAAQ9F,MAAM,GAAGiC,KACpC6D,EAAQ+vB,mBAAqB/vB,EAAQ9F,MAAM,GAAGvf,GAC9CqlB,EAAQswB,gBAAiB,IAEzBtwB,EAAQ8mB,SAAW,GACnB9mB,EAAQ+vB,mBAAqB,GAC7B/vB,EAAQswB,gBAAiB,MAK3B,gBAAClB,GAAD,CAAuBC,cAAeA,EAAeC,gBAAiBA,IAClEA,GACAc,EAAmBv6B,KACjB,SAAAsZ,GAAI,OACFA,EAAKx0B,KAAO01C,KACV,gBAACd,GAAD,CACEztC,IAAKqtB,EAAKx0B,GACVmpB,SAAUqL,EAAKrL,SACfurB,cAAeA,GAEf,gBAACtB,GAAA,EAAD,CACEhiB,gBAAiB,QACjBwkB,YAAU,EACVzuC,IAAKqtB,EAAKx0B,GACVyB,KAAM+yB,EAAKx0B,GACX8D,SAAU,SAACD,GAAD,OAAgB,EAAKkxC,gBAAgBvgB,EAAKx0B,GAAI6D,EAAO4qC,IAC/DvqC,MAAO,GACPxC,YAAa,GACb4xC,oBAAqB,GACrBuC,eAAgBrhB,EAAK2X,SACrB1kC,KAAM8tC,EAAkBr6B,KACtB,SAAA8M,GAAM,OACJA,EAAOhoB,KAAO01C,KAAkB,CAC9BxxC,MAAO8jB,EAAOxG,KACdxhB,GAAIgoB,EAAOhoB,GACXmsC,SAAUnkB,EAAOotB,mBACjBntB,UAASuM,EAAK2X,SAAS7mC,QACnBkvB,EAAK4gB,qBAAuBptB,EAAOotB,6BAQxDzwB,IAAe+vB,GAAiB,gBAACoB,GAAA,EAAD,MACjC,uBACEjqC,IAAK8Y,EACLxe,IAAKrB,KAAKgwC,UACViB,OAAQ,kBACN,EAAKl2C,MAAMm2C,kBAAkB,EAAKlB,UAAU7sB,QAAS,EAAKzjB,MAAMiqC,eAElEjyB,IAAKjc,YAAS,wCA3JxB,gDAgBI2wB,EACAla,GAEA,OAAIka,EAAUmkB,UAAYr+B,EAAUq+B,QAC3B,CACLA,QAASnkB,EAAUmkB,QACnB5G,aAAcvd,EAAUud,cAGxBvd,EAAUzE,aAAezV,EAAUyV,WAC9B,CACLA,WAAYyE,EAAUzE,WACtBgiB,aAAcvd,EAAUud,cAGrB,SA/BX,GAAuCpnC,aCU1B4uC,GAAb,YACE,WAAYp2C,GAA8B,IAAD,+BACvC,8CAAMA,KAQRq2C,+BAAiC,SAACC,EAAYC,EAA2B3H,GACvE,IAAM4H,EAAQF,EAAMr2C,MAAQq2C,EAAMG,aAgBlC,OAfA7H,EAAarB,SAAQ,SAAC8H,EAAWn8B,GAC3Bm8B,EAAK/rB,WACHotB,gBACF9H,EAAa11B,GAAOoQ,SAAShpB,EAAIiN,KAAKopC,MAAMJ,EAAqBlB,EAAKl1C,IAAIG,EAAIk2C,GAC9E5H,EAAa11B,GAAOoQ,SAASjpB,EAAIkN,KAAKopC,MAAMJ,EAAqBlB,EAAKl1C,IAAIE,EAAIm2C,KAE9E5H,EAAa11B,GAAOoQ,SAAShpB,EAAIiN,KAAKopC,MAClCJ,EAAqBlB,EAAKl1C,IAAIG,EAAIk2C,EAASF,EAAMhmC,OAAU,KAE/Ds+B,EAAa11B,GAAOoQ,SAASjpB,EAAIkN,KAAKopC,MAClCJ,EAAqBlB,EAAKl1C,IAAIE,EAAIm2C,EAASF,EAAMr2C,MAAS,UAK7D2uC,GA1BgC,EA6BzCgI,+BAAiC,SAC/BN,EACAC,EACA3H,GAEc,OAAV0H,QAA4B9mC,IAAV8mC,GACpB,EAAK9xC,SAAS,CACZoqC,aAAc,EAAKyH,+BAA+BC,EAAOC,EAAsB3H,MApC5C,EAmDzCuH,kBAAoB,SAACv+B,EAAUg3B,GAAuB,IAAD,EACxB,EAAK5uC,MAAxBy1C,UACFc,EAA8B,SAFe,MAC/B,GAD+B,GAGzChJ,SAAQ,SAAA5Y,GAChB4hB,EAAqB5hB,EAAKx0B,IAAM,CAAEG,EAAGq0B,EAAKr0B,EAAGD,EAAGs0B,EAAKt0B,MAEvD,EAAKu2C,+BAA+Bh/B,EAAK2+B,EAAsB3H,GAC/D1mC,OAAO8wB,iBAAiB,UAAU,kBAChC,EAAK4d,+BAA+Bh/B,EAAK2+B,EAAsB3H,MAEjE,EAAKiI,iBAAiB,EAAK72C,MAAM8kB,aA3DjC,EAAKngB,MAAQ,CACXkwC,eAAe,EACfC,iBAAiB,EACjBlG,aAAc,IALuB,EAD3C,gFA0CyBh2B,GA1CzB,oGA2CgCk+B,GAA0Bl+B,IA3C1D,OA2CUm+B,EA3CV,OA4CQC,GAAgB,EACfD,IAAeC,GAAgB,GACpC/xC,KAAKT,SAAS,CACZswC,gBAAiBkC,EACjBnC,eAAe,IAhDrB,8FAiE0B,IAAD,OACrB3sC,OAAOgxB,oBAAoB,UAAU,kBAAM,EAAK0d,sCAlEpD,+BAsEIl3B,EACAvf,EACAouC,EACArD,EACAsD,GAEC,IADDC,EACA,wDACAF,EAAOmG,8BAA8Bh1B,EAAOvf,GACxC+qC,IAAgBuD,GAClBD,GAAkBA,EAAerD,mBAAmBhrC,KA/E1D,+BAmFY,IAAD,EAUH8E,KAAKjF,MARP8kB,EAFK,EAELA,WAFK,IAGL2wB,iBAHK,MAGO,GAHP,MAIL3rC,gBAJK,MAIM,GAJN,EAKL3J,EALK,EAKLA,GACAi8B,EANK,EAMLA,QACAiB,EAPK,EAOLA,0BACAzQ,EARK,EAQLA,WARK,IASL4oB,eATK,MASK,EATL,IAWoCvwC,KAAKN,MAAxCkwC,EAXD,EAWCA,cAAeC,EAXhB,EAWgBA,gBACnBlG,EAAe,CACjB,CACEzuC,GAAI01C,IACJn2B,MAAO+1B,EACPK,gBAAgB,IAGhBhsC,EAASrE,OACXmpC,EAAe9kC,EAEf2rC,EAAUlI,SAAQ,SAAA/nB,GAChB,IAAM6vB,EAAO,CACXl1C,GAAIqlB,EAAQrlB,GACZuf,MAAO,GACP4J,SAAU,CAAEhpB,EAAGklB,EAAQllB,EAAGD,EAAGmlB,EAAQnlB,GACrCy1C,gBAAgB,GAElBlH,EAAaxpB,KAAKiwB,MAItB,IAAMr1C,EAAK,cACT8uC,SAAU7pC,KAAK6pC,SACf5D,YAAajmC,KAAKjF,MAAMkrC,YACxBvlB,gBAAiB1gB,KAAKjF,MAAM2lB,gBAC5ByW,UACAtX,aACA3kB,KACAyuC,aAAcqI,KAAUrI,GACxBgI,+BAAgC3xC,KAAK2xC,+BACrCP,+BAAgCpxC,KAAKoxC,+BACrCF,kBAAmBlxC,KAAKkxC,kBACxBtB,gBACAC,kBACAloB,eACKyQ,GAA6B,CAAEmY,YAEtC,OACE,2BACIkB,eAGA,gBAAC,GAAD,iBAAuB12C,EAAvB,CAA8By1C,UAAWA,KAFzC,gBAACyB,GAAA,EAAD,iBAAcl3C,EAAd,CAAqBy1C,UAAWA,EAAW1G,gBAAgB,UAvIrE,GAAqCvnC,aAiKtBmL,oBAjBf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACL2jB,UAAWlK,aAAe5mC,EAAOmtB,EAAS3xB,IAC1C2kB,WAAYiC,aAAcpiB,EAAOmtB,EAAS3xB,IAC1C2J,SAAUklC,aAAgBrqC,EAAOmtB,EAAS3xB,IAC1Ck9B,0BAA2BC,YAAoC34B,GAC/D6wC,QAAS2B,YAAmBxyC,EAAOmtB,EAAS3xB,QAIhD,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmkC,EAAoBrkC,GAChD4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6CyjC,I,oBCvM/CiB,GAA6B,SAACjM,EAAc9vB,GAAf,OAAmD,SAAAvI,GAC3FA,EAAS,CACP5R,KAAMqpC,KAAY8M,uCAClBjvC,QAAS,CAAE+iC,UAAS9vB,kB,wjDCDjB,IAAMi8B,GAAmB91C,UAAO2B,IAAIzB,MAAM,CAC/C,YAAa,sBADiBF,CAAH,KAOzB6U,KACO,SAAAtW,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAEnCE,IAAM0iB,MAVmB,OAmBhBwyB,GAAsB/1C,UAAO2B,IAAV,MAGhB,SAAApD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAElEE,IAAM0iB,MALsB,OAenByyB,GAA2Bh2C,UAAO2B,IAAIzB,OAAM,SAAA3B,GAAK,MAAK,CACjE,YAAa,mBADyByB,CAAH,MAKrB,SAAAzB,GAAK,OACjBA,EAAM03C,mBACF92C,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KAC7CxB,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAEjDE,IAAM0iB,MAV2B,OAgBxB2yB,GAAuBl2C,UAAO2B,IAAIzB,MAAM,CACnD,YAAa,0BADqBF,CAAH,KAO7Ba,IAAM0iB,MAPuB,OAYpB4yB,GAAyBn2C,UAAO2B,IAAV,KAM7Bd,IAAM0iB,MANuB,OC7BtB6yB,GAAb,YACE,WAAY73C,GAA2B,IAAD,wBACpC,8CAAMA,KA2BR83C,sBAAwB,SAAC33C,GAAgB,IAAD,EACZ,EAAKH,MAAvB8J,SACR,YAFsC,MACnB,GADmB,GAEtB0xB,MAAK,SAAArT,GAAM,OAAIA,EAAOhoB,KAAOA,MA9BT,EAiCtC43C,yBAA2B,WAAO,IAAD,EACN,EAAK/3C,MAAtBorC,QACR,YAF+B,MACb,GADa,GAEhB/vB,KAAI,SAAAgyB,GAAM,+BACpBA,EADoB,GAEpB,CAAE2K,aAAa,YAAKF,sBAAsBzK,EAAOltC,WAAlC,eAAuC63C,cAAe,IAFjD,GAGpB,CAAEN,oBAAoB,YAAKI,sBAAsBzK,EAAOltC,WAAlC,eAAuCu3C,qBAAsB,SAtCpD,EA0CtCO,eAAiB,SAAC5C,EAAW2C,EAAkB7vB,GAC7C,IAAI+vB,EAAsBh9B,MAAM7Z,KAAKg0C,GAoBrC,OAnBA6C,EAAQ3K,SAAQ,SAAC5Y,EAAWzb,GACtByb,EAAKqjB,cAAgBA,IACvBE,EAAQh/B,GAAO8+B,YAAc,IAG3BrjB,EAAKx0B,KAAOgoB,EAAOhoB,KACrB+3C,EAAQh/B,GAAO8+B,YAAcA,GAG3BrjB,EAAKwjB,kBAAoBhwB,EAAOhoB,KAClC+3C,EAAQh/B,GAAOw+B,mBAAqB,GACpCQ,EAAQh/B,GAAOi/B,gBAAkB,IAG/BxjB,EAAKrtB,MAAQ0wC,IACfE,EAAQh/B,GAAOw+B,mBAAqBvvB,EAAO9jB,MAC3C6zC,EAAQh/B,GAAOi/B,gBAAkBhwB,EAAOhoB,OAGrC+3C,GA/D6B,MAEwBl4C,EAApD8J,gBAF4B,MAEjB,GAFiB,IAEwB9J,EAArCorC,eAFa,MAEH,GAFG,IAEwBprC,EAAvB4sB,kBAFD,gBAGpC,EAAKjoB,MAAQ,CACXymC,QAAS6L,KAAUntC,EAASrE,OAAS,EAAKsyC,2BAA6B3M,GACvEgN,kBAAmBC,KAAQvuC,EAASrE,OAASqE,EAAWshC,GACxDxe,cANkC,EADxC,gFAmEmBorB,EAAkB7vB,GAAc,IAAD,EACPljB,KAAKN,MAApCymC,EADsC,EACtCA,QAASgN,EAD6B,EAC7BA,kBACTj4C,EAAO8E,KAAKjF,MAAZG,GACR,GAAIgoB,EAAQ,CACVljB,KAAKT,SAAS,CACZ4mC,QAASnmC,KAAKgzC,eAAe7M,EAAS4M,EAAa7vB,GACnDiwB,kBAAmBnzC,KAAKgzC,eAAeG,EAAmBJ,EAAa7vB,KAEzEljB,KAAKjF,MAAMo8B,SAAWn3B,KAAKjF,MAAMo8B,QAAQib,2BAA2BjM,EAASjrC,GAEzE8E,KAAKjF,MAAMkrC,aACbjmC,KAAKjF,MAAM2lB,iBAAmB1gB,KAAKjF,MAAM2lB,gBAAgBwlB,mBAAmBlmC,KAAKjF,MAAMG,IAEzF,IAAMm4C,EAAa9vC,SAAS+vC,cACxBD,GACFA,EAAWE,UAlFnB,2CAyFI,OADoBvzC,KAAKN,MAAjBymC,QAEL/vB,KAAI,SAAAgyB,GAAM,OAAIA,GAAUA,EAAO2K,aAAe3K,EAAO2K,YAAYvyC,UACjEgzC,MAAK,SAAAp0C,GAAK,OAAIA,OA3FrB,yCA8FqBq0C,EAAkCC,GAAmC,IAAD,EACjFA,EAAc/rB,aAAe3nB,KAAKN,MAAMioB,aAAxC,UAAsD3nB,KAAKjF,MAAM8J,gBAAjE,aAAsD,EAAqBrE,SAC7ER,KAAKT,SAAS,CACZ4mC,QAAS6L,KAAUhyC,KAAK8yC,4BACxBK,kBAAmBC,KAAQpzC,KAAKjF,MAAM8J,cAlG9C,0CAuGsBlC,GAAY,IAAD,OAE3BsR,EAOEtR,EAPFsR,MACAyb,EAME/sB,EANF+sB,KACAikB,EAKEhxC,EALFgxC,UAJ2B,EASzBhxC,EAJF0hB,gBAL2B,MAKhB,QALgB,EAM3BznB,EAGE+F,EAHF/F,YAN2B,EASzB+F,EAFFixC,uBAP2B,MAOT,GAPS,IASzBjxC,EADFkxC,wBAR2B,SAU7B,OACE,gBAAC,IAAD,CACEvnB,gBAAiBjI,EACjBysB,YAAU,EACV+C,iBAAkBA,EAClBxxC,IAAKqtB,EAAKx0B,GAAK+Y,EACftX,KAAM+yB,EAAKx0B,GAAK+Y,EAChBjV,SAAU,SAACD,GAAD,OAAgB,EAAK+0C,iBAAiBpkB,EAAKrtB,IAAKtD,IAC1DK,MAAO,GACPxC,YAAaA,EACb4xC,oBAAmB,UAAK/yC,YAAS,2BACjCs1C,eAAgBrhB,EAAK+iB,mBACrB9vC,KAAMgxC,EACNxiC,UAAU,EACVyiC,gBAAiBA,GAEhB,OAjIT,+BAsIY,IAAD,SACgC5zC,KAAKN,MAApCymC,EADD,EACCA,QAASgN,EADV,EACUA,kBACjB,OACE,uBAAKvxC,YAAU,iBACZukC,EAAQ/vB,KAAI,SAACsZ,EAAMzb,GAClB,IAAM8/B,EAAsB,kBAC1BZ,EAAkB/8B,KAAI,SAAA8M,GAAM,MAAK,CAC/B9jB,MAAO8jB,EAAO9jB,OAAS,GACvBioC,SAAUnkB,EAAO6vB,YACjB5vB,QAASD,EAAO6vB,cAAgBrjB,EAAKrtB,IACrCnH,GAAIgoB,EAAOhoB,QAGT04C,EAA4B,IAAV3/B,GAAgB,EAAK+/B,qBAAiC,GAAV,QAC9DC,EAAe,CACnBC,KAAK,GAAD,OAAKz4C,YAAS,8BAAd,YAA+Ci0B,EAAKrtB,KACxD8xC,eAAe,GAAD,OAAK14C,YAAS,6CAG9B,OACE,gBAAC62C,GAAD,CAAkBjwC,IAAKqtB,EAAKx0B,IAC1B,gBAACq3C,GAAD,KAAsB7iB,EAAKrtB,KAC3B,gBAACqwC,GAAD,KACE,gBAACC,GAAD,KACG,EAAKyB,oBAAoB,CACxBngC,QACAyb,OACAikB,UAAWI,IACXn3C,YAAaq3C,EAAaC,KAC1BN,sBAIN,gBAACpB,GAAD,CAA0BC,mBAAoB/iB,EAAK+iB,oBAChD,EAAK2B,oBAAoB,CACxBngC,QACAyb,OACAikB,UAAWI,IACX1vB,SAAU,SACVznB,YAAaq3C,EAAaE,eAC1BN,kBAAkB,aA9KpC,gDAYkCznB,EAA8Bla,GAA+B,IACnFkmB,EAA8BhM,EAA9BgM,0BACR,OAAIhM,EAAUzE,aAAezV,EAAUyV,WAChCyQ,EAOE,CACLzQ,WAAYyE,EAAUzE,YAPf,CACLA,WAAYyE,EAAUzE,WACtBwe,QAAS/Z,EAAU+Z,QACnBgN,kBAAmB/mB,EAAU+Z,SAO5B,SA1BX,GAAkC5jC,aAwMnBmL,oBAff,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,IACxC2J,SAAUklC,aAAgBrqC,EAAOmtB,EAAS3xB,IAC1Ck9B,0BAA2BC,YAAoC34B,OAInE,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6CklC,I,6BC3O/CyB,GAAwB,SAAC1xC,EAAW0T,GAAZ,OAAgD,SAAAvI,GACnFA,EAAS,CACP5R,KAAMqpC,KAAY+O,wBAClBlxC,QAAS,CAAET,OAAM0T,kB,29ECDd,IAAMk+B,GAAU/3C,UAAO2B,IAAIzB,MAAM,CACtC,YAAa,4BADQF,CAAH,MAePg4C,GAAoBh4C,UAAO2B,IAAV,MAMV,SAAApD,GAAK,OAAKA,EAAM80C,gBAAkB,OAAS,UAEnD,SAAA90C,GAAK,OAAKA,EAAM2Y,eAAiB,QAAU,UACzC,SAAA3Y,GAAK,OAAKA,EAAM2Y,eAAiB,SAAW,UAC1C,SAAA3Y,GAAK,OACjBA,EAAM80C,iBAAmB90C,EAAM2Y,eAC3B/X,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KAC7C,iBACK,SAAApC,GAAK,OAAKA,EAAM80C,gBAAkB,SAAW,OAa7Cj9B,GAAQpW,UAAOmW,IAAIjW,OAAM,SAAA3B,GAAK,MAAK,CAC9C,YAAa,mBADMyB,CAAH,MAKN,SAAAzB,GAAK,OAAKA,EAAM80C,gBAAkB,SAAW,OAG5C4E,GAAYj4C,kBAAOyB,KAAPzB,CAAH,MASX,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAC3C,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOuB,iBAAkB,MACvDzB,YAAeqV,IAAuB,KAWrD0jC,GAAOl4C,UAAO2B,IAAV,MAOK,SAAApD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOuB,iBAAkB,MACtDzB,YAAeqV,IAAuB,KAe3D,SAAAjW,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAC5B,SAAArC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAc5B,SAAArC,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAC5B,SAAArC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAMR,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOuB,iBAAkB,OAG3D,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOuB,iBAAkB,OAG7D,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOuB,iBAAkB,QAU9Eu3C,GAAcn4C,UAAO2B,IAAIzB,OAAM,SAAA3B,GAAK,MAAK,CACpD,YAAa,kBADYyB,CAAH,MAKf,SAAAzB,GAAK,OAAIA,EAAMyxB,OACd,SAAAzxB,GAAK,OAAIA,EAAM0xB,OAMnBioB,GAIAD,IAIW,SAAA15C,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAC3C,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBCxI3Cw3C,GAAb,YACE,WAAY75C,GAAsB,IAAD,wBAC/B,8CAAMA,KAkCR85C,eAAiB,SAAC91C,GAChB,GAA6B,QAAzBA,EAAMI,OAAO21C,QAAjB,CAGA,IAAMC,EAAOh2C,EAAMI,OAAO61C,wBACpB55C,EAAIkN,KAAKopC,MAAM3yC,EAAMk2C,QAAUF,EAAKtoB,MACpCpxB,EAAIiN,KAAKopC,MAAM3yC,EAAMm2C,QAAUH,EAAKvoB,KAClCtxB,EAAO,EAAKwE,MAAMymC,QAAlBjrC,GACR,EAAKqE,SAAS,CACZ41C,QAAS,EAAKC,UAAU,CAAEh6C,IAAGC,QAE/B,EAAKN,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQkd,sBAAsB,EAAKe,UAAU,CAAEh6C,IAAGC,MAAMH,GAErF,EAAKH,MAAMkrC,aACb,EAAKlrC,MAAM2lB,iBAAmB,EAAK3lB,MAAM2lB,gBAAgBwlB,mBAAmB,EAAKnrC,MAAMG,MAjD1D,EAqDjCk6C,UAAY,SAACC,GAAiB,IACpBF,EAAY,EAAKz1C,MAAjBy1C,QACAnP,EAAe,EAAKtmC,MAAMymC,QAA1BH,WACJsP,EAAar/B,MAAM7Z,KAAK+4C,GAM5B,OALKnP,EAGHsP,EAAWn1B,KAAKk1B,GAFhBC,EAAa,CAACD,GAITC,GA9DwB,EAiEjCC,aAAe,SAACthC,GAAgB,IACtB/Y,EAAO,EAAKH,MAAZG,GACAi6C,EAAY,EAAKz1C,MAAjBy1C,QACFG,EAAar/B,MAAM7Z,KAAK+4C,GAC9BG,EAAWjF,OAAOp8B,EAAO,GACzB,EAAK1U,SAAS,CACZ41C,QAASG,IAEX,EAAKv6C,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQkd,sBAAsBiB,EAAYp6C,GAEvE,EAAKH,MAAMkrC,aACb,EAAKlrC,MAAM2lB,iBAAmB,EAAK3lB,MAAM2lB,gBAAgBwlB,mBAAmB,EAAKnrC,MAAMG,KA5E1D,MAENH,EAAjBorC,eAFuB,MAEb,GAFa,SAG/B,EAAKzmC,MAAQ,CACXymC,UACAzyB,gBAAgB,EAChByhC,QAAShP,EAAQgP,QACjBtF,iBAAiB,GAPY,EADnC,gFAiFyBl8B,GAjFzB,oGAkFgCk+B,GAA0Bl+B,IAlF1D,OAkFUm+B,EAlFV,OAmFQC,GAAgB,EACfD,IACHC,GAAgB,GAElB/xC,KAAKT,SAAS,CACZswC,gBAAiBkC,EACjBr+B,gBAAgB,IAzFtB,gFA6FY,IAAD,OACCmM,EAAe7f,KAAKN,MAAMymC,QAA1BtmB,WADD,EAE8C7f,KAAKN,MAAlDgU,EAFD,EAECA,eAAgByhC,EAFjB,EAEiBA,QAAStF,EAF1B,EAE0BA,gBACjC,OACE,kBAAC0E,GAAD,KACG10B,EACC,kBAAC20B,GAAD,CAAmB9gC,eAAgBA,EAAgBm8B,gBAAiBA,GACjEn8B,GAAkB,kBAACs9B,GAAA,EAAD,MACnB,kBAAC,GAAD,CACEnB,gBAAiBA,EACjB9oC,IAAK8Y,EACLnI,IAAKjc,YAAS,+BACdoB,SAAU,EACV2B,KAAK,MACLyyC,OAAQ,kBAAM,EAAKW,iBAAiB/xB,IACpChe,QAAUguC,EAAwC,KAAtB7vC,KAAK60C,eACjC3uC,MAAOwN,EAAiB,CAAE9H,QAAS,KAAQ,OAG5CupC,EAAQ/+B,KAAI,SAACi/B,EAAaphC,GAAd,OACX,kBAAC0gC,GAAD,CACEtyC,IAAK4R,EACLpX,SAAU,EACV2B,KAAK,SACLguB,IAAK6oB,EAAOh6C,EACZoxB,KAAM4oB,EAAOj6C,EACbyG,QAAS,kBAAM,EAAK0zC,aAAathC,KAEjC,kBAACygC,GAAD,MACA,kBAACD,GAAD,CAAW9yC,KAAM,EAAGhF,KAAK,qBAI7B,SA9HZ,gDAYkCyvB,EAAyBla,GACvD,OACEA,EAAUi0B,UAAY/Z,EAAU+Z,SAChC/Z,EAAU+Z,UACT/Z,EAAU+Z,QAAQgP,QAAQ30C,OAEpB,CACL2lC,QAAS/Z,EAAU+Z,QACnBgP,QAAS,IAIXjjC,EAAUi0B,UAAY/Z,EAAU+Z,SAChC/Z,EAAU+Z,SACV/Z,EAAU+Z,QAAQgP,QAAQ30C,OAEnB,CACL2lC,QAAS/Z,EAAU+Z,QACnBgP,QAAQ,aAAK/oB,EAAU+Z,QAAQgP,UAG5B,SAjCX,GAA6BnlB,iBAiJdtiB,oBAbf,SAAyBhO,EAAqBmtB,GAC5C,MAAO,CACLsZ,QAASG,aAAe5mC,EAAOmtB,EAAS3xB,QAI5C,SAA4B4S,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBmpB,EAASrpB,GACrC4S,gBAAiB1S,YAAmB0S,GAAiB5S,MAI1CJ,CAA6CknC,ICtI/CY,GAAb,sLACY,IAAD,EASHx1C,KAAKjF,MAPPG,EAFK,EAELA,GACAgB,EAHK,EAGLA,KACAyrB,EAJK,EAILA,WACA/H,EALK,EAKLA,eALK,IAMLqmB,mBANK,SAOLwD,EAPK,EAOLA,wBACAgM,EARK,EAQLA,2BAEF,OACE,gBAAChP,GAAD,KACGgD,GACCgM,GACAC,GAAex6C,EAAIgB,EAAMyrB,EAAYse,IACrCwD,GAA2BiM,GAAex6C,EAAIgB,EAAMyrB,EAAYse,GAClE,gBAACS,GAAD,CAA0BC,QAAShf,EAAY/H,eAAgBA,SAjBvE,GAA8Brd,iBAuB9B,SAASmzC,GAAex6C,EAAYgB,EAAcyrB,EAAqBse,GACrE,OAAQ/pC,GACN,KAAKy5C,KACH,OACE,gBAAC,GAAD,CACEz6C,GAAIA,EACJ+qC,YAAaA,EACb/pC,KAAMA,EACNkqC,gBAAc,EACdze,WAAYA,IAGlB,KAAKiuB,KACH,OACE,gBAAC,GAAD,CAAmB16C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAEjF,KAAKkuB,KACH,OACE,gBAAC,GAAD,CAAgB36C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAE9E,KAAKmuB,KACH,OACE,gBAACC,GAAD,CAAiB76C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAE/E,KAAKquB,KACH,OAAO,gBAAC,GAAD,CAAc96C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IACjF,KAAKsuB,KACH,OAAO,gBAAC,GAAD,CAAa/6C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAChF,KAAKuuB,KACH,OAAO,gBAAC,GAAD,CAAUh7C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAC7E,KAAK+mB,KACH,OACE,gBAAC,GAAD,CAAgBxzC,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAE9E,KAAKwuB,KACH,OACE,gBAAC,GAAD,CAAiBj7C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IAE/E,KAAKyuB,KACH,OAAO,gBAAC,GAAD,CAAcl7C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,EAAMyrB,WAAYA,IACjF,KAAK0uB,KACH,OAAO,gBAAC,GAAD,CAASn7C,GAAIA,EAAI+qC,YAAaA,EAAa/pC,KAAMA,IAC1D,QACE,OAAO,MAWEwR,oBAPf,SAAyBhO,GACvB,MAAO,CACL+pC,wBAAyBO,YAA0BtqC,GACnD+1C,2BAA4Ba,YAA0B52C,MAI3CgO,CAAyB8nC,I,wQC7GjC,IAAMxiC,GAAYxW,UAAO2B,IAAV,KAClBjB,KACO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAK7DE,IAAMC,OAPY,OAmCPi5C,GAhBY,SAAC,GAAD,IACzBtiC,EADyB,EACzBA,MACAuiC,EAFyB,EAEzBA,MACAzgC,EAHyB,EAGzBA,kBACA2vB,EAJyB,EAIzBA,aAJyB,OAMzB,kBAAC,GAAD,MACI3vB,GACAta,YAAS,yBAA0B,CAAEwY,QAAOuiC,SAApC,UAAgDviC,EAAhD,mBAAgEuiC,IACzEzgC,GACC2vB,IAAiBzd,MACjBxsB,YAAS,kCAAmC,CAAEwY,QAAOuiC,UACtDzgC,GAAqB2vB,IAAiBzd,MAAuBxsB,YAAS,0B,2KClC3E,IAEauX,GAAYxW,UAAO2B,IAAIzB,MAAM,CACxC,YAAa,4BADUF,CAAH,KAGlBU,KACO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAK7DE,IAAMC,OAXqB,oBCUhBm5C,GANY,SAAC,GAAD,IAAGxiC,EAAH,EAAGA,MAAOuiC,EAAV,EAAUA,MAAV,OACzB,kBAAC,GAAD,KACG/6C,YAAS,kCAAmC,CAAEwY,QAAOuiC,SAA7C,UAAyDviC,EAAzD,mBAAyEuiC,M,mBCRzEE,GAAkB,SAACC,GAC9B,IAAM3jC,EAAY,SAACjY,GAAD,OAAgBA,EAAMqoB,UAGxC,OAFApQ,EAAU4jC,UAAY,CAAExzB,SAAUyzB,KAAUt2B,QAAQu2B,YACpD9jC,EAAU2jC,SAAWA,EACd3jC,G,igCCCF,IAAMA,GAAYxW,UAAO2B,IAAIzB,OAAM,SAAC3B,GAAD,MAA4B,CACpE,aAAcA,EAAM0D,UACpB,YAAa,oBACbD,KAAMzD,EAAMyD,QAHWhC,CAAH,MAKA,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAO/D6pB,GAASxqB,UAAO2B,IAAV,MAGR,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAG1B+uC,GAAgB1vC,UAAO2B,IAAV,KAGtBd,IAAM8lC,OAHgB,OAYb4T,GAAOv6C,UAAO2B,IAAV,KAEbd,IAAM8lC,OAFO,OAaJI,IANyB/mC,UAAO2B,IAAV,MAMH3B,UAAO2B,IAAIzB,OAAM,SAAA3B,GAAK,MAAK,CACzD8B,SAAU9B,EAAM8B,YADcL,CAAH,OClChBw6C,GAAe,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,WAAY7zB,EAA6D,EAA7DA,SAAU5kB,EAAmD,EAAnDA,KAAM3B,EAA6C,EAA7CA,SAAU4B,EAAmC,EAAnCA,UAAmC,EACrEy4C,GAAkB9zB,GAA3CnlB,EAD8F,EAC9FA,KAAMk5C,EADwF,EACxFA,QAASnxB,EAD+E,EAC/EA,MAIvB,OAHA5C,EAASklB,SAAQ,SAAC8O,IA2BpB,SAA4Bh0B,GAC1B,IAAMi0B,EAAcH,GAAkB9zB,GAEtC,IAAKi0B,EAAYp5C,KACf,OAAO,IAAI6U,MAAJ,uEAET,IAAKukC,EAAYrxB,MACR,IAAIlT,MAAJ,gEAjCPwkC,CAAmBF,MAGnB,gBAAC,GAAD,CAAW34C,UAAWA,GAAa,GAAID,KAAMA,EAAM3B,SAAUA,EAAUwE,IAAK41C,GAC1E,gBAAC,GAAD,KACE,gBAAC,GAAD,KAAgBh5C,GACf+nB,GAEFmxB,GACC,gBAACJ,GAAD,KACE,gBAAC,GAAD,CAAkBl6C,SAAUA,GAAWs6C,MAO3CI,GACE,OADFA,GAEG,QAFHA,GAGK,UAiBX,SAASL,GAAkB9zB,GACzB,OAAO7gB,WAAei1C,QAAQp0B,GAAUq0B,QAAO,SAACC,EAAUN,GACxD,OAAQA,EAAMl7C,KAAKy6C,UACjB,KAAKY,GACHG,EAAIz5C,KAAOm5C,EACX,MAEF,KAAKG,GACHG,EAAIP,QAAUC,EACd,MAEF,KAAKG,GACHG,EAAI1xB,MAAQoxB,EAOhB,OAAOM,IACN,IAnCLV,GAAa/4C,KAAOy4C,GAAgBa,IACpCP,GAAahxB,MAAQ0wB,GAAgBa,IACrCP,GAAaG,QAAUT,GAAgBa,IAoCxBP,UChDFW,GAAb,YAGE,WAAY58C,GAAuB,IAAD,+BAChC,8CAAMA,KAHR68C,iBAEkC,IAWlCC,QAAU,WAAO,IAAD,EACe,EAAK98C,MAA1B88C,EADM,EACNA,QAASC,EADH,EACGA,QACbD,GAAW,EAAKD,YAAYz0B,UAC9B00B,IACA,EAAKD,YAAYz0B,QAAQ9C,SAEvBy3B,GACF,EAAK/8C,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQ4gB,gBAAgB,CACjC1hC,WAAY,EAAKtb,MAAM8sB,SAAS3sB,GAChC88C,aAAa,KArBa,EA0BlCC,SAAW,WAAO,IAAD,EACgC,EAAKl9C,MAA5Ck9C,EADO,EACPA,SAAUH,EADH,EACGA,QAASI,EADZ,EACYA,gBACvBD,GAAUA,IACVH,GACF,EAAK/8C,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQ4gB,gBAAgB,CACjC1hC,WAAY,EAAKtb,MAAM8sB,SAAS3sB,GAChC88C,aAAa,IAGnBE,GAAmBA,EAAgB/0B,SAAW+0B,EAAgB/0B,QAAQ9C,SApCtC,EA8DlC83B,cAAgB,WAAO,IAAD,EACsB,EAAKp9C,MAAvC6sB,EADY,EACZA,oBAAqBC,EADT,EACSA,SADT,EAE0B,EAAK9sB,MAAM8sB,SAAjDE,EAFY,EAEZA,SAAUe,EAFE,EAEFA,wBACZsvB,EAAqBvwB,EAAS3rB,OAAS85C,KACvCnP,EAAY9e,GAAYH,GAAuBkB,EAC/CrO,EAAQ,EAAK49B,uBACnB,OACE,gBAAC,GAAD,CACE75C,KAAK,SACL3B,SAAU,EACV4B,UAAW65C,GAASzR,EAAW9e,EAAUqwB,GACzCnB,WAAY,EAAKW,aAEjB,gBAAC,GAAa35C,KAAd,KACE,gBAAC,IAAD,CACEtB,KAAMkqC,EAAY1e,IAA2BC,GAAKD,IAA2BE,MAC7EhW,MAAO,kBACPoD,WAAYoxB,EAAY,eAAiB,iBACzCllC,KAAM4mB,IAAMgwB,MACZ5yB,MAAOC,IAAKC,OAAO4C,oBAGvB,gBAAC,GAAazC,MAAd,KACE,gBAAC,IAAD,CAAM1T,WAAW,KAAK1Q,YAAU,uBAC7B02C,GAASzR,EAAW9e,EAAUqwB,KAGlC39B,EAAMja,OAAS,GACd,gBAAC,GAAa22C,QAAd,KACE,gBAAC38B,GAAA,EAAD,CAAUC,MAAOA,OAzFzB,EAAKm9B,YAAcr1C,cAFa,EAHpC,wEA0CY,IAAD,EACgCvC,KAAKjF,MAApC+8C,EADD,EACCA,QAASpT,EADV,EACUA,MAAO/c,EADjB,EACiBA,WAExB,OAAKmwB,EAMH,gBAAC,IAAD,CAAOvuC,KAAMm7B,GACX,gBAAC,IAAD,CACE8T,wBAAwB,EACxBrmC,WAAYwV,EACZ8wB,WAAYz4C,KAAK63C,QACjBa,YAAa14C,KAAKi4C,SAClBU,gBAAgB,GAEf34C,KAAKm4C,mBAbVn4C,KAAK63C,UACE73C,KAAKm4C,mBA/ClB,6CAqG0B,IAAD,EASjBn4C,KAAKjF,MAAM8sB,SAPbD,EAFmB,EAEnBA,oBACAgxB,EAHmB,EAGnBA,gBACAC,EAJmB,EAInBA,kBACAC,EALmB,EAKnBA,kBACA3S,EANmB,EAMnBA,QACApe,EAPmB,EAOnBA,SACAe,EARmB,EAQnBA,wBARmB,EAUa9oB,KAAKjF,MAA/Bg+C,iBACR,QAA0BxuC,IAAtBuuC,IAAoCA,EAAmB,CACzD,IAAIr+B,EAAe,GAOnB,YAnBmB,MAUM,GAVN,GAaF6tB,SAAQ,SAAA5Y,GACvB,IAAMspB,EAAgB7S,EAAQ5P,MAAK,SAAC6R,GAAD,OAAiBA,EAAOltC,KAAOw0B,KAC9DspB,EAAcC,mBAChBD,EAAcC,kBAAkB3Q,SAAQ,SAAC4Q,GAAD,OAAgBz+B,EAAM0F,KAAK+4B,EAAMh+C,UAGtEuf,EAET,OAAIsN,EACK6wB,EAEFhxB,GAAuBkB,EAA0B8vB,EAAkBC,MA7H9E,GAA8Bt2C,iBAiI9B,SAAS+1C,GAASzR,EAAoB9e,EAAmBqwB,GACvD,OAAIA,EACKvR,EACHprC,YAAS,iCACTA,YAAS,6CAGRA,YACLssB,EAAW,gCAAkC8e,EAAY,kBAAoB,qBAzIpE8Q,GAQJn1C,aAAe,CACpBkiC,MAAO,EACPzV,SAAU,IACV6oB,SAAS,GA+IEpqC,oBATf,SAAyBhO,EAAqBmtB,GAC5C,IAAMxW,EAAawW,EAAShF,SAAS3sB,GACrC,MAAO,CACLysB,WAAYwxB,YAAmBz5C,EAAO2W,GACtCuR,oBAAqBwxB,YAA4B15C,EAAO2W,GACxD0iC,iBAAkBM,YAAoB35C,EAAO2W,OATjD,SAA4BvI,GAC1B,MAAO,CAAEqpB,QAASnpB,YAAmB0S,GAAiB5S,MAYzCJ,CAA6CiqC,I,q4BChLrD,IAAM2B,GAAmB98C,UAAO2B,IAAIzB,OAAM,SAAA3B,GAAK,MAAK,CACzD8B,SAAU9B,EAAM8B,YADcL,CAAH,MAczB,SAAAzB,GAAK,OACLA,EAAMw+C,SACN/7C,cADA,SAIA,SAAAzC,GAAK,OACLA,EAAMw+C,SACN/7C,cADA,SAOSsP,GAAStQ,kBAAOg9C,IAAPh9C,CAAH,MAINi9C,GAAkBj9C,kBAAOk9C,IAAPl9C,CAAH,MAIf+qB,GAAY/qB,kBAAO8B,IAAP9B,CAAH,MAITm9C,GAAgBn9C,UAAO2B,IAAIzB,MAAM,CAC5C,YAAa,kBADcF,CAAH,MC0CXo9C,GAzEf,YACE,WAAY7+C,GAAmB,IAAD,+BAC5B,8CAAMA,KAcR8+C,qBAAuB,WACjB,EAAK9+C,MAAMgb,mBACb5K,aAAa,EAAK2uC,8BAjBQ,EAqB9BA,0BAA4B,kBAC1Bh1C,YAAW,WACT,EAAK/J,MAAMg/C,iCAAgC,KAC1CC,MAxByB,EA0B9B5rB,iBAAmB,WACjB,EAAK7uB,UAAS,SAAA2S,GAAS,MAAK,CAAEC,YAAaD,EAAUC,gBAzBrD,EAAKzS,MAAQ,CAAEyS,YAAY,GAFC,EADhC,kFAMqByd,GACbA,EAAUnV,QAAUza,KAAKjF,MAAM0f,OACjCza,KAAKT,SAAS,CAAE4S,YAAY,IAG1BnS,KAAKjF,MAAMgb,mBACb/V,KAAK85C,8BAZX,+BA+BY,IACAr/B,EAAUza,KAAKjF,MAAf0f,MACAtI,EAAenS,KAAKN,MAApByS,WACR,OACE,gBAACwnC,GAAD,KACE,gBAACL,GAAD,KACE,gBAACG,GAAD,CAAiB7tC,QAAS,GAAKyG,MAAM,cACrC,gBAACvF,GAAD,CACEjQ,SAAU,EACV4R,OAAO,YACP5M,QAAS7B,KAAKouB,iBACd6rB,cAAc,YACdt4C,KAAK,QACLu4C,gBAAe/nC,GAEd1W,YAAS0W,EAAa,cAAgB,gBAEzC,gBAACsnC,GAAD,CAAiB7tC,QAAS,GAAKyG,MAAM,eAEvC,gBAAC,IAAD,CACEF,WAAYA,EACZwmC,gBAAgB,EAChB1pB,SAAU,IACVC,gBAAgB,OAEhB,gBAAC,IAAD,CAAW7U,OAAQ,GAAIzO,QAAS,GAAKyG,MAAM,cAC3C,gBAAC,GAAD,CAAc4C,MAAM,OAAOzW,KAAK,UAC9B,gBAAC,GAAaP,KAAd,KACE,gBAAC,IAAD,CAAMtB,KAAK,OAAO0V,MAAM,YAAY1Q,KAAM,MAE5C,gBAAC,GAAaqkB,MAAd,KACE,gBAAC,GAAD,KAAYvqB,YAAS,YAEvB,gBAAC,GAAa07C,QAAd,KACE,gBAAC38B,GAAA,EAAD,CAAUC,MAAOA,YAjE/B,GAA0BlY,iB,4iBCbnB,IAAMyQ,GAAYxW,UAAO2B,IAAV,MAIN,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,mBACfzB,YAAeqV,IAAuB,IAI/D3T,IAAM0iB,MATY,OAeTo6B,GAAgB39C,UAAO49C,OAAO19C,OAAM,SAAC3B,GAAD,MAAiB,CAChEs/C,MAAOt/C,EAAMs/C,MACbC,QAASv/C,EAAMu/C,WAFY99C,CAAH,MCIb+9C,GAAb,2MAKgCxzC,GAC5B,OAAOyzC,aACLzzC,EACA,kBACAI,mBAAmBszC,aAAUz6C,KAAKjF,MAAMa,WAT9C,4CAayB,ICpCE0wC,EDoCH,EACoBtsC,KAAKjF,MAArCgb,EADY,EACZA,kBAAmBlZ,EADP,EACOA,SACrB69C,GCtCiBpO,EDsCOtsC,KAAKjF,MAAMuxC,WCrCvB,IAAIqO,WAAYC,gBAAgBtO,EAAW,aAC5ClmC,KAAKy0C,YDqChBC,EClCH,SAAkCC,GAKvC,IAJA,IAAMC,EAAaD,EAAKC,WAClBx6C,EAASw6C,EAAWx6C,OAEpB6G,EAAS,IAAI4O,MAAMzV,GAChB4E,EAAI,EAAGA,EAAI5E,EAAQ4E,IAC1BiC,EAAOjC,GAAK41C,EAAW51C,GAAGzI,KAE5B,OAAO0K,ED0BY4zC,CAAyBP,GACpCQ,EAAqC,GAa3C,OAXAJ,EAASxS,SAAQ,SAAA3rC,GACfu+C,EAAWv+C,GAAQ+9C,EAAWM,WAAWr+C,GAAMw+C,aAGjDD,EAAWr+C,SAAWA,EACtBq+C,EAAWn0C,IAAM/G,KAAKo7C,8BAA8BF,EAAWn0C,KAE3DgP,IACFmlC,EAAWn0C,IApCO,SAACA,GACvB,IAAMs0C,EAAYrJ,KAAUjrC,GACtB1D,EAAM,IAAImD,IAAI60C,GACdC,EAAYj4C,EAAIk4C,aAGtB,OAFAD,EAAUE,IAAI,WAAY,KAC1Bn4C,EAAIo4C,OAASH,EAAU73C,WAChBJ,EAAII,WA8BUi4C,CAAgBR,EAAWn0C,MAGvC,gBAACozC,GAAkBe,KA9B9B,+BAkCI,OAAO,gBAAC,GAAD,KAAYl7C,KAAK27C,2BAlC5B,GAA+Bp5C,iBAAlBg4C,GACJ/3C,aAAe,CACpB3F,SAAU,GAoCC/B,2BAAUy/C,I,s2CEhDlB,IAAMqB,GAAyBp/C,UAAO2B,IAAV,KAC/BJ,aAAW,UAAW,SACb,SAAAhD,GAAK,OAAKA,EAAM8gD,SAAW,EAAI,KAoB/BC,GAAkBt/C,UAAO2B,IAAIzB,OAAM,SAAC3B,GAAD,MAAkC,CAChF8B,SAAU9B,EAAM8B,YADaL,CAAH,MAgBfu/C,GAAav/C,UAAOkQ,EAAV,KACnBxP,KAIO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAsCpD6+C,IAzBgCx/C,kBAAO8B,KAAM5B,OACxD,SAAC3B,GAAD,MAAgD,CAC9C8B,SAAU9B,EAAM8B,SAChB2B,KAAMzD,EAAMyD,KACZ,aAAczD,EAAM0D,aAJqBjC,CAAH,MAU/B,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAOxBX,UAAO2B,IAAV,MAQC3B,UAAO2B,IAAV,MACpB,SAAApD,GAAK,OAAKA,EAAMkhD,0BAA4B,OAAS,QAGxDC,GAAgC1/C,UAAO2B,IAAV,MCzC7Bg+C,GAAb,YAIE,WAAYphD,GAAW,IAAD,+BACpB,8CAAMA,KA2KRglC,YAAc,oBAAAr8B,EAAAmL,OAAA,gDACZ,EAAKtP,SAAS,CAAEuiC,aAAa,IADjB,sCA5KQ,EAgLtBsa,OAAS,WAAO,IACNv0B,EAAa,EAAK9sB,MAAlB8sB,SACJA,EAAS3rB,OAASg6C,KAChBruB,EAAShjB,SAASqlC,YACpB,EAAKnvC,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQiR,OAAOvgB,EAAS3sB,IACzD,EAAKH,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQ4gB,gBAAgB,CACjC1hC,WAAYwR,EAAS3sB,GACrB88C,aAAa,IAEjB,EAAKz4C,SAAS,CAAE88C,iBAAiB,EAAMva,aAAa,KAEpD,EAAKviC,SAAS,CAAEuiC,aAAa,KAG/B,EAAK/mC,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQiR,OAAOvgB,EAAS3sB,IACzD,EAAKH,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQ4gB,gBAAgB,CACjC1hC,WAAYwR,EAAS3sB,GACrB88C,aAAa,IAEjB,EAAKz4C,SAAS,CACZ88C,iBAAiB,EACjBC,UAAW,EAAKC,0BAvMA,EA4MtBC,sBAAwB,SAACC,GAAkC,IAAD,EACV,EAAK1hD,MAA3Cy8B,EADgD,EAChDA,kBAAmB7d,EAD6B,EAC7BA,eAC3B,OAAI6d,EACK/7B,YAAS,mBAEdke,EACKle,YAAS,UAEXA,YAASghD,EAAsB,iBAAmB,WApNrC,EA6PtBC,SAAW,WAAO,IACR70B,EAAa,EAAK9sB,MAAlB8sB,SACR,EAAK9sB,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQwlB,cAAc90B,GACvD,EAAK9sB,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQylB,cAAc/0B,EAAS3sB,IAChE,EAAKqE,SAAS,CAAE88C,iBAAiB,IACjC,EAAKthD,MAAMo8B,SACT,EAAKp8B,MAAMo8B,QAAQ4gB,gBAAgB,CAAE1hC,WAAYwR,EAAS3sB,GAAI88C,aAAa,KAjQ7E,EAAKt4C,MAAQ,CACX28C,iBAAiB,EACjBva,aAAa,EACbha,qBAAsB,EAAK/sB,MAAM8sB,SAAS3rB,OAAS+rB,KACnDq0B,WAAW,GANO,EAJxB,mFAeIt8C,KAAKT,SAAS,CACZ+8C,UAAWt8C,KAAKu8C,0BAhBtB,yCAoBqB3sB,GACbA,EAAU/H,SAAS3sB,KAAO8E,KAAKjF,MAAM8sB,SAAS3sB,IAChD8E,KAAKT,SAAS,CAAE88C,iBAAiB,MAtBvC,+BA0BY,IAAD,EAC2Cr8C,KAAKN,MAA/C28C,EADD,EACCA,gBAAiBv0B,EADlB,EACkBA,qBADlB,EAEmE9nB,KAAKjF,MAAvE8sB,EAFD,EAECA,SAFD,IAEWg1B,wBAFX,aAEqCp+B,6BAFrC,MAE6D,EAF7D,EAGCsJ,EAAaF,EAAbE,SACFu0B,EAAYt8C,KAAKu8C,sBACjB/2B,EAAoBxlB,KAAK4e,uBACzBk+B,EAAmB98C,KAAK88C,mBAC1Br3B,EAAqB,UAAOhqB,YAAS,wBAAhB,YAA2C+pB,GAUpE,OAR0B,IAAtBA,GAA2B/G,EAAwB,IACrDgH,EAAwBhqB,YAAS,6BAGL,IAA1BgjB,IACFgH,EAAwBhqB,YAAS,uCAIjC,gBAACmgD,GAAD,CAAwBC,SAAUgB,IAC9B/0B,KAA0BD,EAASF,YAAck1B,IACjD,gBAAC,WAAD,KACGh1B,EAAS3rB,OAASg6C,KACjB,gBAAC,IAAD,CACE5pB,gBAAiB,MACjB7d,OAAQmzB,IAAQC,UAChBzd,eAAgBpkB,KAAK+/B,YACrB+B,YAAa9hC,KAAKN,MAAMoiC,YACxB/E,QAASthC,YAAS,2BAClBsmC,cACE,gBAAC,IAAD,CAAQllC,SAAU,EAAGgF,QAAS7B,KAAKo8C,OAAQl8C,OAAQF,KAAK+/B,aACrDtkC,YAAS,eAKhB,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAQoB,SAAU,EAAGgF,QAAS7B,KAAKo8C,QAChC3gD,YAAS,aAEXssB,IAAau0B,GACZ,gBAACP,GAAD,KAAatgD,YAAS,4BAI3BqhD,IAAqBD,GACpB,gBAAC,GAAD,CAAwBz3B,eAAe,EAAO1I,KAAM+I,EAAuBJ,gBAAgB,EAAMC,yBAA0BE,MAI/Hq3B,IACCR,EACC,gBAAC,IAAD,CAAcngD,KAAMoS,IAAaC,cAAcwuC,aAC5C/8C,KAAKg9C,yBAGRh9C,KAAKg9C,4BAjFjB,yCAuFsB,IACVn1B,EAAa7nB,KAAKjF,MAAlB8sB,SACAD,EAAkCC,EAAlCD,oBAAqBG,EAAaF,EAAbE,SAE7B,OAD6BF,EAAS3rB,OAAS+rB,MAChBL,GAAuBG,EAClDrZ,IAAOC,OAAOC,QACdF,IAAOC,OAAOqV,YA7FtB,8CAgG2B,IAAD,EAOlBhkB,KAAKjF,MALP8sB,EAFoB,EAEpBA,SACA4B,EAHoB,EAGpBA,cACAwzB,EAJoB,EAIpBA,uBACAlnC,EALoB,EAKpBA,kBACAyhB,EANoB,EAMpBA,kBAEM5P,EAAkCC,EAAlCD,oBAAqBG,EAAaF,EAAbE,SACvB00B,EAAsBhzB,EAAgB,IAAMwzB,EAC5Cn1B,EAAuBD,EAAS3rB,OAAS+rB,KACzCq0B,EAAYt8C,KAAKu8C,sBAEvB,OACE,gBAACT,GAAD,CAAiBj/C,UAAW,GACzBmD,KAAKk9C,uBACJ,gBAAC,IAAD,CAAQrgD,SAAU,EAAGgF,QAAS7B,KAAK08C,UAChCjhD,YAAS,iBAGZsa,GACAumC,GACAt8C,KAAKm9C,iBACHr1B,EACAF,EACAG,EACA00B,GAGH1mC,GACCyhB,GACAx3B,KAAKm9C,iBACHr1B,EACAF,EACAG,EACA00B,MAnIZ,uCA0II30B,EACAF,EACAG,EACA00B,GACC,IAAD,SAMIz8C,KAAKjF,MAJPgT,EAFF,EAEEA,aACA2L,EAHF,EAGEA,eACA8d,EAJF,EAIEA,kBACA9e,EALF,EAKEA,6BAgBF,OACE,gBAAC,IAAD,CACE9W,YAAU,cACV6M,OAAQzO,KAAKo9C,mBACbv7C,QAlBiB,WAEjBkM,GACA2L,GACA8d,GACA9e,GAAgC,IAEhC3K,EAAae,eAAeC,IAAYC,SACxCjB,EAAampB,uBARU,IAUjBmmB,EAAiB,EAAKtiD,MAAtBsiD,aACRA,KAQExgD,SAAU,EACV48B,WAAW,cAEVz5B,KAAKw8C,sBAAsBC,MA3KpC,4CA4NI,OAAOz8C,KAAKjF,MAAM8sB,SAAS3rB,OAAS+rB,MAA6BjoB,KAAKjF,MAAM8sB,SAASF,aA5NzF,4CA+NyB,IAAD,EACiC3nB,KAAKjF,MAAlD8sB,EADY,EACZA,SAAU/J,EADE,EACFA,kBAAmB8C,EADjB,EACiBA,YAC/Bk8B,EAAmB98C,KAAK88C,qBAAuBh/B,EAC/C0jB,EAAiB5gB,IAAgB7R,IAAYC,QAEnD,OACE8tC,GACAj1B,EAAS3rB,OAAS+rB,MAClBJ,EAASF,aACRE,EAASD,sBACTC,EAASE,WACTyZ,IA1OP,yCA8OsB,IAAD,EACkDxhC,KAAKjF,MAAhE8sB,EADS,EACTA,SAAU/J,EADD,EACCA,kBADD,IACoBW,6BADpB,MAC4C,EAD5C,EAEX+G,EAAoBxlB,KAAK4e,uBAC/B,OACEd,IACC+J,EAASE,WACTF,EAASD,qBACVpC,EAAoB,IACnBA,EAAoB/G,GAAoD,IAA1BA,KAtPrD,6CA0P0B,IAAD,EAC0Cze,KAAKjF,MAA5D8sB,EADa,EACbA,SAAU/J,EADG,EACHA,kBAAmBW,EADhB,EACgBA,sBACrC,OAAOX,GAAqBW,EACvBA,EAAmCoJ,EAASy1B,cAC7C,MA9PR,GAA+D/6C,aAiShDmL,oBAtBf,SAAyBhO,EAAqBmtB,GAC5C,IAAMxW,EAAawW,EAAShF,SAAS3sB,GACrC,MAAO,CACLysB,WAAYwxB,YAAmBz5C,EAAO2W,GACtCuR,oBAAqBwxB,YAA4B15C,EAAO2W,GACxDwmC,iBAAkBU,YAAoB79C,EAAO2W,GAC7CyH,kBAAmBsB,YAAkB1f,GACrC+e,sBAAuBY,YAAyB3f,GAChDkhB,YAAaoB,YAAetiB,GAC5Bia,eAAgBgC,YAAsBjc,GACtCga,eAAgB8B,YAAgB9b,GAChCgZ,6BAA8B2C,YAAgC3b,OAIlE,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmB0S,GAAiB5S,GAC7CC,aAAcC,YAAmBC,EAAoBH,MAI1CJ,CAA6CyuC,I,iWCvVrD,IAAMqB,GAAuBhhD,UAAO2B,IAAV,MAOpBs/C,GAAgBjhD,kBAAO8B,KAAM5B,MAAM,CAC9C,YAAa,kBADcF,CAAH,KAKtBa,IAAM0S,OALgB,OCmEb2tC,GAAb,YAEE,WAAY3iD,GAAW,IAAD,+BACpB,8CAAMA,KAFRm9C,qBACsB,IA0BtBnY,YAAc,oBAAAr8B,EAAAmL,OAAA,gDACZ,EAAKtP,SAAS,CAAEuiC,aAAa,IADjB,sCA1BQ,EA8BtB0a,sBAAwB,SAACC,GAEvB,OAAIjlB,EAD0B,EAAKz8B,MAA3By8B,qBAEC/7B,YAAS,mBAEXA,YAASghD,EAAsB,iBAAmB,WAnCrC,EAsCtBkB,aAAe,WAAO,IAEd71B,EADe,EAAK/sB,MAAlB8sB,SAC8B3rB,OAAS+rB,KAE7C1kB,SAAS0R,MADP6S,EACF,UAAoBrsB,YAAS,wBAA7B,cAA0D,EAAKV,MAAMka,OAErE,UAAoBxZ,YAAS,0BAA7B,cAA4D,EAAKV,MAAMka,QA5CrD,EAiHtBkkB,mBAAqB,YAEnBA,EAD+B,EAAKp+B,MAA5Bo+B,uBAlHY,EAsHtBykB,iBAAmB,WAAO,IAAD,EAOnB,EAAK7iD,MALP0uB,EAFqB,EAErBA,cACA1T,EAHqB,EAGrBA,kBACA4D,EAJqB,EAIrBA,eACAkkC,EALqB,EAKrBA,oBACAC,EANqB,EAMrBA,qBAGF,OAAI/nC,EACK+nC,EAAuB,EAG5BnkC,EACKkkC,EAAsB,EAGxBp0B,EAAgB,GAvIH,EA0ItBs0B,sBAAwB,WAAO,IAAD,EAOxB,EAAKhjD,MALPkiD,EAF0B,EAE1BA,uBACAlnC,EAH0B,EAG1BA,kBACAioC,EAJ0B,EAI1BA,uBACArkC,EAL0B,EAK1BA,eACAoE,EAN0B,EAM1BA,iBAGF,OAAIhI,EACKioC,EAGLrkC,EACKoE,EAGFk/B,GA3Ja,EA8JtBgB,qBAAuB,WAAO,IAAD,EACiC,EAAKljD,MAAzD8sB,EADmB,EACnBA,SAAUpQ,EADS,EACTA,QAAS4hB,EADA,EACAA,UAAWtjB,EADX,EACWA,kBAEhC2vB,EAAe7d,EAAS3rB,OAAS+rB,KAAsBA,KAAsB,WACnF,OACE,kBAAC,IAAMuJ,SAAP,KACG6H,IAActjB,GAAqB,kBAAC,IAAD,CAAY0B,QAASA,IACzD,kBAAC,GAAD,CACExD,MAAO,EAAK2pC,mBACZpH,MAAO,EAAKuH,wBACZhoC,kBAAmBA,EACnB2vB,aAAcA,IAEhB,kBAAC8X,GAAD,CAAsB3gD,SAAU,EAAG3B,GAAI2jB,IAAoBq/B,eACzD,kBAAC1nC,GAAA,EAAD,CAAYC,QAAS,CAAEva,KAAMwpC,EAAcxqC,GAAI2sB,EAAS3sB,GAAI+Z,MAAO4S,EAAS5S,QAC1E,kBAACwoC,GAAD,CAAenrC,WAAW,MAAMuV,EAAS5S,SAG5C,EAAKkpC,uBA9KV,EAAKz+C,MAAQ,CACXoiC,aAAa,EACbsc,oBAAqB,IAEvB,EAAKlG,gBAAkB31C,IAAM+uB,YANT,EAFxB,mFAYStxB,KAAKjF,MAAMgb,oBACd/V,KAAKjF,MAAMo8B,QAAQhW,aAAanhB,KAAKjF,MAAM8sB,SAAS3sB,IACpD8E,KAAK29C,gBAEP39C,KAAKjF,MAAMo8B,QAAQknB,aAAar+C,KAAKjF,MAAM8sB,SAAS3sB,MAhBxD,yCAmBqB00B,GACbA,EAAU/H,SAAS3sB,KAAO8E,KAAKjF,MAAM8sB,SAAS3sB,IAChD8E,KAAKjF,MAAMo8B,QAAQknB,aAAar+C,KAAKjF,MAAM8sB,SAAS3sB,IAElD8E,KAAKjF,MAAMgb,mBACb/V,KAAKjF,MAAMg/C,iCAAgC,KAxBjD,+BAkDY,IAAD,EAgBH/5C,KAAKjF,MAdP8sB,EAFK,EAELA,SACA4B,EAHK,EAGLA,cACAwzB,EAJK,EAILA,uBACAr9B,EALK,EAKLA,eACAnI,EANK,EAMLA,QACA4hB,EAPK,EAOLA,UACA1f,EARK,EAQLA,eACAoE,EATK,EASLA,iBACA8/B,EAVK,EAULA,oBACAS,EAXK,EAWLA,wBACAC,EAZK,EAYLA,YACAxoC,EAbK,EAaLA,kBACA+nC,EAdK,EAcLA,qBACAE,EAfK,EAeLA,uBAEItY,EAAe7d,EAAS3rB,OAAS+rB,KAAsBA,KAAsB,WAEnF,OACE,kBAAC,WAAD,KACGoR,IAActjB,GAAqB,kBAAC,IAAD,CAAY0B,QAASA,IACxDkC,GAAkB,kBAAC,GAAD,CAAa1F,MAAO4pC,EAAsB,EAAGrH,MAAOz4B,KACrEpE,GACA,kBAAC,GAAD,CACE1F,MAAO8B,EAAoB+nC,EAAuB,EAAIr0B,EAAgB,EACtE+sB,MAAOzgC,EAAoBioC,EAAyBf,EACpDlnC,kBAAmBA,EACnB2vB,aAAcA,IAGlB,kBAAC8X,GAAD,CACEn8C,IAAKrB,KAAKk4C,gBACVr7C,SAAU,EACV3B,GAAI2jB,IAAoBq/B,eAExB,kBAAC1nC,GAAA,EAAD,CAAYC,QAAS,CAAEva,KAAMwpC,EAAcxqC,GAAI2sB,EAAS3sB,GAAI+Z,MAAO4S,EAAS5S,QAC1E,kBAACwoC,GAAD,CAAenrC,WAAW,MAAMuV,EAAS5S,SAG5CjV,KAAKm+C,qBACN,kBAAC,GAAD,CACEjjD,GAAI2sB,EAAS3sB,GACbgB,KAAM2rB,EAAS3rB,KACfyrB,WAAYE,EAASF,WACrB/H,eAAgBA,IAEjB5f,KAAKw+C,kCACLx+C,KAAKy+C,iBACN,kBAAC,GAAD,CACE52B,SAAUA,EACVw1B,aAAcr9C,KAAKm5B,mBACnB3B,kBAAmBzhB,EAAoBwoC,EAAcv+C,KAAKjF,MAAMy8B,oBAChEylB,uBAAwBA,EACxBxzB,cAAeA,EACfvI,WAAYlhB,KAAKjF,MAAMmmB,WACvBo9B,wBAAyBA,EACzBC,YAAaA,EACbxoC,kBAAmBA,IAEpB/V,KAAK0+C,qBA9Gd,wDAuLqC,IAAD,EACQ1+C,KAAKjF,MAArC8sB,EADwB,EACxBA,SAAU82B,EADc,EACdA,kBAClB,OAC4B,IAA1B92B,EAAS+2B,MAAMp+C,SACbm+C,GAAqB92B,EAAS3rB,OAAS+rB,KAElC,kBAAC,IAAD,CAAW5N,OAAQ,GAAIzO,QAAS,GAAKyG,MAAM,cAEhDwV,EAAS3rB,OAAS+rB,KACb,kBAACzN,GAAA,EAAD,CAAUC,MAAOoN,EAAS+2B,QAGjC,kBAACpoC,GAAA,EAAD,CACEC,QAAS,CACPva,KAAMwa,KAAqB4R,SAC3B1R,SAAUC,KAA0BgoC,iBACpC3jD,GAAI2sB,EAAS3sB,GACb+Z,MAAO4S,EAAS5S,QAGlB,kBAAC,GAAD,CACEwF,MAAOoN,EAAS+2B,MAChB7E,gCAAiC/5C,KAAKjF,MAAMg/C,gCAC5ChkC,kBAAmB/V,KAAKjF,MAAMgb,uBA9MxC,uCAoNoB,IACR8R,EAAa7nB,KAAKjF,MAAlB8sB,SACR,OAAIA,EAAS3rB,OAAS+rB,KACb,KAIP,kBAAC,GAAD,CACEJ,SAAUA,EACViwB,SAAS,EACTpT,MAAO,IACPwT,gBAAiBl4C,KAAKk4C,oBA/N9B,2CAoOwB,IACZrwB,EAAa7nB,KAAKjF,MAAlB8sB,SACAi3B,EAAuBj3B,EAAvBi3B,aAAc5iD,EAAS2rB,EAAT3rB,KACtB,OACE,kBAAC,IAAMs1B,SAAP,KACGstB,EAAat+C,OAAS,GAAK,kBAACga,GAAA,EAAD,CAAUC,MAAOqkC,IAC5C5iD,IAAS+rB,MAA+C,IAAxB62B,EAAat+C,QAC5C,kBAAC,IAAD,CAAWoL,QAAS,GAAKyG,MAAM,iBA3OzC,wCAiPqB,IAAD,EACwBrS,KAAKjF,MAArC8sB,EADQ,EACRA,SAAU9R,EADF,EACEA,kBAClB,QACI8R,EAASk3B,WACT,kBAACvoC,GAAA,EAAD,CACEwoC,aAAa,EACbjpC,kBAAmBA,EACnBU,QAAS,CACPva,KAAMwa,KAAqBuR,oBAC3BrR,SAAUC,KAA0BooC,WACpC/jD,GAAI2sB,EAAS3sB,GACb+Z,MAAO4S,EAAS5S,QAGlB,kBAAC,GAAD,CACEpY,SAAU,EACVyvC,UAAWzkB,EAASk3B,UACpBhpC,kBAAmBA,SAlQ/B,GAA+DgQ,aAiThDtY,mBACbC,aAxCF,SAAyBhO,EAAqBmtB,GAC5C,IAD2D,EACzC9K,YAAwBriB,GAG/BmtB,EAEFA,EAAS6M,MAAMjC,OAJhB/Z,EAFmD,EAEnDA,UAAWrH,EAFwC,EAExCA,WAOnB,MAAO,CACLoB,QAASmiB,YAAQl6B,GACjB25B,UAAWQ,YAAgBn6B,GAC3B2M,QAAS6yC,aAAWx/C,EAAOge,GAC3B+L,cAAem0B,aAAiBl+C,EAAOge,EAAWrH,GAClD4mC,uBAAwBkC,aAAiBz/C,EAAOge,GAChDmK,SAAUu3B,YAAY1/C,EAAO2W,GAC7BsR,WAAYwxB,YAAmBz5C,EAAO2W,GACtCuR,oBAAqBwxB,YAA4B15C,EAAO2W,GACxDuJ,eAAgBkC,YAAcpiB,GAAO0G,KACrC6O,MAAO6F,YAAepb,GACtB2/C,cAAeA,aAAc3/C,EAAOge,GACpC4hC,eAAgBA,YAAe5/C,EAAO2W,GACtC0iC,iBAAkBM,YAAoB35C,EAAO2W,GAC7CsD,eAAgBgC,YAAsBjc,GACtCqe,iBAAkBiB,YAAoBtf,GACtCm+C,oBAAqB0B,YAAuB7/C,EAAO2W,GACnDN,kBAAmBgM,YAAwBriB,GAC3Ci/C,kBAAmBa,YAA2B9/C,OAIlD,SAA4BoO,GAC1B,MAAO,CAAEqpB,QAASnpB,YAAmB0S,GAAiB5S,MAQtDJ,CAGEorB,GAAuB4kB,IAR3B,SAA8B3iD,GAC5B,OAAQA,EAAMskD,gBAAkBtkD,EAAMukD,oBC5U3BG,GAAb,YACE,WAAY1kD,GAAqC,IAAD,+BAC9C,8CAAMA,KA4KRm3B,KAAO,WAAO,IAAD,EACuE,EAAKn3B,MAA/E8sB,EADG,EACHA,SAAUw1B,EADP,EACOA,aADP,EACqBQ,oBAES,IAH9B,EAC0C6B,0BAKnD,EAAK3kD,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQwoB,kBACzCtC,MAEA,EAAKtiD,MAAMo8B,SAAW,EAAKp8B,MAAMo8B,QAAQ+O,mBAAmBre,EAAS3sB,IACrE,EAAKqE,SAAS,CACZ+8C,WAAW,IAEbe,MA1L4C,EA8LhDuC,iBAAmB,WAAO,IAAD,EAC0C,EAAK7kD,MAA9D2e,EADe,EACfA,eAAgByd,EADD,EACCA,QAASppB,EADV,EACUA,aAAcM,EADxB,EACwBA,cAC3CN,GAAgB2L,IAClB3L,EAAae,eAAeC,IAAYC,SACxCjB,EAAampB,4BAEC3sB,IAAZ4sB,GACFA,EAAQwoB,kBAEVtxC,EAAcY,MArMd,EAAKvP,MAAQ,CACX28C,iBAAiB,EACjBva,aAAa,EACbha,qBAAsB,EAAK/sB,MAAM8sB,SAAS3rB,OAAS+rB,KACnDq0B,WAAW,GANiC,EADlD,wEAWY,IACAx0B,EAAyB9nB,KAAKN,MAA9BooB,qBADD,EAQH9nB,KAAKjF,MALP8sB,EAHK,EAGLA,SACAtT,EAJK,EAILA,kBACAspC,EALK,EAKLA,oBACA6B,EANK,EAMLA,yBACA3pC,EAPK,EAOLA,kBAEMgS,EAAaF,EAAbE,SACF83B,EAAahC,EAAsB,IAAM6B,EAC/C,OACE,gBAAC9D,GAAD,CAAwBC,UAAU,IAC9BtnC,IAAsBuT,GACtB,gBAAC,WAAD,KACGD,EAAS3rB,OAASg6C,KACjB,gBAAC,IAAD,CACE5pB,gBAAiB,MACjB7d,OAAQmzB,IAAQC,UAChBC,YAAa9hC,KAAKN,MAAMoiC,YACxB/E,QAASthC,YAAS,2BAClBsmC,cACE,gBAAC,IAAD,CACEllC,SAAU,EACVgF,QAAS7B,KAAKkyB,KACdhyB,OAAQF,KAAK+/B,YACbn+B,YAAU,cACV6M,OAAQzO,KAAK8/C,4BAEZrkD,YAAS,cAKfokD,IACA9pC,GACC,gBAAC,WAAD,KACE,gBAAC,IAAD,CACElZ,SAAU,EACVgF,QAAS7B,KAAKkyB,KACdtwB,YAAU,cACV6M,OAAQzO,KAAK8/C,4BAEZrkD,YAAS,WAEXssB,GAAY,gBAACg0B,GAAD,KAAatgD,YAAS,8BAM3CokD,IACCtrC,GACDuT,IACC/R,GACD/V,KAAKg9C,wBACNzoC,GAAqBvU,KAAKg9C,wBAC1Bh9C,KAAK+/C,qCApEd,iDAyE8B,IAAD,EAIrB//C,KAAKjF,MAFK4sB,EAFW,EAEvBE,SAAYF,WAGd,OALyB,EAGvBq4B,iCAGOtxC,IAAOC,OAAOqV,UAEnB2D,EACKjZ,IAAOC,OAAOC,QAEhBF,IAAOC,OAAOqV,YApFzB,4CAuFyB,IAAD,EACoBhkB,KAAKjF,MAArC8sB,EADY,EACZA,SAAUtT,EADE,EACFA,kBAElB,OACEsT,EAAS3rB,OAAS+rB,MAClB1T,GACAsT,EAASF,aACRE,EAASD,sBACTC,EAASE,WA/FhB,wDAmGqC,IAAD,EAQ5B/nB,KAAKjF,MANPmpB,EAF8B,EAE9BA,iBACA25B,EAH8B,EAG9BA,oBACAmC,EAJ8B,EAI9BA,iCACAjqC,EAL8B,EAK9BA,kBACA2pC,EAN8B,EAM9BA,yBACA73B,EAP8B,EAO9BA,SAEIo4B,EAAiBpC,EAAsB,IAAM6B,EAC7CzD,EAA4BgE,GAAkBp4B,EAAS3rB,OAAS+rB,KAEhEhE,EACJg8B,IACClqC,EACGiqC,GAAoCC,EACpCD,GAEN,OACE/7B,GACAC,GACE,gBAACg4B,GAAD,KACE,gBAACF,GAAD,CACEz6C,UAAU,wBACVK,YAAU,wBACVq6C,0BAA2BA,GAE3B,gBAAC,GAAD,CACEp6C,QAAS7B,KAAK4/C,iBACd37B,SAAUA,GAAYC,EACtBrnB,SAAU,QAjIxB,yCAyIsB,IAAD,EAC+CmD,KAAKjF,MAA7DwZ,EADS,EACTA,kBAAmByrC,EADV,EACUA,iCAC3B,OAAOzrC,GAAqByrC,EACxBtxC,IAAOC,OAAOqV,UACdtV,IAAOC,OAAOC,UA7ItB,8CAgJ2B,IAAD,EAQlB5O,KAAKjF,MANP0uB,EAFoB,EAEpBA,cACAwzB,EAHoB,EAGpBA,uBACAI,EAJoB,EAIpBA,aACA1jC,EALoB,EAKpBA,eACAoE,EANoB,EAMpBA,iBACAhI,EAPoB,EAOpBA,kBAEI0mC,EACJhzB,EAAgB,KAAO9P,EAAiBoE,EAAmBk/B,GACvDX,EAAYt8C,KAAKu8C,sBACvB,OACGxmC,GACDumC,GACE,gBAACR,GAAD,CAAiBj/C,UAAW,GAC1B,gBAAC,IAAD,CACE+E,YAAU,cACV6M,OAAQzO,KAAKo9C,mBACbv7C,QAASw7C,EACTxgD,SAAU,EACV48B,WAAW,cAEVz5B,KAAKw8C,sBAAsBC,SAvKxC,GAA4CN,IAkO7BzuC,oBAtBf,SAAyBhO,EAAqBmtB,GAC5C,IAAMxW,EAAawW,EAAShF,SAAS3sB,GACrC,MAAO,CACLysB,WAAYwxB,YAAmBz5C,EAAO2W,GACtCuR,oBAAqBwxB,YAA4B15C,EAAO2W,GACxDwmC,iBAAkBU,YAAoB79C,EAAO2W,GAC7C9B,kBAAmBS,YAAmBtV,GACtCwkB,kBAAmBlP,YAAmBtV,GACtCsgD,iCAAkCE,YAA+BxgD,GACjEqe,iBAAkBiB,YAAoBtf,GACtCia,eAAgBgC,YAAsBjc,GACtCga,eAAgB8B,YAAgB9b,OAIpC,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmB0S,GAAiB5S,GAC7CC,aAAcC,YAAmBC,EAAoBH,MAI1CJ,CAA6C+xC,ICnO/CU,GAAb,YACE,WAAYplD,GAAqC,IAAD,+BAC9C,8CAAMA,KACD2E,MAAQ,CACXoiC,aAAa,EACbsc,oBAAqB,IAJuB,EADlD,wEASY,IAAD,EAaHp+C,KAAKjF,MAXP8sB,EAFK,EAELA,SACA4B,EAHK,EAGLA,cACAo0B,EAJK,EAILA,oBACAZ,EALK,EAKLA,uBACAyC,EANK,EAMLA,yBACA9/B,EAPK,EAOLA,eACArL,EARK,EAQLA,kBACAlG,EATK,EASLA,cACA0H,EAVK,EAULA,kBACAwoC,EAXK,EAWLA,YACA11B,EAZK,EAYLA,mBAGF,OACE,kBAAC,WAAD,KACG7oB,KAAKi+C,uBACN,kBAAC,GAAD,CACE/iD,GAAI2sB,EAAS3sB,GACbgB,KAAM2rB,EAAS3rB,KACf+pC,aAAa,EACbte,WACGpT,GAAqBsT,EAASF,YAC9BkB,IAAuBtU,GAAqBsT,EAASiB,wBAExDlJ,eAAgBA,IAEjB5f,KAAKw+C,kCACLx+C,KAAKy+C,iBACN,kBAAC,GAAD,CACEpwC,cAAeA,EACfwZ,SAAUA,EACVw1B,aAAcr9C,KAAKm5B,mBACnB3B,kBAAmBzhB,EAAoBwoC,EAAcv+C,KAAKjF,MAAMy8B,oBAChEylB,uBAAwBA,EACxByC,yBAA0BA,EAC1Bj2B,cAAeA,EACfo0B,oBAAqBA,EACrB9nC,kBAAmBA,IAGpB/V,KAAK0+C,qBAnDd,4CAwDyB,IAAD,EACoB1+C,KAAKjF,MAArC8sB,EADY,EACZA,SAAUtT,EADE,EACFA,kBAClB,OAAIsT,EAAS3rB,OAAS+rB,QAEX1T,GACFsT,EAASF,aA7DtB,uCAmEoB,IAAD,EAC6C3nB,KAAKjF,MAAzD8sB,EADO,EACPA,SAAUtT,EADH,EACGA,kBAAmBsU,EADtB,EACsBA,mBAOrC,OAAIhB,EAAS3rB,OAAS+rB,OALf1T,GACIsU,GAAsBhB,EAASiB,yBAQnC,kBAAC,GAAD,CAAUjB,SAAUA,EAAUiwB,SAAS,EAAMpT,MAAO,MAHlD,yCA5Eb,GAA4CgZ,IA4H7BjwC,mBACbC,aA1CF,SAAyBhO,EAAqBmtB,GAC5C,IAD2D,EACzC9K,YAAwBriB,GAG/BmtB,EAEFA,EAAS6M,MAAMjC,OAJhB/Z,EAFmD,EAEnDA,UAAWrH,EAFwC,EAExCA,WAMnB,MAAO,CACLoB,QAASmiB,YAAQl6B,GACjB25B,UAAWQ,YAAgBn6B,GAC3B2M,QAAS6yC,aAAWx/C,EAAOge,GAC3BmgC,oBAAqB0B,YAAuB7/C,EAAO2W,GACnDoT,cAAem0B,aAAiBl+C,EAAOge,EAAWrH,GAClD4mC,uBAAwBkC,aAAiBz/C,EAAOge,GAChDgiC,yBAA0BU,aAAuB1gD,GACjDmoB,SAAUu3B,YAAY1/C,EAAO2W,GAC7BsR,WAAYwxB,YAAmBz5C,EAAO2W,GACtCuR,oBAAqBwxB,YAA4B15C,EAAO2W,GACxDuJ,eAAgBkC,YAAcpiB,GAAO0G,KACrC6O,MAAO6F,YAAepb,GACtB2/C,cAAeA,aAAc3/C,EAAOge,GACpC4hC,eAAgBA,YAAe5/C,EAAO2W,GACtC9B,kBAAmBS,YAAmBtV,GACtCq5C,iBAAkBM,YAAoB35C,EAAO2W,GAC7CN,kBAAmBgM,YAAwBriB,GAC3Ci/C,kBAAmBa,YAA2B9/C,GAC9Cia,eAAgBgC,YAAsBjc,GACtCqe,iBAAkBiB,YAAoBtf,GACtCmpB,mBAAoBA,aAAmBnpB,OAI3C,SAA4BoO,GAC1B,MAAO,CAAEqpB,QAASnpB,YAAmB0S,GAAiB5S,MAQtDJ,CAGEorB,GAAuBqnB,IAR3B,SAA8BplD,GAC5B,OAAQA,EAAMskD,gBAAkBtkD,EAAMukD,oBC7J3Be,GAAb,sLAGI,OAD2BrgD,KAAKjF,MAAxBga,eAEC,kBAAC,GAA2B/U,KAAKjF,OAEnC,kBAAC,GAAiBiF,KAAKjF,WANlC,GAAmCgrB,aAmBpBrY,oBALf,SAAyBhO,GACvB,MAAO,CACLqV,eAAgBpH,YAAyBjO,OAN7C,WACE,MAAO,KAQMgO,CAA6C2yC,I,w0FCtBrD,IAOM7oC,GAAahb,UAAOmW,IAAIjW,OAAM,SAAC3B,GAAD,MAA6B,CACtE2c,IAAK3c,EAAMulD,QACXv5C,IAAKhM,EAAM0c,WAFajb,CAAH,MAyBV+jD,GAAkB/jD,UAAO2B,IAAIzB,MAAM,CAC9C,YAAa,oBADgBF,CAAH,MAGxB,SAAAzB,GAAK,OACJA,EAAM8kB,YACPriB,cADA,QASAwZ,gBAGSwpC,GAAahkD,UAAO2B,IAAIzB,MAAM,CACzC,YAAa,iBADWF,CAAH,MAOZ,SAAAzB,GAAK,OAAKA,EAAMoX,WAAN,sBAAkC0U,IAAIC,eAAtC,OAA4D,SAE1D+K,MAWV4uB,GAAajkD,UAAO2B,IAAIzB,OAAM,iBAAO,CAChD,YAAa,iBADWF,CAAH,KAOnBa,IAAM0iB,MAPa,OAYVlQ,GAAerT,UAAO2B,IAAV,KAIrBd,IAAM0iB,MAJe,OASZ2gC,GAAgBlkD,UAAO2B,IAAIzB,OAAM,iBAAO,CACnD,YAAa,oBADcF,CAAH,MAMf,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAKpDwjD,GAAcnkD,UAAO2B,IAAIzB,OAAM,iBAAO,CACjD,YAAa,kBADYF,CAAH,MAMb,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAKpDyjD,GAAoBpkD,UAAO2B,IAAIzB,MAAM,CAChD,YAAa,0BADkBF,CAAH,MAId,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAGzD0jD,GAAWrkD,UAAO2B,IAAIzB,MAAM,CACvC,YAAa,gBADSF,CAAH,MAIL,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,MAC3D,SAAAf,GAAK,OAAKA,EAAMma,SAAWna,EAAMma,SAAW,KAG1C4rC,GAAyBtkD,UAAO2B,IAAV,MAMtB4iD,GAAgBvkD,UAAO2B,IAAV,MAGT,SAAApD,GAAK,OAAKA,EAAMimD,eAAN,eAvIQ,IA2ItBC,GAAmBzkD,UAAO2B,IAAIzB,MAAM,CAC/C,YAAa,qBADiBF,CAAH,MAMhB0kD,GAAiB1kD,UAAO2B,IAAV,KACvBjB,KACO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAK7DE,IAAMC,OAPiB,OAYd6jD,GAAgB3kD,UAAO2B,IAAV,KACtBjB,KACO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAK7DE,IAAM0S,OAPgB,OCvEpBqxC,GAAuB,SAACrmD,GAC5B,IAAMsmD,EAAuC,GACvCC,EAAsB,SAACpmD,GAAgB,IAAD,EACpCqmD,IACH,UAAAh+C,SAASid,eAAT,oBAAqCtlB,WAArC,eAA4CsmD,YAAa,GD1F7B,GC4F/B,OADAH,EAAYE,EAAmB99C,YAAcvI,EACtCmmD,GAGT,OAAKtmD,EAAM4e,gBAcX5e,EAAMw0B,iBAAiB+Y,SAAQ,SAACzgB,GAC9By5B,EAAoBz5B,EAAS3sB,OAGxBmmD,IAjBLtmD,EAAMuS,SAASg7B,SAAQ,SAACj8B,GAClBA,EAAQ+F,mBAAqBrX,EAAM4a,2BACrC2rC,EAAoBj1C,EAAQnR,IAG9BmR,EAAQiK,UAAUgyB,SAAQ,SAACjyB,GACzBirC,EAAoBjrC,SAIjBgrC,IAULr6B,GAAS,SAACjsB,GAIT,IACG2+B,EAAiC3+B,EAAjC2+B,MAAOtK,EAA0Br0B,EAA1Bq0B,aAAc/iB,EAAYtR,EAAZsR,QACrBqR,EAAcgc,EAAMjC,OAApB/Z,UACR,OACE,kBAAC,GAAD,KACE,kBAACgjC,GAAD,gBAAwBtxB,EAAa1R,GAAa,GAClD,kBAACijC,GAAD,KAAct0C,EAAQqR,GAAWzI,SAKjCxF,GAAc,SAAC1U,GAId,IAEH2+B,EAGE3+B,EAHF2+B,MACA+nB,EAEE1mD,EAFF0mD,8CACAhtC,EACE1Z,EADF0Z,sCAEMiJ,EAAcgc,EAAMjC,OAApB/Z,UAGFxI,EAFyBusC,EAA8C/jC,GACnDjJ,EAAsCiJ,GACA,IAChE,OACE,kBAACkjC,GAAD,KACE,kBAACC,GAAD,CAAU3rC,SAAUA,MAKpBwsC,GAAiB,SAAC3mD,GAAD,OACrB,kBAACkmD,GAAD,KACE,kBAACC,GAAD,KACGzlD,YAAS,mBAAoB,CAAEwY,MAAOlZ,EAAMkZ,MAAQ,EAAGuiC,MAAOz7C,EAAMuS,SAAS9M,UAEhF,kBAAC2gD,GAAD,KAAgBpmD,EAAMsR,QAAQ4I,OAC9B,kBAAC,IAAD,CAAWoF,OAAQ,GAAIzO,QAAS,GAAKyG,MAAM,gBAgCzCurC,GAAmB,SACvBvnC,EACA+Y,EACAr0B,GAEA,OAAIA,EAAM4e,eACD5e,EAAMw0B,iBAAiBnZ,KAAI,SAAAyR,GAAQ,OAAIA,EAAS3sB,MAAIoJ,QAAQ+R,GAE9Dtb,EAAMuS,SAAS8hB,GAAcuyB,wBAAwBr9C,QAAQ+R,IAGhE8oC,GAAmB,SACvB/vB,EACAr0B,GAEA,OAAIA,EAAM4e,eACD5e,EAAMw0B,iBAAiB/uB,OAEzBzF,EAAMuS,SAAS8hB,GAAcuyB,wBAAwBnhD,QAGxDohD,GAAgB,SACpBvrC,EACAqH,EACAzJ,EACA8lC,EACAh/C,GAEA,IAEI8mD,EAFEC,EAAsB,GACpBnoC,EAA+C5e,EAA/C4e,eAAgB4V,EAA+Bx0B,EAA/Bw0B,iBAAkBjiB,EAAavS,EAAbuS,SAgB1C,OAdIqM,GAAkB4V,EAAiB/uB,OACrCqhD,EAAYtyB,EAAiBA,EAAiB/uB,OAAS,GAAGtF,IAE1DoS,EAASg7B,SAAQ,SAACj8B,GACZA,EAAQ+F,mBACV0vC,EAAa3hC,KAAK9T,EAAQnR,IAE5BmR,EAAQiK,UAAUgyB,SAAQ,SAACyZ,GACzBD,EAAa3hC,KAAK4hC,SAGtBF,EAAYC,EAAaA,EAAathD,OAAS,GAC/CshD,EAAaE,SAER,CACLtkC,YACArH,aACAioC,wBAAyBjoC,EACzBkoC,YAAaloC,IAAewrC,EAC5B/D,qBAAsBF,GAAiBvnC,EAAYpC,EAAOlZ,GAC1DijD,uBAAwBmB,GAAiBlrC,EAAOlZ,GAChDg/C,kCACArgB,MAAO3+B,EAAM2+B,MACb7yB,SAAU9L,EAAM8L,SAChBg+B,QAAS9pC,EAAM8pC,UAIbod,GAAsB,SAC1BlnD,EACAmnD,EACA7rC,EACAoT,EACApd,EACA+iB,GAEA,IAAM4xB,EAAiBjmD,EAAM4e,eACP,IAAlB8P,IAAwB1uB,EAAMs+B,UACZ,IAAlB5P,GACiB,IAAjB2F,IACC/iB,EAAQ+F,oBACRrX,EAAMs+B,YACNt+B,EAAMuV,sBAEX,OACE,kBAACywC,GAAD,CAAe1+C,IAAKgU,EAAY2qC,eAAgBA,EAAgB9lD,GAAImb,GAClE,yBAAK9U,UAAU,kBACZxG,EAAM4S,yBACL,kBAAC,GACKi0C,GACFvrC,EACAhK,EAAQnR,GACRk0B,GAAgB,EAChB8yB,EACAnnD,IAIJ,kBAAC,GACK6mD,GACFvrC,EACAhK,EAAQnR,GACRk0B,GAAgB,EAChB8yB,EACAnnD,IAKN,yBAAKG,GAAE,oBAAemb,QAmOf7I,mBACbC,YAAeC,aAxCjB,SAAyBhO,GACvB,MAAO,CACL+X,QAASgrB,IAAyB/iC,GAClC25B,UAAWoJ,IAAiC/iC,GAC5C4N,SAAUoU,aAAYhiB,GAAO0W,KAAI,SAAA/J,GAAO,uBACnCA,EADmC,CAEtCs1C,wBAAyBQ,aAA2BziD,EAAO2M,EAAQnR,SAErE6a,kBAAmB0sB,IAAyC/iC,GAC5D4Q,sBAAuBmyB,IAAuC/iC,GAC9DiO,yBAA0B80B,IAA0C/iC,GACpE0iD,oBAAqBC,aAAuB3iD,GAC5Cge,UAAW,SAACrH,GAAD,OAAwBisC,YAAa5iD,EAAO2W,IACvDksC,eAAgB,SAAClsC,GAAD,OAAwBisC,YAAa5iD,EAAO2W,IAC5D5B,sCAAuC,SAACiJ,GAAD,OACrCiE,aAAyCjiB,EAAOge,IAClD+jC,8CAA+C,SAAC/jC,GAAD,OAC7C8kC,aAAiD9iD,EAAOge,IAC1D0R,aAAc,SAAC1R,GAAD,OAAuB+kC,aAAgB/iD,EAAOge,IAC5DrR,QAAS,SAACqR,GAAD,OAAuBwhC,aAAWx/C,EAAOge,IAClDvL,WAAY2lB,aAA2Bp4B,GACvCuV,MAAO6F,YAAepb,GACtBgjD,oBAAqB,SAAChlC,GAAD,OAAuBglC,aAAoBhjD,EAAOge,IACvEkD,YAAaoB,YAAetiB,GAC5Bga,eAAgB+oB,IAAiC/iC,GACjDihB,YAAasB,YAAgBviB,GAC7B6vB,iBAAkB0I,YAAiBv4B,EAAOw4B,YAAWx4B,IACrDia,eAAgB8oB,IAAuC/iC,GACvDiW,0BAA2B8sB,IAA2C/iC,OAI1E,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmB0S,GAAiB5S,GAC7CC,aAAcC,YAAmBC,EAAoBH,MAKxCJ,EA9NY,SAAC3S,GAA+B,IAAD,EACpB4nD,mBAAsB,IADF,oBACnDtB,EADmD,KACtCuB,EADsC,OAEoBD,oBAAS,GAF7B,oBAEnD5I,EAFmD,KAElBmI,EAFkB,OAGdS,mBAAS,GAHK,oBAGnDE,EAHmD,KAGnCC,EAHmC,OAIQH,oBAAS,GAJjB,oBAInDI,EAJmD,KAIxBC,EAJwB,KAKpDC,EAAuBC,iBAC3BnoD,EAAMqnD,qBAnIgB,SAAC90C,GAAmB,IACrC61C,EADoC,aACpB71C,EADoB,MAE3C,OAAI61C,EAAa/wC,kBACR+wC,EAAajoD,GAEfioD,EAAa7sC,UAAU,GA8HC8sC,CAAkBroD,EAAMuS,WASvD+1C,qBAAU,WACR9/C,SAAS0R,MAAT,UAAoBxZ,YAAS,YAA7B,cAA8CV,EAAMka,UAGtDouC,qBAAU,WACR,GAAkC,KAA9BtoD,EAAMqnD,oBAA4B,CACpC,IAAMkB,EACkE,IAAtEvoD,EAAMq0B,cAbgBm0B,EAagBxoD,EAAMqnD,oBAZ5CrnD,EAAM2nD,oBAAoBa,GACrBA,EAEFxoD,EAAMwnD,eAAegB,KAW1BxoD,EAAMmmB,WAAWnmB,EAAMqnD,oBADOkB,GAAkBvoD,EAAMs+B,UAAY,IAAM,KAdjD,IAACkqB,EAiBpBC,EAAiBpC,GAAqBrmD,GAC5C6nD,EAAeY,GACXzoD,EAAMqnD,qBAAuBrnD,EAAMqnD,sBAAwBa,EAAqB9/B,UAClF8/B,EAAqB9/B,QAAUpoB,EAAMqnD,uBAEtC,CAACrnD,EAAMqnD,sBAEViB,qBAAU,WACR,IAAMG,EAAiBpC,GAAqBrmD,GAC5C6nD,EAAeY,GACftB,GAAmC,KAClC,CAACnI,IAEJ,IAAM1rC,EAAgBo1C,sBACpBC,MAAS,SAACrgD,GACR,IAAMsgD,EAAkB3rB,eAAyBrxB,QAAQ,IAAK,KAC1Dw9B,KAAejlC,KAAKykD,IAAoB9yB,KAAwB3xB,KAAKykD,KACvE5oD,EAAMsT,cAAchL,GAAK,KAE1BugD,KACH,IA+BIC,EAA0B,WAAO,IAC7BnqC,EAA2D3e,EAA3D2e,eAAgB3L,EAA2ChT,EAA3CgT,aAAc4S,EAA6B5lB,EAA7B4lB,YAAaC,EAAgB7lB,EAAhB6lB,YAE7CkjC,EADuBvgD,SAASid,eAAe,mBACPujC,UACxCC,EAhCgB,SAACC,GAA6B,IAAD,EAC7CC,EAAoBn8C,OAAOo8C,KAAK9C,GAAajrC,KAAI,SAAAiO,GAAQ,OAAI+/B,WAAW//B,MACxEggC,EAAsB9gD,SAASid,eAAe,mBAC9C8jC,EAAeJ,EAAkBA,EAAkB1jD,OAAS,GAClE,GAAI6jD,IAEA/7C,KAAKi8C,MAAMF,EAAoBG,aAAeH,EAAoBN,aAClEM,EAAoBI,cACEH,GACtB,OAAOjD,EAAYiD,GAIvB,IAAMI,EAAgBR,EAAkBzM,QAAO,SAACC,EAAKiN,GACnD,OAAIA,GAAOV,GAAmBvM,EAAMuM,EAC3BU,EAEFjN,IACNwM,EAAkB,IAEfU,GAAU,UAAArhD,SAASid,eAAe,0BAAxB,eAA4CujC,YAAa,EACnEc,EAAkBthD,SAASid,eAAe6gC,EAAYqD,IAI5D,OAF4BE,KADZ,OAAGC,QAAH,IAAGA,OAAH,EAAGA,EAAiBrD,YACkB,GAEzBH,EAAYqD,GAAiBzB,EAAqB9/B,QAOpD2hC,CAAgBhB,GAQ3C,GANAhB,EAAkBgB,GAClBd,EACEjoD,EAAM2nD,oBAAoBsB,IACxBF,GA3MkC,SAAC5oD,GACzC,IAAM6pD,EAAuBxhD,SAASid,eAAetlB,GACrD,IAAK6pD,EACH,OAAO,EAET,IAAMC,EAAyBD,EAAqBvX,iBAAiB,OAAO,GAC5E,OAAOwX,EACHA,EAAuBxD,UAAYwD,EAAuBR,aAAe,EACzE,EAmM2BS,CAAkCjB,IAG3DA,IAAuBf,EAAqB9/B,QAG9C,GAFA8/B,EAAqB9/B,QAAU6gC,EAE3BjpD,EAAM2nD,oBAAoBO,EAAqB9/B,SACjD9U,EAAc+S,aAAwB6hC,EAAqB9/B,cACtD,CACL,IAAMzF,GACJ3iB,EAAMuS,SAASipB,MACb,SAAClqB,GAAD,OAAkBA,EAAQiK,UAAUhS,QAAQ2+C,EAAqB9/B,UAAY,MAC1EpoB,EAAMuS,SAAS,IACpBpS,GAEE+nD,EAAqB9/B,UACvBpoB,EAAMo8B,QAAQhW,aAAa8hC,EAAqB9/B,SAChD9U,EAAc4S,aAAevD,EAAWulC,EAAqB9/B,WAE3DzJ,GACCkH,IAAgB7R,IAAY8R,aAAeD,IAAgB7R,IAAY+R,QAExE/S,EAAagT,gBAAgBJ,GAC7B5S,EAAaiT,iBAOf1T,EAAyBvS,EAAzBuS,SAAU6E,EAAepX,EAAfoX,WAEZ+yC,EAAmB,SAAC74C,EAAc4H,GAAf,OACvB,yBAAK5R,IAAKgK,EAAQnR,IAChB,kBAACulD,GAAD,KACG1lD,EAAMs+B,WAAuB,IAAVplB,GAClB,kBAAC,GAAD,CAAYwD,QAAS1c,EAAM0c,QAAS6oC,QAAS7kD,YAAS,sBAEvDV,EAAM4a,2BAlQiB,SAACtJ,EAAcsN,GAAf,OAC9BtN,EAAQ+F,oBACPuH,GACC,kBAACmnC,GAAD,CAAwBz+C,IAAKgK,EAAQnR,GAAIA,GAAImR,EAAQnR,IACnD,kBAAC,GAAD,CAAmBqG,UAAU,oBAAoBmc,UAAWrR,EAAQnR,KACpE,yBAAKA,GAAE,oBAAemR,EAAQnR,OA6PQiqD,CAAwB94C,EAAStR,EAAM4e,gBAC1E5e,EAAMuV,wBAA0BjE,EAAQ+F,mBACvC,kBAAC,GAAD,CAAgB9E,SAAUvS,EAAMuS,SAAUjB,QAASA,EAAS4H,MAAOA,IAEpE5H,EAAQiK,UAAUF,KAAI,SAAC2rC,EAAmBqD,GAApB,OACrBnD,GACElnD,EACAmnD,EACAH,EACAqD,EACA/4C,EACA4H,SAsBV,OACE,kBAACssC,GAAD,CACErlD,GAAI2jB,IAAoBwmC,gBACxBxlC,YAAY,EACZylC,SAAU,kBAAMzB,OAEd9oD,EAAMuV,uBAA4C,IAAnBuyC,IAAyBE,GACxD,kBAACvC,GAAD,CAAYruC,WAAYA,GACtB,kBAAC,GAAD,CAAQunB,MAAO3+B,EAAM2+B,MAAOtK,aAAcr0B,EAAMq0B,aAAc/iB,QAAStR,EAAMsR,UAC7E,kBAAC,GAAD,CACEqtB,MAAO3+B,EAAM2+B,MACbjlB,sCAAuC1Z,EAAM0Z,sCAC7CgtC,8CACE1mD,EAAM0mD,kDAKZ1mD,EAAM4e,gBACNrM,EAAS8I,KAAI,SAAC/J,EAAc4H,GAAf,OAAiCixC,EAAiB74C,EAAS4H,MACzElZ,EAAM4e,gBAlCT,6BACE,kBAAC8mC,GAAD,KACG1lD,EAAMs+B,WACL,kBAAC,GAAD,CAAY5hB,QAAS1c,EAAM0c,QAAS6oC,QAAS7kD,YAAS,sBAEvDV,EAAMw0B,iBAAiBnZ,KAAI,SAACmvC,EAAmBtxC,GAApB,OAC1BguC,GAAoBlnD,EAAOmnD,EAAoCqD,EAAarqD,GAAI+Y,EAAO,CACrF/Y,GAAIqqD,EAAa7nC,uBCvbhB8nC,GAAb,sLAGI,OAD8BxlD,KAAKjF,MAA3Bgb,kBAEC,kBAAC,GAAkB/V,KAAKjF,OAE1B,kBAAC,GAAkBiF,KAAKjF,WANnC,GAAkCgrB,aAoBnBrY,oBANf,SAAyBhO,GACvB,MAAO,CACLqW,kBAAmBgM,YAAwBriB,GAC3CqV,eAAgBpH,YAAyBjO,OAP7C,WACE,MAAO,KASMgO,CAA6C83C,ICa/CC,GAAb,8MACEC,WAAa,SAACnC,GAAD,OAAuBhgD,SAASid,eAAe+iC,IAD9D,EAGEoC,iBAAmB,SAACpC,GAClB,IAAMhjC,EAA8B,EAAKmlC,WAAWnC,GACpD,OAAIhjC,EACKA,EAAQitB,iBAAiB,MAAM,GAEjC,MARX,EAWEoY,eAAiB,WAAO,IAAD,EAEuB,EACnB,EAM4B,EAC5B,EAMkB,EAhBtB,EACgD,EAAK7qD,MADrD,IACbgb,yBADa,SACclP,EADd,EACcA,SAAUu7C,EADxB,EACwBA,oBAC7C,OAAIje,KAAejlC,KAAK2H,EAASq9B,UAC3BnuB,EACF,UAAO,EAAK4vC,iBAAiBvD,UAA7B,aAAO,EAA4C/hC,QAErD,UAAO,EAAKqlC,WAAW7mC,IAAoBq/B,sBAA3C,aAAO,EAAoD79B,QAGzDwQ,KAAwB3xB,KAAK2H,EAASq9B,UACpCnuB,EACF,UAAO,EAAK4vC,iBAAiBvD,UAA7B,aAAO,EAA4C/hC,QAErD,UAAO,EAAKqlC,WAAW7mC,IAAoB2a,gCAA3C,aAAO,EAA8DnZ,QAGnEwlC,KAAc3mD,KAAK2H,EAASq9B,UAC9B,UAAO,EAAKwhB,WAAW7mC,IAAoBuhB,oBAA3C,aAAO,EAAkD/f,QAG3D,UAAO,EAAKqlC,WAAW7mC,IAAoBq/B,sBAA3C,aAAO,EAAoD79B,SA/B/D,0EAkCY,IAAD,SAOHrgB,KAAKjF,MALPioC,EAFK,EAELA,wBACAnjB,EAHK,EAGLA,WACAwZ,EAJK,EAILA,UAJK,IAKLtjB,yBALK,SAMLyL,EANK,EAMLA,cAEF,OACE,kBAAC,WAAD,MACIA,GAAiB,kBAACC,GAAA,EAAD,CAAe5f,QAAS,kBAAM,EAAK+jD,oBACtD,kBAAC3iB,GAAD,CACEpjB,WAAYA,EACZmjB,wBAAyBA,GAEzB,kBAAC,GAAD,OAEF,kBAACF,GAAD,CACEE,wBAAyBA,EACzBnhC,QAAS7B,KAAKjF,MAAMo8B,QAAQE,8BAC5B3B,YAAY,IAGd,kBAAC,KAAD,CACEowB,OAAQ,gBAAGj/C,EAAH,EAAGA,SAAH,OACN,kBAAC,GAAD,CACEgZ,WAAYA,EACZmjB,wBAAyBA,EACzBn8B,SAAUA,EACVkP,kBAAmBA,GAEnB,kBAAC,GAAD,KACE,kBAACutB,GAAD,KACE,kBAACC,GAAD,CACEP,wBAAyBA,EACzB3J,UAAWA,EACXtjB,kBAAmBA,EACnB0tB,cAAelgC,SAASwiD,gBAAgBtB,aACxCjhB,gBACEztB,IACCouB,KAAejlC,KAAK2H,EAASq9B,WAC5BrT,KAAwB3xB,KAAK2H,EAASq9B,YAG1C,kBAAC,GAAD,CAAQr9B,SAAUA,GAChB,kBAAC,KAAD,CACEm/C,OAAK,EACLr7B,KAAMkN,IACN4G,UAAW1oB,EAAoByvC,GAAetsB,KAEhD,kBAAC,KAAD,CAAO8sB,OAAK,EAACr7B,KAAMgN,IAAe8G,UAAW+mB,KAE7C,kBAAC,KAAD,CAAOQ,OAAK,EAACr7B,KAAM1b,IAAcwvB,UAAWb,KAC5C,kBAAC,KAAD,CAAOooB,OAAK,EAACr7B,KAAK,IAAI8T,UAAWxF,oBAvFvD,GAAoClT,aAmHrBvY,mBACbC,YAAeC,aAZjB,SAAyBhO,GACvB,MAAO,CACLq4B,gBAAiBr4B,EAAMumD,IAAIluB,gBAC3BiL,wBAAyBlL,aAA2Bp4B,GACpDmgB,WAAYiC,YAAcpiB,GAC1B25B,UAAWQ,YAAgBn6B,GAC3BqW,kBAAmBgM,YAAwBriB,GAC3C0iD,oBAAqBC,aAAuB3iD,GAC5C8hB,cAAeU,aAAmBxiB,OAZtC,SAA4BoO,GAC1B,MAAO,CAAEqpB,QAASnpB,YAAmBmpB,EAASrpB,MAe/BJ,CAA6C+3C,M,ubC/JvD,IAAMS,GAAO1pD,UAAO2pD,KAAKzpD,OAAM,SAAC3B,GAAD,MAAuB,CAC3DG,GAAIH,EAAMqrD,aADQ5pD,CAAH,MAUJ6pD,GAAqB7pD,UAAO2B,IAAV,MCiBlBmoD,GAAb,YAEE,WAAYvrD,GAAuB,IAAD,+BAChC,8CAAMA,KAFRwrD,eACkC,IAoClCvnD,SAAW,SAACD,GACVA,EAAMI,OAAOgB,UAAUqmD,IAAI,WAC3B,EAAKjnD,SAAL,gBAAiBR,EAAMI,OAAOxC,KAAOoC,EAAMI,OAAOC,SAtClB,EAyClCqnD,uBAAyB,SAAC1nD,EAAY2nD,GACpC3nD,EAAMuD,iBADgD,MAEjB,EAAKvH,MAAlC4rD,EAF8C,EAE9CA,YAAa/nD,EAFiC,EAEjCA,YACjBhB,EAA2D,GAC/D,IAAK,IAAMyD,KAAO,EAAKklD,UACrB3oD,EAA4B,gBACvBA,EADuB,gBAEzByD,EAAM,EAAKulD,2BAA2B,EAAKL,UAAUllD,MAQ1D,IAAK,IAAMA,KAJX,EAAK9B,SAAS,CACZ3B,iCAGgBA,EAChB,IAAKA,EAA6ByD,GAChC,OAIuB,oBAAhBslD,GACTA,IAGG/nD,GACH8nD,EAAS3nD,EAAD,gBACH,EAAKW,MADF,CAENmnD,MAAO,EAAKnnD,MAAMmnD,MAAM3kD,cACxB4kD,gBAAiB,EAAK/rD,MAAM+rD,oBAtEA,EA2ElCF,2BAA6B,SAAC7L,GAC5B,QAAOA,GAAOA,EAAK16C,SAAS0mD,OA5EI,EA+ElCC,wBAA0B,SAACjM,GACzB,IAAMkM,IAAYlM,GAAOA,EAAK16C,SAAS0mD,MACvC,EAAKxnD,SAAS,CAAE3B,6BAA6B,gBAAIm9C,EAAKp+C,KAAOsqD,MAjF7B,EAoFlCC,QAAU,SAAC3mC,GACLA,IACF,EAAKgmC,UAAUhmC,EAAQ5jB,MAAQ4jB,GAE7B,EAAKxlB,MAAMosD,cACb,EAAKpsD,MAAMosD,aAAa,EAAKZ,YAtF/B,EAAK7mD,MAAQ,CACXmnD,MAAO,GACPlqD,KAAM,GACNyqD,SAAU,GACVC,UAAW,GACXzpD,6BAA8B,CAC5BjB,MAAM,EACNkqD,OAAO,EACPO,UAAU,EACVC,WAAW,GAEbd,UAAW,GACXO,iBAAiB,EACjBQ,mBAAmB,GAErB,EAAKf,UAAY,GAlBe,EAFpC,mFAuBuB,IAAD,EACcvmD,KAAKjF,MAA7BwsD,EADU,EACVA,UAAW/oC,EADD,EACCA,UAEf+oC,GAAa/oC,IACfxe,KAAKT,SAAS,CACZsnD,MAAOU,GAAa,GACpB5qD,KAAM6hB,GAAY,KAItBxe,KAAKT,SAAS,CACZgnD,UAAWvmD,KAAKumD,cAlCtB,+BA+FY,IAAD,OACCA,EAAcvmD,KAAKN,MAAnB6mD,UADD,EAYHvmD,KAAKjF,MATPysD,EAHK,EAGLA,OACAd,EAJK,EAILA,SACAe,EALK,EAKLA,yBACAX,EANK,EAMLA,gBACA3O,EAPK,EAOLA,cACAuP,EARK,EAQLA,oCACA9oD,EATK,EASLA,YACA+oD,EAVK,EAULA,eACAL,EAXK,EAWLA,kBAEIvsD,EAAQ,CACZ6sD,SAAUrB,EAAUM,MACpB7nD,SAAUgB,KAAKhB,SACfkoD,QAASlnD,KAAKknD,QACdF,wBAAyBhnD,KAAKgnD,wBAC9BppD,6BAA8BoC,KAAKN,MAAM9B,6BACzCipD,MAAO7mD,KAAKN,MAAMmnD,MAClBa,sCACAD,2BACAX,kBACAloD,cACA+oD,iBACAL,qBAEF,OACE,kBAACpB,GAAD,CACEE,UAAWoB,EACXd,SAAQ,+GAAE,SAAA3nD,GACR,EAAK0nD,uBAAuB1nD,EAAO2nD,MAErCmB,YAAU,GAET1P,EAAcp9C,QAlIvB,GAA8BgrB,aA+IfrY,oBAPf,SAAyBhO,GACvB,MAAO,CACL6nD,UAAWO,aAASpoD,GACpB8e,SAAUW,aAAQzf,MAIPgO,CAAyB44C,I,WC7J3ByB,GAAb,sLAKY,IAAD,EAYH/nD,KAAKjF,MAVPwsD,EAFK,EAELA,UACAV,EAHK,EAGLA,MACAjoD,EAJK,EAILA,YACAopD,EALK,EAKLA,iBACAhpD,EANK,EAMLA,SACAkoD,EAPK,EAOLA,QACAjmD,EARK,EAQLA,UACArD,EATK,EASLA,6BACAwD,EAVK,EAULA,QACApE,EAXK,EAWLA,QAEF,OACE,gBAAC6B,GAAA,EAAD,CACEgC,QAAQ,QACR3E,KAAMuE,IAAWC,MACjBQ,SAAU,SAACmjC,GAAD,OAAe6iB,EAAQ7iB,IACjC1nC,KAAK,QACLmE,UAAWrF,YAAS,WACpBwE,aAAcsnD,EACd3qD,YAAY,mBACZG,aAAa,YACbiC,SAAQ,+GAAE,SAAC4F,GAAD,OAAY5F,EAAS4F,MAC/B5D,WAAW,EACXD,WAAYinD,EACZpqD,6BAA8BA,EAC9BqD,UAAWA,EACXf,OAAQ8nD,EAAmB,kBAAMA,EAAiBnB,GAAS,KAAM,kBAAM,MACvEjoD,YAAaA,EACbwC,QAAO,+GAAE,SAACwD,GAAD,OAAYxD,EAAQwD,MAC7B5H,QAASA,QApCjB,GAAgCuF,aAAnBwlD,GACJvlD,aAAe,CACpBpB,QAAS,kBAAM,OAwCJ2mD,UCxBAE,GAvBf,sLACY,IAAD,EACwEjoD,KAAKjF,MAA5EyjB,EADD,EACCA,SAAUxf,EADX,EACWA,SAAUkoD,EADrB,EACqBA,QAAStpD,EAD9B,EAC8BA,6BAA8BwD,EAD5D,EAC4DA,QAEnE,OACE,gBAACvC,GAAA,EAAD,CACEgC,QAAQ,OACR3E,KAAMuE,IAAWE,KACjBO,SAAU,SAACmjC,GAAD,OAAe6iB,EAAQ7iB,IACjC1nC,KAAK,OACLmE,UAAWrF,YAAS,UACpBwE,aAAcue,EACd5hB,YAAY,WACZoC,SAAUA,EACVgC,WAAW,EACXhE,QAAQ,2CACRY,6BAA8BA,EAC9BwD,QAASA,QAjBjB,GAA+BmB,aC+BhB2lD,GA9Bf,sLACY,IAAD,EAQHloD,KAAKjF,MANPiE,EAFK,EAELA,SACAkoD,EAHK,EAGLA,QACAtpD,EAJK,EAILA,6BACAZ,EALK,EAKLA,QACAmE,EANK,EAMLA,sBACAC,EAPK,EAOLA,QAGF,OACE,gBAACvC,GAAA,EAAD,CACEgC,QAAQ,WACR3E,KAAMuE,IAAWG,SACjBM,SAAU,SAACmjC,GAAD,OAAe6iB,EAAQ7iB,IACjC1nC,KAAK,WACLC,YAAanB,YAAS,cACtBqF,UAAWrF,YAAS,cACpBsB,aAAa,eACbiC,SAAUA,EACVmC,sBAAuBA,EACvBnE,QAASA,EACTY,6BAA8BA,EAC9BwD,QAASA,QAxBjB,GAAmCmB,a,w9ECC5B,IAAM5D,GAAiBnC,UAAO2B,IAAV,MACR,SAAApD,GAAK,OAAIA,EAAM4G,QAMrBwmD,GAAqB3rD,kBAAOsQ,IAAPtQ,CAAH,KAC3BkC,KACkB,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aACvC,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAO6U,kBAQnCrT,IAAMC,OAXqB,OAsBP,SAAAvC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAGtD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAItD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAItD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,cAetDssD,GAAoB5rD,UAAOC,MAAMC,MAAM,CAClDR,KAAM,WACNe,UAAU,GAFqBT,CAAH,MAQjB6rD,GAAiB7rD,UAAOsB,MAAV,MAQdwqD,GAAoB9rD,UAAO2B,IAAV,KAO1Bd,IAAMC,OAPoB,OAU1B,SAAAvC,GAAK,OACkC,IAAvCA,EAAM6C,8BACNJ,cADA,KAGM+qD,aAAM,aAAc,GAAK,QAG/B/qB,KAGE3wB,MAKgB,SAAA9R,GAAK,OACoB,IAAvCA,EAAM6C,8BAA2C7C,EAAMytD,UAEnD7sD,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,IAD7CpC,EAAMa,MAAMC,OAAO4B,iBAMvBgrD,KAII57C,MACc,SAAA9R,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAG9C,SAAAf,GAAK,OACJA,EAAMytD,WACPhrD,cADA,KAGQirD,QASZJ,GAIEhrD,IAAMC,OA1DkB,O,02ECtEvB,IAAMgrD,GAAoB9rD,UAAO2B,IAAV,KAK1Bq/B,KAIE3wB,MAGoB,SAAA9R,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OACxE,SAAApC,GAAK,OACLA,EAAMqoB,UACNroB,EAAMqoB,SAASroB,MAAMssC,UACrB7pC,cAFA,KAGsBzC,EAAMa,MAAMC,OAAO8B,aACvB5C,EAAMa,MAAMC,OAAO8B,gBAIvC+qD,KACExrD,IAmBAwrD,KAIA77C,MACgB,SAAA9R,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,gBAE1C,SAAA5C,GAAK,OACJA,EAAMqoB,SAASroB,MAAMssC,UACtB7pC,cADA,KAEIirD,SASDE,GAAensD,kBAAOsQ,IAAPtQ,CAAH,KACrBkC,KACkB,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aACvC,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAO6U,kBAKnCrT,IAAMC,OARe,OAmBD,SAAAvC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAGtD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAItD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAItD,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,cAItDw9C,GAAmB98C,UAAO2B,IAAV,MAWhByqD,GAAcpsD,kBAAO8B,KAAM5B,OAAM,SAAA3B,GAC5C,MAAO,KADkByB,CAAH,KAGpBU,KAKS,SAAAnC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI5B0rD,GAAqBrsD,UAAOiU,KAAV,MAMlBq4C,GAActsD,UAAO2B,IAAV,MCjGX4qD,GAAb,YAGE,WAAYhuD,GAAwB,IAAD,+BACjC,8CAAMA,KAHR+oB,mBAEmC,IAanC6iC,YAAc,WACZ,EAAKpnD,SAAS,CAAEkoD,0BAA0B,KAdT,EAiBnCuB,kBAAoB,SAAOpB,EAAeZ,GAAtB,iBAAAtjD,EAAAmL,OAAA,mDACZo6C,IAAarB,GAAWA,EAASvnD,SAAS0mD,MAChDC,EAAwBY,GAEnBqB,EAJa,mEAAAvlD,EAAA,MAQCq4B,KAAgBmtB,cAActB,EAASxoD,MAAM8C,gBAR9C,OAQdsN,EARc,OASlB,EAAKjQ,SAAS,CAAEkoD,yBAA0Bj4C,IAAW25C,OATnC,sCAjBe,EAmEnChR,cAAgB,SAACp9C,GAAgB,IAAD,EAC6C,EAAKA,MAAxEonC,EADsB,EACtBA,2BAA4BinB,EADN,EACMA,cAAe7B,EADrB,EACqBA,UAAW/oC,EADhC,EACgCA,SAE5DopC,EAQE7sD,EARF6sD,SACAF,EAOE3sD,EAPF2sD,oCACA1oD,EAMEjE,EANFiE,SACAkoD,EAKEnsD,EALFmsD,QACAtpD,EAIE7C,EAJF6C,6BACAopD,EAGEjsD,EAHFisD,wBACAS,EAEE1sD,EAFF0sD,yBACAX,EACE/rD,EADF+rD,gBAGF,OACE,gBAACT,GAAD,KACE,gBAAC1nD,GAAD,CAAgBgD,KAAM,IACpB,gBAAC,GAAD,CACE4lD,UAAWA,EACXvoD,SAAUA,EACVkoD,QAASA,EACTjmD,UAAWxF,YAAS,uBACpBmC,6BAA8BA,EAA6BipD,MAC3DzlD,QAASgoD,MAGXjnB,GACA,gBAACxjC,GAAD,CAAgBgD,KAAM,IACpB,gBAAC,GAAD,CACE6c,SAAUA,EACVxf,SAAUA,EACVkoD,QAASA,EACTtpD,6BAA8BA,EAA6BjB,KAC3DyE,QAASgoD,KAIdjnB,GACC,gBAACxjC,GAAD,CAAgBgD,KAAM,IACpB,gBAAC,GAAD,CACE3C,SAAUA,EACVkoD,QAASA,EACTtpD,6BAA8BA,EAA6BwpD,SAC3DpqD,QAAQ,OACRmE,uBAAuB,EACvBC,QAASgoD,IAEX,gBAAC,GAAD,KACG,EAAKC,kBACJznB,IAAQ0nB,QACR7B,EACAhsD,YAAS,sCACT,EAAK8tD,2BAA2B3B,EAAUZ,IAC1C,EACA,EAAKL,aAEP,gBAAC,GAAD,KACE,gBAAC,IAAD,CACE6C,UAAU,EACV9sC,KAAMjhB,YAAS,iBACf4rC,UAAWyf,EACX2C,gBAAe3C,EACfnlD,KAAM4mB,IAAMC,MACZ3rB,SAAU,EACVgF,QAAS,kBAAM,EAAKtC,SAAS,CAAEunD,iBAAkBA,KACjD/kD,UAAW,SAAChD,GACN,MAAAA,EAAMsD,KAA6B,UAAdtD,EAAMsD,MAC7BtD,EAAMuD,iBACN,EAAK/C,SAAS,CAAEunD,iBAAkBA,WAQ/C,EAAKuC,kBACJznB,IAAQC,UACR6lB,EACA,EAAKgC,yCACL,EAAKC,qBACL,KAnJ2B,EA2KnCN,kBAAoB,SAClB75C,EACAsyB,EACA/E,EACA6sB,EACAplC,GALkB,IAMlBmiC,EANkB,uDAMC,kBAAM,MANP,OAQlB,gBAAC,IAAD,CACEr6B,gBAAiB,MACjB7d,OAAQe,EACR4U,eAAgBuiC,EAChB7kB,YAAaA,EACb/E,QAASA,EACTgF,cAAe6nB,EACfC,mBAAoB,GACpBC,aAAc,QACdtlC,YAAaA,KA1Lf,EAAKV,cAAgB/oB,EAAMa,MAC3B,EAAK8D,MAAQ,CACXonD,iBAAiB,EACjBW,0BAA0B,GALK,EAHrC,0FAgC6BG,EAAeZ,GAA+B,IAAD,OACtE,OACE,gBAAC8B,GAAD,KACE,gBAAC,IAAD,CACE5sD,KAAMwS,IAAOq7C,KAAKr7C,OAClBD,OAAQC,IAAOC,OAAOq7C,OACtBroD,KAAM4mB,IAAMC,MACZ3mB,QAAS,kBAAM,EAAKmnD,kBAAkBpB,EAAUZ,IAChD9mD,OAAQF,KAAK2mD,YACb/kD,YAAU,0BAETnG,YAAS,qBA3CpB,+DAkDI,OACE,gBAACotD,GAAD,KACE,gBAACD,GAAD,CAAahtD,MAAOoE,KAAK8jB,cAAexR,WAAW,QAChD7W,YAAS,wBAEZ,gBAACmtD,GAAD,CAAahtD,MAAOoE,KAAK8jB,cAAexR,WAAW,QAChD7W,YAAS,0BAxDpB,0CA+DI,OACE,gBAACktD,GAAD,CAAcl6C,OAAQC,IAAOC,OAAOC,QAAS6qB,WAAW,cAAcv9B,KAAK,UACxET,YAAS,qBAjElB,+BA4JY,IAAD,EAC+CuE,KAAKN,MAAnD+nD,EADD,EACCA,yBAA0BX,EAD3B,EAC2BA,gBAD3B,EAEyE9mD,KAAKjF,MAA7E2rD,EAFD,EAECA,SAAUc,EAFX,EAEWA,OAAQE,EAFnB,EAEmBA,oCAAqCP,EAFxD,EAEwDA,aAE/D,OACE,gBAAC,GAAD,CACEL,gBAAiBA,EACjBW,yBAA0BA,EAC1BD,OAAQA,EACRd,SAAUA,EACVgB,oCAAqCA,EACrCf,YAAa3mD,KAAK2mD,YAClBxO,cAAen4C,KAAKm4C,cACpBgP,aAAcA,QAzKtB,GAA+B5kD,aAAlBwmD,GAYJvmD,aAAe,CACpBklD,qCAAqC,GA+L1B5sD,2BAAU4S,aARzB,SAAyBhO,GACvB,MAAO,CACL6nD,UAAWO,aAASpoD,GACpB8e,SAAUW,aAAQzf,GAClByiC,2BAA4BA,YAA2BziC,MAIlCgO,CAAyBq7C,K,kmECjPlD,IAAMkB,GACI,CACNC,SAAU,UACVC,SAAU,UACVC,OAAQ,WAIC/iC,GAAc7qB,kBAAOyB,KAAPzB,CAAH,MAEb,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAQpDktD,GAAc7tD,UAAOkH,EAAEhH,OAAM,SAAC3B,GAAD,MAAyB,CACjEsJ,KAAMtJ,EAAMsJ,KACZ,aAActJ,EAAM0D,aAFKjC,CAAH,MAQF,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAC5B,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAUxE,SAAApC,GAAK,MACU,aAAfA,EAAM4B,KACFa,cADJ,KAI4BysD,GAAiBC,SAE7B7iC,GAAwBA,GACvB4iC,GAAiBC,SAGNvuD,YAAesuD,GAAiBC,SAAU,KAGlE1sD,cAbJ,SAcA,SAAAzC,GAAK,MACU,aAAfA,EAAM4B,KACFa,cADJ,KAI4BysD,GAAiBE,SAE7B9iC,GAAwBA,GACvB4iC,GAAiBE,SAGNxuD,YAAesuD,GAAiBE,SAAU,KAGlE3sD,cAbJ,SAcA,SAAAzC,GAAK,MACU,WAAfA,EAAM4B,KACFa,cADJ,KAI4BysD,GAAiBG,OAE7B/iC,GAAwBA,GACvB4iC,GAAiBG,OAGNzuD,YAAesuD,GAAiBG,OAAQ,KAGhE5sD,cAbJ,SAgBS8sD,GAAuB9tD,UAAO2B,IAAV,MAKpBosD,GAAa/tD,kBAAO8B,KAAP9B,CAAH,KACnBU,KAIO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAMpDqtD,GAAqBhuD,UAAO2B,IAAV,MCrDhBssD,GAtCf,sLACY,IACAx1C,EAAUjV,KAAKjF,MAAfka,MACR,OACE,gBAAC,WAAD,KACE,gBAACu1C,GAAD,KACE,gBAAC9sB,GAAA,EAAD,CAAW9xB,QAAS,IAAMyG,MAAM,cAChC,gBAACk4C,GAAD,CAAYj4C,WAAW,QAAQ2C,GAC/B,gBAACyoB,GAAA,EAAD,CAAW9xB,QAAS,IAAMyG,MAAM,eAElC,gBAACi4C,GAAD,KACE,gBAACD,GAAD,CACE1tD,KAAK,WACL8B,UAAWhD,YAAS,kBACpB4I,KAAM03B,KAAgB2uB,yBAAyB,aAE/C,gBAACrjC,GAAD,CAAa1qB,KAAK,cAEpB,gBAAC0tD,GAAD,CACE1tD,KAAK,WACL8B,UAAWhD,YAAS,kBACpB4I,KAAM03B,KAAgB2uB,yBAAyB,aAE/C,gBAACrjC,GAAD,CAAa1qB,KAAK,cAEpB,gBAAC0tD,GAAD,CACE1tD,KAAK,SACL8B,UAAWhD,YAAS,iBACpB4I,KAAM03B,KAAgB2uB,yBAAyB,WAE/C,gBAACrjC,GAAD,CAAa1qB,KAAK,kBA9B9B,GAAiC4F,a,+BCf7BooD,GAAW5iD,OAAO6iD,QAAU,SAAUzrD,GAAU,IAAK,IAAIiG,EAAI,EAAGA,EAAI6F,UAAUzK,OAAQ4E,IAAK,CAAE,IAAIylD,EAAS5/C,UAAU7F,GAAI,IAAK,IAAI/C,KAAOwoD,EAAc9iD,OAAOK,UAAU2jC,eAAe9nC,KAAK4mD,EAAQxoD,KAAQlD,EAAOkD,GAAOwoD,EAAOxoD,IAAY,OAAOlD,GAIvP,SAAS2rD,GAAgB5f,EAAU6f,GAAe,KAAM7f,aAAoB6f,GAAgB,MAAM,IAAI7gD,UAAU,qCAEhH,SAAS8gD,GAA2BhoD,EAAMiB,GAAQ,IAAKjB,EAAQ,MAAM,IAAIioD,eAAe,6DAAgE,OAAOhnD,GAAyB,kBAATA,GAAqC,oBAATA,EAA8BjB,EAAPiB,EASlO,IAAIinD,GAAkB,SAAyBnsD,GAC7C,SAAUA,EAAMosD,SAAWpsD,EAAMqsD,QAAUrsD,EAAMssD,SAAWtsD,EAAMusD,WAOhEC,GAAO,SAAUC,GAGnB,SAASD,IACP,IAAIE,EAAOC,EAEXZ,GAAgB9qD,KAAMurD,GAEtB,IAAK,IAAII,EAAO1gD,UAAUzK,OAAQ6J,EAAO4L,MAAM01C,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC3EvhD,EAAKuhD,GAAQ3gD,UAAU2gD,GAGzB,OAAeH,EAASC,EAAQV,GAA2BhrD,KAAMwrD,EAAiBvnD,KAAKuG,MAAMghD,EAAkB,CAACxrD,MAAM6rD,OAAOxhD,KAAiBqhD,EAAMI,YAAc,SAAU/sD,GAG1K,GAFI2sD,EAAM3wD,MAAM8G,SAAS6pD,EAAM3wD,MAAM8G,QAAQ9C,IAExCA,EAAMgtD,kBACM,IAAjBhtD,EAAMmS,SACLw6C,EAAM3wD,MAAMoE,SACZ+rD,GAAgBnsD,GACf,CACEA,EAAMuD,iBAEN,IAAIuiC,EAAU6mB,EAAMj1C,QAAQu1C,OAAOnnB,QAC/BonB,EAAcP,EAAM3wD,MACpB4L,EAAUslD,EAAYtlD,QACtBtK,EAAK4vD,EAAY5vD,GAGjBsK,EACFk+B,EAAQl+B,QAAQtK,GAEhBwoC,EAAQ1kB,KAAK9jB,KAGV2uD,GAA2BU,EAAnCD,GAsBL,OAvEF,SAAmBS,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIjiD,UAAU,kEAAoEiiD,GAAeD,EAAS9jD,UAAYL,OAAOqkD,OAAOD,GAAcA,EAAW/jD,UAAW,CAAEnB,YAAa,CAAE7H,MAAO8sD,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYpkD,OAAOykD,eAAiBzkD,OAAOykD,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GAgB/dO,CAAUnB,EAAMC,GAoChBD,EAAKnjD,UAAU09C,OAAS,WACtB,IAAI6G,EAAS3sD,KAAKjF,MAEdsB,GADUswD,EAAOhmD,QACZgmD,EAAOtwD,IACZuwD,EAAWD,EAAOC,SAClB7xD,EA/DR,SAAkC+wC,EAAKqY,GAAQ,IAAIhlD,EAAS,GAAI,IAAK,IAAIiG,KAAK0mC,EAAWqY,EAAK7/C,QAAQc,IAAM,GAAkB2C,OAAOK,UAAU2jC,eAAe9nC,KAAK6nC,EAAK1mC,KAAcjG,EAAOiG,GAAK0mC,EAAI1mC,IAAM,OAAOjG,EA+DnM0tD,CAAyBF,EAAQ,CAAC,UAAW,KAAM,aAE/DG,KAAU9sD,KAAKyW,QAAQu1C,OAAQ,gDAE/Bc,UAAiBviD,IAAPlO,EAAkB,sCAE5B,IAAIwoC,EAAU7kC,KAAKyW,QAAQu1C,OAAOnnB,QAE9Bh+B,EAAyB,kBAAPxK,EAAkB0wD,aAAe1wD,EAAI,KAAM,KAAMwoC,EAAQh+B,UAAYxK,EAEvFgI,EAAOwgC,EAAQmoB,WAAWnmD,GAC9B,OAAOtE,IAAMiB,cAAc,IAAKmnD,GAAS,GAAI5vD,EAAO,CAAE8G,QAAS7B,KAAK8rD,YAAaznD,KAAMA,EAAMhD,IAAKurD,MAG7FrB,EAxDE,CAyDThpD,IAAMwjB,WAERwlC,GAAK3U,UAAY,CACf/0C,QAASg1C,KAAUvtC,KACnBnK,OAAQ03C,KAAUoW,OAClBtmD,QAASkwC,KAAUqW,KACnB7wD,GAAIw6C,KAAUsW,UAAU,CAACtW,KAAUoW,OAAQpW,KAAUuW,SAAStW,WAC9D8V,SAAU/V,KAAUsW,UAAU,CAACtW,KAAUoW,OAAQpW,KAAUvtC,QAE7DiiD,GAAK/oD,aAAe,CAClBmE,SAAS,GAEX4kD,GAAK8B,aAAe,CAClBrB,OAAQnV,KAAUlxB,MAAM,CACtBkf,QAASgS,KAAUlxB,MAAM,CACvBxF,KAAM02B,KAAUvtC,KAAKwtC,WACrBnwC,QAASkwC,KAAUvtC,KAAKwtC,WACxBkW,WAAYnW,KAAUvtC,KAAKwtC,aAC1BA,aACFA,YAIUyU,U,i6BC/FR,IAAM+B,GAAmB9wD,UAAOsU,GAAGpU,OAAM,SAAC3B,GAAD,MAAmC,CACjF,eAAgBA,EAAMwyD,eADQ/wD,CAAH,KAGzBU,KAQS,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAGtD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAiBb,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAC5EY,aAAW,gBAQW,SAAAhD,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAI3C0xD,GAAchxD,UAAOoU,GAAV,MAIX68C,GAAejxD,UAAO6zB,IAAV,MC7CZq9B,GAAb,sLAMY,IAAD,EACmB1tD,KAAKjF,MAAvB4yD,EADD,EACCA,OAAQC,EADT,EACSA,MAEhB,OACE,gBAACH,GAAD,KACE,gBAACD,GAAD,KACE,gBAACF,GAAD,CACEC,cAAaI,GAAS,OACtBpsD,UAAWosD,EAAS,SAAW,YAE/B,gBAAC,GAAD,CAAMtxD,GAAIwxD,KAAcpyD,YAAS,cAEnC,gBAAC6xD,GAAD,CACEC,cAAaK,GAAQ,OACrBrsD,UAAWqsD,EAAQ,SAAW,YAE9B,gBAAC,GAAD,CAAMvxD,GAAIyxD,KAAaryD,YAAS,mBAtB5C,GAAkC8G,aAArBmrD,GAEJlrD,aAAe,CACpBmrD,QAAQ,EACRC,OAAO,GA0BIF,U,0gCCpCR,IAAMK,GAAwBvxD,UAAO2B,IAAIzB,MAAM,CACpD,YAAa,iBADsBF,CAAH,KAK9Ba,IAAMmU,OALwB,MAS9BnU,IAAMC,OATwB,OAerB0wD,GAAsBxxD,UAAO2B,IAAV,MAGhB,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAS/B,SAAArC,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,YAIrCuB,IAAMC,OAhBsB,OA2Bd,SAAAvC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAK3D8wD,GAAiBzxD,kBAAO8B,KAAP9B,CAAH,MAChB,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aC1BxB+wD,GAhBf,sLACY,IAAD,EACwDluD,KAAKjF,MAA5DozD,EADD,EACCA,kBAAmBC,EADpB,EACoBA,WAAYC,EADhC,EACgCA,oBACvC,OACE,gBAACN,GAAD,KACE,gBAACC,GAAD,KACE,gBAACC,GAAD,KACGxyD,YAAS0yD,GACV,gBAAC,GAAD,CAAM9xD,GAAI+xD,GAAa3yD,YAAS4yD,WAR5C,GAAkC9rD,a,qxBCN3B,IAAM+rD,GAAuB9xD,kBAAO8B,KAAM5B,MAAM,CACrD,YAAa,kBADqBF,CAAH,MASpB,SAAAzB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAC7DE,IAAMC,OAVqB,OAiBpBixD,GAAe/xD,kBAAO+uD,KAAM7uD,MAAM,CAC7C,YAAa,kBADaF,CAAH,MAUd,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAO6rC,iBACnCrqC,IAAMC,OAXe,OAiBZ,SAAAvC,GAAK,OAAIA,EAAMa,MAAMC,OAAO6rC,kBCE1B8mB,GA3BkB,SAACzzD,GAAmC,IAAD,EACN4nD,oBAAS,GADH,oBAC3D8L,EAD2D,KACnCC,EADmC,OAEjC3zD,EAAzB4zD,oBAF0D,SAQlE,OACE,kBAAC,IAAMn9B,SAAP,KACGm9B,GACC,kBAACL,GAAD,KAAuB7yD,YAAS,8BAA+B,IAA/D,KAEF,kBAAC8yD,GAAD,CACE7xC,KAAMjhB,YAAS,UACfoG,QAXU,WACd6sD,GAA2BD,IAWvB7iD,QAAS,GACT6C,OAAQ+rB,IAAK7rB,OAAO8rB,KACpBp2B,KAAMuqD,MAEPH,GACC,kBAACI,GAAA,EAAD,CAAaxrD,IAAKurD,IAAehrC,OAAQ8qC,M,wlGCxB1C,IAAMI,GAAkBtyD,kBAAOijB,KAAPjjB,CAAH,MAKfuyD,GAAkBvyD,kBAAOmjB,KAAPnjB,CAAH,KAQxBwa,gBACA,SAAAjc,GAAK,OAAI6kB,aAAe7kB,EAAM8kB,WAAWzZ,QACzC/I,IAAMmU,OAVkB,OAiBfw9C,GAAgBxyD,UAAO2B,IAAV,KAKtBd,IAAMC,OALgB,OAUb2xD,GAAczyD,UAAO6P,QAAV,MAUXmL,GAAahb,UAAOmW,IAAIjW,OAAM,SAAC3B,GAAD,MAA6B,CACtE2c,IAAK3c,EAAMulD,QACXv5C,IAAKhM,EAAM0c,WAFajb,CAAH,KASnBa,IAAMmU,OATa,OAcV09C,GAA2B1yD,UAAO2B,IAAV,KAIjC8rB,MAOSklC,GAAoB3yD,UAAOmW,IAAIjW,OAAM,SAAC3B,GAAD,MAAoC,CACpF2c,IAAK3c,EAAMulD,QACXv5C,IAAKhM,EAAM0c,WAFoBjb,CAAH,MAUjB4yD,GAAc5yD,UAAO+P,GAAV,KACpBrP,KAMO,SAAAnC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAGnCE,IAAMmU,OAVc,OAeX69C,GAAe7yD,kBAAO8B,KAAP9B,CAAH,KAEnBU,KAKO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAE7DE,IAAMC,OATa,OAeZgyD,GAA2B9yD,UAAO2B,IAAV,MAKxBoxD,GAAwB/yD,UAAO2B,IAAV,KAC9Bd,IAAMmU,OADwB,MAI9BnU,IAAMC,OAJwB,OAcrBkyD,GAAOhzD,UAAO2B,IAAIzB,MAAM,CACnC,YAAa,QADKF,CAAH,MAOE,SAAAzB,GAAK,OAAKA,EAAM00D,aAAe,KAAO,MACrDpyD,IAAMC,OARO,OAWD,SAAAvC,GAAK,OAAKA,EAAM20D,aAAe,KAAO,OAOzCC,GAAgBnzD,kBAAOyB,MAAMvB,OAAM,SAAC3B,GAAD,MAAgC,CAC9E4B,KAAM5B,EAAM4B,QADeH,CAAH,MAObozD,GAAWpzD,kBAAO8B,KAAP9B,CAAH,KAEfU,KAIO,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAC7DE,IAAMC,OAPS,O,ufC1Jd,IAAMuyD,GAAerzD,kBAAOyyD,GAAPzyD,CAAH,MAKZszD,GAAiBtzD,kBAAOwyD,GAAPxyD,CAAH,MAIduzD,GAAWvzD,kBAAO6yD,GAAP7yD,CAAH,MAIR8tD,GAAuB9tD,kBAAO8yD,GAAP9yD,CAAH,MAIpBwzD,GAAoBxzD,UAAO2B,IAAIzB,MAAM,CAChD,YAAa,cADkBF,CAAH,MCsDjByzD,GAAb,YAGE,WAAYl1D,GAAwB,IAAD,+BACjC,8CAAMA,KAHRm1D,wBAEmC,IAWnC9G,cAAgB,WACd,EAAK7pD,SAAS,CACZQ,UAAU,EACV2nD,qCAAqC,EACrCC,gBAAgB,KAfe,EAmBnCjB,SAAW,SAAO3nD,EAAYoxD,GAAnB,eAAAzsD,EAAAmL,OAAA,uDACT9P,EAAMuD,iBAEN,EAAK/C,SAAS,CACZQ,UAAU,IAJH,WAAA2D,EAAA,MAMY,EAAK3I,MAAMq1D,YAAYC,cAAcF,IANjD,WAMH3gD,EANG,UAQM25C,KARN,kCAAAzlD,EAAA,MASD,EAAK4sD,UATJ,wCAaT,EAAK/wD,SAAS,CACZQ,UAAU,EACV2nD,oCAAqCl4C,IAAW+gD,KAChD5I,eAAgBn4C,IAAWghD,OAhBpB,uCAnBwB,EA4CnCC,oBAAsB,oBAAA/sD,EAAAmL,OAAA,kEAAAnL,EAAA,MACd,EAAK3I,MAAMq1D,YAAYM,sBADT,yBAAAhtD,EAAA,MAEd,EAAK4sD,UAFS,sCA5Ca,EAqDnCnJ,aAAe,SAACZ,GACd,EAAK2J,mBAAqB3J,GAtDO,EAyDnCoK,cAAgB,WACd,EAAKT,mBAAmBrJ,MAAMxmC,SA1DG,EA6DnCuwC,aAAe,kBACb,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAcx2B,SAAU,OA/DO,EAmEnCy2B,iBAAmB,WAAO,IAAD,EASnB,EAAK91D,MAPP8kB,EAFqB,EAErBA,WACApI,EAHqB,EAGrBA,QACA6B,EAJqB,EAIrBA,mBACA6oB,EALqB,EAKrBA,2BACA2uB,EANqB,EAMrBA,2BACAC,EAPqB,EAOrBA,qCACAC,EARqB,EAQrBA,uBAGF,OACE,gBAAC,WAAD,KACE,gBAACvvC,GAAA,EAAD,CAAe5f,QAAS,EAAK8uD,gBAC7B,gBAAC7B,GAAD,CAAiBjvC,WAAYA,GAC3B,gBAACqvC,GAAD,KACE,gBAACC,GAAD,CACE7O,QAAS7kD,YAAS,oBAClBgc,QAAS6B,MAIf,gBAACy1C,GAAD,CAAiBlvC,WAAYA,GAC3B,gBAACgwC,GAAD,KACE,gBAACC,GAAD,KACG3tB,GACC,gBAACotB,GAAD,KACE,gBAAC,GAAD,CAAc3B,OAAK,KAGvB,gBAAC,GAAD,CAAYtN,QAAS7kD,YAAS,oBAAqBgc,QAASA,IAC5D,gBAAC23C,GAAD,CAAal0D,GArBF,aAsBRinC,EACG1mC,YAAS,aACTA,YAAS,yBAEf,gBAACs0D,GAAD,CAAUz9C,WAAW,KAClB6vB,EACG1mC,YAAS,qBACTA,YAAS,iCAEf,gBAAC,GAAD,CACE+rD,OAhCS,YAiCTd,SAAU,EAAKA,SACfgB,oCAAqC,EAAKhoD,MAAMgoD,oCAChD0B,cAAe,EAAKA,cACpBjC,aAAc,EAAKA,eAEpBhlB,GAA8B2uB,GAC7B,gBAAC,GAAD,KACE,gBAAC,GAAD,CAAa77C,MAAOxZ,YAAS,oBAG/Bu1D,GAA0BD,GAC1B,gBAACf,GAAD,KACE,gBAAC,KAAD,CACEtzC,KAAMjhB,YAAS,eACfgT,OAAQ+rB,IAAK7rB,OAAO8rB,KACpB54B,QAAS,EAAK4uD,oBACd7kD,QAAS,MAIf,gBAAC4jD,GAAD,CACEE,cACGoB,GACDC,IACC5uB,GAGH,gBAACwtB,GAAD,CAAehzD,KAAM,mBACrB,gBAACizD,GAAD,CAAUt9C,WAAW,KAAK7W,YAAS,iBAErC,gBAACiiC,GAAA,EAAD,CAAW9xB,QAAS,IAAMyG,MAAM,eAElC,gBAAC,GAAD,MACC8vB,GACC,gBAAC,GAAD,CACEgsB,kBAAkB,sBAClBC,WAAYP,IACZQ,oBAAoB,sBAhJhC,EAAK3uD,MAAQ,CACXK,UAAU,EACV2nD,qCAAqC,EACrCC,gBAAgB,GAElB,EAAKuI,mBAAqB,GARO,EAHrC,0KA2CgClwD,KAAKjF,MAAMk2D,WAAWC,kBA3CtD,OA2CUhzB,EA3CV,OA4CIl+B,KAAKjF,MAAMsT,cAAc6vB,GA5C7B,2FAqDI36B,SAAS0R,MAAT,UAAoBxZ,YAAS,0BAA7B,cAA4DuE,KAAKjF,MAAMka,SArD3E,+BA+JY,IACAlV,EAAaC,KAAKN,MAAlBK,SACR,OACE,gBAAC,WAAD,KACGA,GAAYC,KAAK4wD,gBAChB7wD,GAAYC,KAAK6wD,wBApK3B,GAA+BtuD,aAgMhBkL,mBAAeC,aAtB9B,SAAyBhO,GACvB,MAAO,CACLuV,MAAO6F,YAAepb,GACtB2Z,cAAe0B,YAAuBrb,GACtCmgB,WAAYiC,YAAcpiB,GAC1B+X,QAASmiB,YAAQl6B,GACjB4Z,mBAAoBuB,YAAmBnb,GACvCyiC,2BAA4BA,YAA2BziC,GACvDoxD,2BAA4BK,YAA6BzxD,GACzDsxD,uBAAwBI,YAAgB1xD,GACxCqxD,qCAAsCM,YAAuC3xD,GAC7E4xD,aAAcC,YAAgB7xD,OAIlC,SAA4BoO,GAC1B,MAAO,CACLsiD,YAAapiD,YAAmBoiD,GAAatiD,GAC7CmjD,WAAYjjD,YAAmBijD,GAAYnjD,MAIjBJ,CAA6CuiD,KCpO9DuB,GAAb,YAGE,WAAYz2D,GAAqB,IAAD,+BAC9B,8CAAMA,KAHR+oB,mBAEgC,IAShCkkC,iBAAmB,SAAOnB,GAAP,iBAAAnjD,EAAAmL,OAAA,mDACX4iD,EAAqBluD,SAASid,eAAe,UAC/CqmC,IAAS6K,IAAYxyD,KAAK2nD,GAFb,kCAAAnjD,EAAA,MAGMq4B,KAAgB41B,WAAW9K,EAAM3kD,gBAHvC,OAGTsN,EAHS,OAIf,EAAKjQ,SAAS,CAAEX,YAAa4Q,EAAOoiD,SACpCH,EAActxD,UAAUqmD,IAAI,SALb,uBAOf,EAAKjnD,SAAS,CAAEX,aAAa,IAC7B6yD,EAActxD,UAAUC,OAAO,SARhB,uCATa,EAqBhCyxD,yBAA2B,kBACzB,gBAAChJ,GAAD,KACE,gBAACD,GAAD,CAAahtD,MAAO,EAAKkoB,cAAexR,WAAW,QAChD7W,YAAS,4BAxBgB,EA6BhCq2D,mBAAqB,kBACnB,gBAAC3J,GAAD,CAAoB15C,OAAQC,IAAOC,OAAOC,QAAS6qB,WAAW,cAAcv9B,KAAK,UAC9ET,YAAS,sBA/BkB,EAmChC4tD,kBAAoB,SAClB75C,EACAsyB,EACA/E,EACA6sB,EACAplC,GALkB,OAOlB,gBAAC,IAAD,CACE8H,gBAAiB,MACjB7d,OAAQe,EACRsyB,YAAaA,EACb/E,QAASA,EACTgF,cAAe6nB,EACfC,mBAAoB,GACpBC,aAAc,QACdtlC,YAAaA,KAlDe,EAsDhC2zB,cAAgB,SAACp9C,GAAgB,IAAD,EAC8B,EAAKA,MADnC,IACtBwsD,iBADsB,MACV,GADU,MACN/oC,gBADM,MACK,GADL,EACSuzC,EADT,EACSA,iBAErC/yD,EAOEjE,EAPFiE,SACAkoD,EAMEnsD,EANFmsD,QACAtpD,EAKE7C,EALF6C,6BACAipD,EAIE9rD,EAJF8rD,MACAjoD,EAGE7D,EAHF6D,YACA+oD,EAEE5sD,EAFF4sD,eACAL,EACEvsD,EADFusD,kBAEF,OACE,gBAACjB,GAAD,KACE,gBAAC1nD,GAAD,CAAgBgD,KAAM,IACpB,gBAAC,GAAD,CACE6c,SAAUA,EACVxf,SAAUA,EACVkoD,QAASA,EACTtpD,6BAA8BA,EAA6BjB,KAC3DyE,QAAS2wD,KAGb,gBAACpzD,GAAD,CAAgBgD,KAAM,IACpB,gBAAC,GAAD,CACE4lD,UAAWA,EACX3oD,YAAaA,EACbopD,iBAAkB,EAAKA,iBACvBhpD,SAAUA,EACVkoD,QAASA,EACTL,MAAOA,EACP5lD,UACErC,GAAeioD,EAAQprD,YAAS,gBAAkBA,YAAS,uBAE7DmC,6BAA8BA,EAA6BipD,MAC3DzlD,QAAS2wD,EACT/0D,QAAS00D,IAAY7G,UAGzB,gBAAClsD,GAAD,CAAgBgD,KAAM,IACpB,gBAAC,GAAD,CACE3C,SAAUA,EACVkoD,QAASA,EACTtpD,6BAA8BA,EAA6BwpD,SAC3DpqD,QAASg1D,IACT7wD,uBAAuB,EACvBC,QAAS2wD,KAGb,gBAACzJ,GAAD,CACEE,UAAWlB,EACX1pD,6BAA8BA,EAA6BypD,WAE3D,gBAACe,GAAD,CACE6J,QAAS3K,EACTpsD,GAAI,oBACJyB,KAAM,YACN0E,IAAK,SAACgjC,GAAD,OAAe6iB,EAAQ7iB,IAC5BrlC,SAAU,kBAAM,EAAKO,SAAS,CAAE+nD,mBAAoBA,OAEtD,gBAAC,IAAD,CACEkC,UAAU,EACVniB,SAAUigB,EACVmC,eAAcnC,EACd3lD,KAAM4mB,IAAMC,MACZ3rB,SAAU,EACVgF,QAAS,kBAAM,EAAKtC,SAAS,CAAE+nD,mBAAoBA,KACnDvlD,UAAW,SAAChD,GAER,CAACiD,IAAKC,MAAMC,cAAeF,IAAKG,SAASD,eAAeE,SACtDrD,EAAMsD,IAAIH,iBAGZnD,EAAMuD,iBACN,EAAK/C,SAAS,CAAE+nD,mBAAoBA,QAI1C,gBAACe,GAAD,CAAgB3mD,QAAS,qBACvB,gBAAC,GAAD,CAAmBitD,cAAc,MAGpC,EAAKtF,kBACJznB,IAAQC,UACR8lB,EACA,EAAKkK,2BACL,EAAKC,sBACL,KA1IN,EAAKhuC,cAAgB/oB,EAAMa,MAC3B,EAAK8D,MAAQ,CACXd,aAAa,EACb0oD,mBAAmB,GALS,EAHlC,wEAqJY,IAAD,EACoCtnD,KAAKN,MAAxCd,EADD,EACCA,YAAa0oD,EADd,EACcA,kBADd,EAEoDtnD,KAAKjF,MAAxD2rD,EAFD,EAECA,SAAUc,EAFX,EAEWA,OAAQG,EAFnB,EAEmBA,eAAgBR,EAFnC,EAEmCA,aAE1C,OACE,gBAAC,GAAD,CACEvoD,YAAaA,EACbopD,iBAAkBhoD,KAAKgoD,iBACvBR,OAAQA,EACRd,SAAUA,EACVvO,cAAen4C,KAAKm4C,cACpBwP,eAAgBA,EAChBR,aAAcA,EACdG,kBAAmBA,QAlK3B,GAA4B/kD,aA+KbzH,2BAAU4S,aAPzB,SAAyBhO,GACvB,MAAO,CACL6nD,UAAWO,aAASpoD,GACpB8e,SAAUW,aAAQzf,MAIGgO,CAAyB8jD,K,yuBChN3C,IAAMU,GAAgB11D,kBAAOyyD,GAAPzyD,CAAH,MAKb21D,GAAkB31D,kBAAOwyD,GAAPxyD,CAAH,MAIfuzD,GAAWvzD,kBAAO6yD,GAAP7yD,CAAH,MAIR8tD,GAAuB9tD,kBAAO8yD,GAAP9yD,CAAH,MAIpB41D,GAAe51D,kBAAO8B,KAAP9B,CAAH,KACrBU,KAIS,SAAAnC,GAAK,OAAIA,EAAMa,MAAMC,OAAOob,2BC6B5Bo7C,GAAb,YAGE,WAAYt3D,GAAyB,IAAD,wBAClC,8CAAMA,KAHRu3D,yBAEoC,IAiBpC5L,SAAW,SAAO3nD,EAAYwzD,GAAnB,eAAA7uD,EAAAmL,OAAA,uDACT9P,EAAMuD,iBADG,WAAAoB,EAAA,MAGY,EAAK3I,MAAMo8B,QAAQq7B,aAAaD,IAH5C,WAGH/iD,EAHG,UAKM25C,KALN,kCAAAzlD,EAAA,MAMD,EAAK4sD,UANJ,wCAUT,EAAK/wD,SAAS,CACZooD,eAAgBn4C,IAAWghD,OAXpB,sCAjByB,EAgCpCuB,iBAAmB,SAACxxC,GAClB,IAAMkyC,EAAoBlyC,EAAQphB,OAClC,EAAKI,SAAS,CACZooD,gBAAgB,IAElB8K,EAAatyD,UAAUC,OAAO,UArCI,EA4CpC+mD,aAAe,SAACZ,GACd,EAAK+L,oBAAsB/L,GA7CO,EAgDpCmM,aAAe,WACb,EAAKJ,oBAAoB31D,KAAK0jB,SAjDI,IAE1BsyC,EAAwB53D,EAAxB43D,oBAF0B,OAIlC,EAAKjzD,MAAQ,CACXioD,gBAAgB,GAElB,EAAK2K,oBAAsB,GACvBK,GACF,EAAKrC,SAT2B,EAHtC,mFAiBI/sD,SAAS0R,MAAT,UAAoBxZ,YAAS,2BAA7B,cAA6DuE,KAAKjF,MAAMka,SAjB5E,2HA4CUjV,KAAKjF,MAAMk2D,WAAWC,kBA5ChC,gFAuDY,IAAD,EACyElxD,KAAKjF,MAA7E8kB,EADD,EACCA,WAAYpI,EADb,EACaA,QAASq5C,EADtB,EACsBA,2BAA4Bx3C,EADlD,EACkDA,mBAGzD,OACE,gBAAC,WAAD,KACE,gBAACmI,GAAA,EAAD,CAAe5f,QAAS7B,KAAK0yD,eAC7B,gBAAC5D,GAAD,CAAiBjvC,WAAYA,GAC3B,gBAACqvC,GAAD,KACE,gBAACC,GAAD,CACE7O,QAAS7kD,YAAS,oBAClBgc,QAAS6B,KAGb,gBAAC84C,GAAD,CAAc9/C,WAAW,KAAK7W,YAAS,gBAEzC,gBAACszD,GAAD,CAAiBlvC,WAAYA,GAC3B,gBAACqyC,GAAD,KACE,gBAACC,GAAD,KACE,gBAAC5C,GAAD,KACE,gBAAC,GAAD,CAAc5B,QAAM,KAEtB,gBAAC,GAAD,CAAYrN,QAAS7kD,YAAS,oBAAqBgc,QAASA,IAC5D,gBAAC23C,GAAD,CAAal0D,GArBF,UAqBqBO,YAAS,qBACzC,gBAAC,GAAD,CAAU6W,WAAW,KAAK7W,YAAS,wBACnC,gBAACm3D,GAAD,CACEpL,OAxBS,SAyBTd,SAAU1mD,KAAK0mD,SACfiB,eAAgB3nD,KAAKN,MAAMioD,eAC3BoK,iBAAkB/xD,KAAK+xD,iBACvB5K,aAAcnnD,KAAKmnD,eAEpB2J,GACC,gBAAC,GAAD,KACE,gBAAC,GAAD,CAAa77C,MAAOxZ,YAAS,qBAGjC,gBAAC+zD,GAAD,CAAMC,cAAc,EAAMC,cAAeoB,GACvC,gBAACnB,GAAD,CAAehzD,KAAM,mBACrB,gBAACizD,GAAD,CAAUt9C,WAAW,KAAK7W,YAAS,kBAGvC,gBAAC,GAAD,CACE0yD,kBAAkB,iBAClBC,WAAYN,IACZO,oBAAoB,mBApGlC,GAAgC9rD,aAgIjBkL,mBAAeC,aAnB9B,SAAyBhO,GACvB,MAAO,CACLuV,MAAO6F,YAAepb,GACtB2Z,cAAe0B,YAAuBrb,GACtCmgB,WAAYiC,YAAcpiB,GAC1B+X,QAASmiB,YAAQl6B,GACjB4Z,mBAAoBuB,YAAmBnb,GACvCizD,oBAAqBE,aAAgBnzD,GACrCoxD,2BAA4BK,YAA6BzxD,OAI7D,SAA4BoO,GAC1B,MAAO,CACLqpB,QAASnpB,YAAmBoiD,GAAatiD,GACzCmjD,WAAYjjD,YAAmBijD,GAAYnjD,MAIjBJ,CAA6C2kD,K,qBC7F5DS,GA5FU,kBACvB,kBAAC,IAAD,CACE93D,MAAM,QACNqQ,OAAO,QACP/P,QAAQ,cACRL,QAAQ,MACRE,MAAM,6BACNqD,KAAK,MACLhD,UAAS,UAAKC,YAAS,kBAEvB,kDACA,0DACA,8BACE,0BACEP,GAAG,aACHa,EAAE,qGAEJ,0BACEb,GAAG,aACHa,EAAE,oIAEJ,4BACEb,GAAG,aACHF,MAAM,OACNqQ,OAAO,OACPjQ,EAAE,KACFC,EAAE,KACFkQ,YAAY,qBAEZ,oCAAgBC,GAAG,oBAGvB,uBAAG9P,KAAK,OAAO+P,SAAS,WACtB,2BACE,uBAAGC,UAAU,2CACX,uBAAGhQ,KAAK,UAAUkQ,QAAQ,OACxB,2BACE,0BACE7P,EAAE,0gBAMF4P,OAAO,mBACPD,UAAU,sBAIhB,2BACE,uBAAGA,UAAU,iBACX,yBAAKhQ,KAAK,OAAOwQ,UAAU,gBAC3B,yBAAKxQ,KAAK,UAAUyQ,YAAY,KAAKD,UAAU,iBAEjD,0BACExQ,KAAK,UACLK,EAAE,uFACF2P,UAAU,kBAEZ,uBAAGA,UAAU,iBACX,yBAAKhQ,KAAK,OAAOwQ,UAAU,gBAC3B,yBAAKxQ,KAAK,UAAUyQ,YAAY,KAAKD,UAAU,gBAC/C,yBAAK0e,OAAO,OAAO1e,UAAU,gBAC7B,yBAAK0e,OAAO,OAAOJ,YAAY,IAAIte,UAAU,iBAE/C,0BACExQ,KAAK,OACLK,EAAE,gPAEF2P,UAAU,kBAEZ,0BACEhQ,KAAK,UACLyQ,YAAY,KACZpQ,EAAE,kCACF2P,UAAU,mBAGd,6BAASG,GAAG,MAAMC,GAAG,MAAMpQ,KAAK,UAAUqQ,GAAG,KAAKC,GAAG,MACrD,4BAAQH,GAAG,QAAQC,GAAG,OAAOG,EAAE,MAAMvQ,KAAK,OAAOkvB,OAAO,UAAUJ,YAAY,MAC9E,0BACE9uB,KAAK,UACL+P,SAAS,UACT1P,EAAE,sM,s1BChFP,IAAMo7C,GAAU36C,UAAO2B,IAAIzB,MAAM,CACtC,YAAa,iBADQF,CAAH,KAGhBqmB,KAMSgY,GAASr+B,UAAO2B,IAAV,MAIN40D,GAAcv2D,UAAOkQ,EAAV,MAKb,SAAA3R,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,YAEnCE,IAAMC,OAPc,OAcXuP,GAAgBrQ,kBAAOsQ,IAAPtQ,CAAH,KACtBkC,KAGkB,SAAA3D,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAG1B,SAAAf,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OCL/Dg3D,GAzBU,SAAC/3D,GAA2B,IAAD,EACQwH,IAAMogD,UAAkB,GADhC,oBAC3CzoB,EAD2C,KACpBC,EADoB,KAYlD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC44B,GAAD,KAAct3D,YAAS,6BACvB,kBAAC,GAAD,CAAegT,OAAQC,IAAOC,OAAOC,QAAS/M,QAf1B,oBAAA6B,EAAAmL,OAAA,mDACjBqrB,EADiB,uBAEpBC,GAAyB,GACzBp/B,EAAMu/B,cAAcrT,kBAHA,WAAAvjB,EAAA,MAId3I,EAAMu/B,cAAc2D,mBAJN,OAKpBljC,EAAMqT,aALc,uCAgBjB3S,YAAS,mBCQHu3D,G,YAxBb,WAAYj4D,GAAa,IAAD,+BACtB,8CAAMA,KACD2E,MAAQ,CAAE47B,MAAO,KAAM23B,UAAW,MAFjB,E,iFAKN33B,EAAY23B,GAC5BjzD,KAAKT,SAAS,CACZ+7B,QACA23B,cAGEjzD,KAAKjF,MAAMm4D,OACblzD,KAAKjF,MAAMm4D,U,+BAKb,OAAIlzD,KAAKN,MAAMuzD,UACNjzD,KAAKjF,MAAM0jC,WAAa,8BAE1Bz+B,KAAKjF,MAAMqoB,a,GArBM7gB,IAAMwjB,WC4NnBrY,uBAjBf,SAAyBhO,GACvB,MAAO,CACLyzD,8BAA+BC,YAAwB1zD,GACvDkhB,YAAaoB,YAAetiB,GAC5Bic,sBAAuBA,YAAsBjc,GAC7Cqe,iBAAkBiB,YAAoBtf,GACtC2zD,gBAAiBC,YAAe5zD,OAIpC,SAA4BoO,GAC1B,MAAO,CACLK,cAAeH,YAAmBG,EAAeL,GACjDswB,aAAcpwB,YAAmBowB,GAActwB,MAIpCJ,EAxKA,SAAC3S,GAAwB,IAEpCc,EAcEd,EAdFc,OACA6V,EAaE3W,EAbF2W,MACAmO,EAYE9kB,EAZF8kB,WACAkY,EAWEh9B,EAXFg9B,gBACAw7B,EAUEx4D,EAVFw4D,cACAZ,EASE53D,EATF43D,oBACAa,EAQEz4D,EARFy4D,oBACAL,EAOEp4D,EAPFo4D,8BACAvyC,EAME7lB,EANF6lB,YAEAjF,EAIE5gB,EAJF4gB,sBACAoC,EAGEhjB,EAHFgjB,iBACAs1C,EAEEt4D,EAFFs4D,gBACAxsD,EACE9L,EADF8L,SAEE4sD,EAAaC,MAEbF,GAAwBb,IAC1Bc,EAAaD,GAAuBb,EAAsBgB,KAAeC,MAG3E,IAAMngB,EA/BY,SAACr0C,GACnB,IAAMiC,EAAM6hD,mBAIZ,OAHAG,qBAAU,WACRhiD,EAAI8hB,QAAU/jB,KAETiC,EAAI8hB,QA0BgB0wC,CAAY,CAAEjzC,gBAEnCkzC,EAAqB,WACzB/4D,EAAMqjC,aAAaC,UAAU,CAC3BC,QAASy1B,KACTv1B,kBAAmB,gCACnBC,UAAWu1B,GACX/1B,gBAAiBljC,EAAMoT,cAAc8lD,UACrChtC,gBAAiBlsB,EAAMksB,gBACvByX,qBAAqB,EACrBC,mBAAmB,KAmDvB,OAtCA0kB,qBAAU,WACR,GAAIsP,EAAqB,EACN,mBAAAjvD,EAAAmL,OAAA,kEAAAnL,EAAA,MACkB3I,EAAMoT,cAAcmiD,UADtC,OACTpyB,EADS,OAEfnjC,EAAMsT,cAAc6vB,GAFL,qCAKjBnH,MAGD,IAEHssB,qBAAU,WACR,GAAI8P,GAAiCE,GAAmBa,KAAYh1D,KAAK2H,EAASq9B,UAAW,CAC3F,GAAIvoB,GAAyBoC,GAAoB,EAC/C,OAEF+1C,IAIAlzC,IAAgB7R,IAAYolD,WAC3BhB,IACY,OAAb1f,QAAa,IAAbA,OAAA,EAAAA,EAAe7yB,eAAgBA,GA/BjC7lB,EAAMqjC,aAAaC,UAAU,CAC3BC,QAAS81B,KACT51B,kBAAmB,+BACnBC,UAAW41B,GACX31B,qBAAqB,MAiCtB,CACDy0B,EACAvyC,EACAjF,EACAoC,EACAs1C,EACAxsD,IAIA,kBAACytD,EAAA,EAAD,CACExO,OAAQ,gBAAGj/C,EAAH,EAAGA,SAAH,OACN,kBAAC,gBAAD,CAAejL,MAAO,CAAEC,SAAQ6V,UAC9B,kBAAC6iD,GAAA,EAAD,CACE1tD,SAAUA,EACVkxB,gBAAiBA,EACjBw7B,cAAeA,EACf1zC,WAAYA,GAEZ,kBAAC20C,GAAA,EAAD,CAAQjzD,UAAU,UAChB,kBAAC,GAAD,CAAe2xD,MAAOY,GACpB,kBAACzxC,EAAA,EAAD,CAAQxb,SAAUA,GAChB,kBAAC,IAAD,CACEm/C,OAAK,EACLr7B,KAAMsM,IACNwH,UAAWze,GACXy0C,kBAAmBC,KACnBjB,WAAYA,EACZkB,aAAcC,IAAe/6C,SAE/B,kBAAC,IAAD,CACEmsC,OAAK,EACLr7B,KAAMkqC,IACNp2B,UAAWze,GACXy0C,kBAAmBC,KACnBjB,WAAYA,EACZkB,aAAcC,IAAe/6C,SAE/B,kBAAC,IAAD,CACEmsC,OAAK,EACLr7B,KAAM1b,IACNwvB,UAAWgnB,GACXgP,kBAAmBC,KACnBjB,WAAYA,EACZkB,aAAcC,IAAe/6C,SAE/B,kBAAC,IAAD,CACE8Q,KAAMmqC,IACNr2B,UAAWgnB,GACXgP,kBAAmBC,KACnBjB,WAAYA,EACZkB,aAAcC,IAAe/6C,SAE/B,kBAAC,IAAD,CACEmsC,OAAK,EACLr7B,KAAMmjC,IACNiH,eAAgBpC,EAChBl0B,UAAWu2B,KAEb,kBAAC,IAAD,CACEhP,OAAK,EACLr7B,KAAMkjC,IACNkH,eAAgBpC,EAChBl0B,UAAW+yB,KAEb,kBAAC8C,EAAA,EAAD,CAAO3pC,KAAK,IAAIq7B,OAAK,EAACvnB,UAAWw2B","file":"static/js/7.5eeb08cc.chunk.js","sourcesContent":["import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\ntype LoaderProps = {\n  theme: { [key: string]: any };\n  width: any;\n};\nexport const Loader = (props: LoaderProps) => (\n  <Figure\n    width={props.width}\n    version=\"1.1\"\n    id=\"L9\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 100 100\"\n    enableBackground=\"new 0 0 0 0\"\n    arialabel={`${localize('[aria label loader]')}`}\n  >\n    <path\n      fill={transparentize(props.theme.colors.mainColor)}\n      d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        dur=\"1s\"\n        from=\"0 50 50\"\n        to=\"360 50 50\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </Figure>\n);\n\nexport default withTheme(Loader);\n","import styled, { css } from 'styled-components';\nimport { transition, bounce } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport Icon from 'components/common/Icon';\nimport Text from 'components/common/Text';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { secondaryFont } from 'components/mixins/typography';\n\ntype InputElement = {\n  type: string;\n  name: string;\n  placeholder: string;\n  tabIndex: number;\n  id: string;\n  onInvalid(): void;\n  autoComplete: string;\n  pattern?: string;\n  validationStatusBeforeSubmit: boolean;\n  isBlur: boolean;\n};\nexport const InputElement = styled.input.attrs((props: InputElement) => ({\n  type: props.type,\n  name: props.name,\n  placeholder: props.placeholder,\n  tabIndex: props.tabIndex,\n  id: props.id,\n  onInvalid: props.onInvalid,\n  autoComplete: props.autoComplete,\n  pattern: props.pattern,\n  required: 'required'\n}))<InputElement>`\n  ${secondaryFont};\n  position: relative;\n  top: 0;\n  left: 0;\n  border-radius: 30px;\n  font-weight: normal;\n  font-size: 14px;\n  width: 320px;\n  height: 50px;\n  border-radius: 30px;\n  box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.textColor, 0.08)};\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  padding: 16px 40px 16px 24px;\n  border: none;\n  color: ${props => props.theme.colors.textColor};\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:focus {\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.mainColor, 0.1)};\n    border: solid 1px ${props => props.theme.colors.mainColor};\n    background-color: ${props => props.theme.colors.contentBodyColor};\n    outline: none;\n  }\n\n  &:focus::placeholder {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  }\n\n  ${media.mobile`\n    width: 260px;\n    height: 44px;\n  `};\n\n  &.full:invalid {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0\n          ${props => transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props => props.theme.colors.incorrectColor};\n        ${bounce};\n      `};\n  }\n\n  &.full:valid {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        background-color: ${props => props.theme.colors.contentBodyColor};\n        box-shadow: inset 0 2px 0 0\n          ${props => transparentize(props.theme.colors.incorrectColor, 0.1)};\n        border: solid 1px ${props => props.theme.colors.correctColor};\n      `};\n  }\n\n  &.full.valid {\n    background-color: ${props => props.theme.colors.contentBodyColor};\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.incorrectColor, 0.1)};\n    border: solid 1px ${props => props.theme.colors.correctColor};\n  };\n\n${props =>\n  props.validationStatusBeforeSubmit === false &&\n  css`\n    & {\n      background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n      box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n      border: solid 1px ${props.theme.colors.incorrectColor};\n      ${bounce};\n    }\n  `};\n`;\n\nexport const InputLabel = styled.label`\n  box-sizing: border-box;\n  line-height: 1;\n  position: absolute;\n  padding: 16px 24px;\n  top: -30px;\n  left: 0;\n  font-size: 10px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n\n  ${InputElement}.is-empty + & {\n    top: 0;\n    font-size: 14px;\n  }\n\n  ${transition('top')};\n\n  ${InputElement}.changed + &,\n  ${InputElement}:focus + &,\n  ${InputElement}:valid + & {\n    top: -30px;\n    font-size: 10px;\n  }\n\n  ${InputElement}:-webkit-autofill + & {\n    top: -30px;\n    font-size: 10px;\n  }`;\n\nexport const ValidIcon = styled(Icon)`\n  color: ${props => props.theme.colors.correctColor};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 22px;\n  visibility: hidden;\n\n  ${InputElement}:invalid ~ & {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        visibility: hidden;\n      `};\n  }\n\n  ${InputElement}:valid ~ & {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        visibility: visible;\n      `};\n  }\n\n  ${InputElement}.valid ~ & {\n    visibility: visible;\n  }\n`;\n\nexport const LoadWrapper = styled.div.attrs(() => ({\n  'data-test': 'loader-block'\n}))`\n  position: absolute;\n  top: 68%;\n  transform: translateY(-50%);\n  right: 22px;\n`;\n\nexport const ValidationMessageBlock = styled.div`\n  display: flex;\n  position: absolute;\n  left: 25px;\n  top: 55px;\n  visibility: hidden;\n  width: 100%;\n\n  &.show {\n    visibility: visible;\n  }\n`;\n\nexport const TextError = styled<any>(Text)`\n  && {\n    color: ${props => props.theme.colors.incorrectColor};\n    position: relative;\n    font-size: 10px;\n    visibility: hidden;\n    margin-right: 10px;\n    line-height: 1;\n\n    ${ValidationMessageBlock}.show & {\n      visibility: visible;\n      color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n      margin-right: 15px;\n    }\n\n    ${ValidationMessageBlock}.show & .icon {\n      color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n      margin-right: 5px;\n    }\n\n    & .icon {\n      color: ${props => props.theme.colors.incorrectColor};\n    }\n\n    &.active {\n      visibility: visible;\n    }\n\n    ${ValidationMessageBlock}.show &.valid, ${ValidationMessageBlock}.show &.valid .icon {\n      color: ${props => props.theme.colors.correctColor};\n    }\n\n    ${ValidationMessageBlock}.show &.invalid, ${ValidationMessageBlock}.show &.invalid .icon {\n      color: ${props => props.theme.colors.incorrectColor};\n    }\n\n    & .icon-exclamation-mark {\n      margin: 0 5px 0 -10px;\n      line-height: 10px;\n    }\n  }\n`;\n\ntype EyeIconProps = {\n  role: string;\n  tabIndex: number;\n  ariaLabel?: string;\n  name: string;\n  onClick: any;\n  onKeyDown: any;\n};\nexport const EyeIcon = styled(Icon).attrs((props: EyeIconProps) => ({\n  role: props.role,\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<EyeIconProps>`\n  ${buttonDefaultStyle};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 20px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  font-size: 11px;\n  cursor: pointer;\n\n  &.icon-eye-close {\n    font-size: 13px;\n  }\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) {\n    color: ${props => props.theme.colors.textColor};\n    outline: none;\n  }\n`;\n\ntype InputContainerProps = {\n  isUserExist: boolean;\n};\nexport const InputContainer = styled.div<InputContainerProps>`\n  ${secondaryFont};\n  position: relative;\n  font-weight: normal;\n  font-size: 14px;\n\n  &.invalid-input ${InputElement} {\n    background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.incorrectColor, 0.06)};\n    border: solid 1px ${props => props.theme.colors.incorrectColor};\n    ${bounce};\n  }\n\n  ${props =>\n    props.isUserExist === true &&\n    css`\n      ${InputElement}.full:valid {\n        background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props.theme.colors.incorrectColor};\n        ${bounce};\n      }\n\n      ${InputElement}:valid ~ ${ValidIcon} {\n        visibility: hidden;\n      }\n\n      ${TextError} {\n        visibility: visible;\n      }\n\n      ${ValidationMessageBlock} {\n        visibility: visible;\n      }\n    `};\n`;\n","import * as React from 'react';\nimport { withTheme } from 'styled-components';\nimport { INPUT_TYPE } from 'constants/components';\nimport { localize } from 'core/localization';\nimport Icon from 'components/common/Icon';\nimport { KEYS } from 'constants/common';\nimport Loader from 'assets/figures/Loader';\n\nimport {\n  InputContainer,\n  InputElement,\n  InputLabel,\n  ValidIcon,\n  LoadWrapper,\n  TextError,\n  ValidationMessageBlock,\n  EyeIcon\n} from './Input.styled';\n\ninterface InputTypes {\n  [INPUT_TYPE.TEXT]: string;\n  [INPUT_TYPE.PASSWORD]: string;\n  [INPUT_TYPE.EMAIL]: string;\n}\n\ntype InputProps = {\n  type: keyof InputTypes;\n  name: string;\n  tabIndex?: number;\n  labelText: string;\n  idInput: string;\n  onChange(e: any): void;\n  placeholder: string;\n  validIcon?: boolean;\n  loadIcon?: boolean;\n  refInput(node: any): void;\n  validationStatusBeforeSubmit: boolean;\n  showValidationMessage?: boolean;\n  onBlur?(e: any): void;\n  onFocus?(e: any): void;\n  defaultValue?: string;\n  autoComplete?: string;\n  isUserExist?: boolean;\n  pattern?: string;\n  textError?: string;\n  theme?: { [key: string]: any };\n};\n\ntype InputState = {\n  hasValue: boolean;\n  validValue: boolean;\n  showErrorText: boolean;\n  showPassword: boolean;\n  showPassValidationBlock: boolean;\n  isSpaceInPass: boolean;\n  isPatternPass: boolean;\n  startInputPass: boolean;\n  isLoaded: boolean;\n  isBlur: boolean;\n};\n\nexport class Input extends React.Component<InputProps, InputState> {\n  constructor(props: InputProps) {\n    super(props);\n    this.state = {\n      hasValue: false,\n      validValue: true,\n      showErrorText: false,\n      showPassword: false,\n      showPassValidationBlock: false,\n      isSpaceInPass: false,\n      isPatternPass: false,\n      startInputPass: false,\n      isLoaded: false,\n      isBlur: false\n    };\n  }\n\n  static defaultProps = {\n    validIcon: false,\n    showValidationMessage: true,\n    tabIndex: 0\n  };\n\n  componentDidMount() {\n    const { defaultValue } = this.props;\n\n    if (defaultValue) {\n      this.setState({ hasValue: true });\n    }\n  }\n\n  async onBlurValidationInput(event: any, onBlur: any, type: string) {\n    event.target.classList.remove('changed');\n    this.setState({\n      validValue: !event.target.validity.typeMismatch && !event.target.validity.patternMismatch,\n      showPassValidationBlock: event.target.value.length !== 0,\n      isBlur: type !== INPUT_TYPE.EMAIL\n    });\n    if (onBlur) {\n      this.setState({ isLoaded: true });\n      await onBlur(event);\n      this.setState({ isLoaded: false });\n    }\n  }\n\n  onInputFocus(event: any) {\n    this.setState({ isBlur: false });\n  }\n\n  validationPassword = (event: any, onChange: any) => {\n    const isSpaceInPass = /\\s/.test(event.target.value);\n    let isPatternPass = false;\n    if (this.props.pattern) {\n      isPatternPass = new RegExp(this.props.pattern).test(event.target.value);\n    }\n\n    if (event.target.value !== 0) {\n      this.setState({\n        startInputPass: event.target.value !== 0,\n        isSpaceInPass,\n        isPatternPass\n      });\n    }\n\n    if (!isSpaceInPass && isPatternPass && onChange) {\n      onChange(event);\n    }\n  };\n\n  showErrorText = () => {\n    this.setState({ showErrorText: !this.state.validValue || !this.state.hasValue });\n  };\n\n  showHidePassword() {\n    this.setState({ showPassword: !this.state.showPassword });\n  }\n\n  setTypePassword() {\n    return this.state.showPassword ? INPUT_TYPE.TEXT : INPUT_TYPE.PASSWORD;\n  }\n\n  showPassValidationBlock() {\n    this.setState({ showPassValidationBlock: true });\n  }\n\n  render() {\n    const {\n      idInput,\n      type,\n      name,\n      tabIndex = 0,\n      placeholder,\n      labelText,\n      onChange,\n      loadIcon,\n      validIcon,\n      textError,\n      refInput,\n      defaultValue,\n      autoComplete,\n      pattern,\n      validationStatusBeforeSubmit,\n      showValidationMessage,\n      isUserExist,\n      onBlur,\n      onFocus\n    } = this.props;\n    const { isBlur, isLoaded } = this.state;\n    return (\n      <InputContainer theme={this.props.theme} isUserExist={isUserExist || false}>\n        <InputElement\n          id={idInput}\n          ref={refInput}\n          type={type === INPUT_TYPE.PASSWORD ? this.setTypePassword() : type}\n          name={name}\n          placeholder={placeholder}\n          className={!this.state.hasValue ? 'is-empty' : 'full'}\n          tabIndex={tabIndex}\n          defaultValue={defaultValue}\n          autoComplete={autoComplete || ''}\n          pattern={pattern}\n          onBlur={event => {\n            this.setState({ hasValue: !!event.target.value });\n            this.onBlurValidationInput(event, onBlur, type);\n          }}\n          onFocus={(event: any) => {\n            if (type === INPUT_TYPE.PASSWORD) {\n              this.showPassValidationBlock();\n            }\n            if (onFocus) {\n              onFocus(event);\n            }\n            this.onInputFocus(event);\n          }}\n          onChange={\n            type === INPUT_TYPE.PASSWORD\n              ? (event: any) => this.validationPassword(event, onChange)\n              : onChange\n          }\n          onInvalid={this.showErrorText}\n          validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n          theme={this.props.theme}\n          isBlur={isBlur}\n        />\n        <InputLabel theme={this.props.theme} htmlFor={idInput}>\n          {labelText}\n        </InputLabel>\n        {validIcon && (\n          <ValidIcon theme={this.props.theme} name=\"check-mark-2\" size={12} isBlur={isBlur} />\n        )}\n        {loadIcon && isLoaded && (\n          <LoadWrapper data-test={\"loader\"}><Loader width={30} theme={this.props.theme} /></LoadWrapper>\n        )}\n        {textError && showValidationMessage && (\n          <ValidationMessageBlock>\n            <TextError\n              theme={this.props.theme}\n              className={!this.state.validValue ? 'active' : ''}\n              data-test=\"email-validation-status\"\n            >\n              <Icon name=\"exclamation-mark\" theme={this.props.theme} />\n              {textError}\n            </TextError>\n          </ValidationMessageBlock>\n        )}\n        {type === INPUT_TYPE.PASSWORD && (\n          <EyeIcon\n            role=\"button\"\n            tabIndex={0}\n            ariaLabel={\n              this.state.showPassword\n                ? localize('[label eye icon hide]')\n                : localize('[label eye icon show]')\n            }\n            name={this.state.showPassword ? 'eye-close' : 'eye-open'}\n            onClick={() => {\n              this.showHidePassword();\n            }}\n            onKeyDown={(event: any) => {\n              if (\n                [KEYS.ENTER.toLowerCase(), KEYS.SPACEBAR.toLowerCase()].includes(\n                  event.key.toLowerCase()\n                )\n              ) {\n                event.preventDefault();\n                this.showHidePassword();\n              }\n            }}\n            theme={this.props.theme}\n          />\n        )}\n        {type === INPUT_TYPE.PASSWORD && showValidationMessage && (\n          <ValidationMessageBlock className={this.state.showPassValidationBlock ? 'show' : 'hide'}>\n            <TextError\n              theme={this.props.theme}\n              className={\n                this.state.startInputPass && (this.state.isSpaceInPass ? 'invalid' : 'valid')\n              }\n            >\n              <Icon name=\"check-mark-2\" />\n              {localize('[validation pass space]')}\n            </TextError>\n            <TextError\n              className={\n                this.state.startInputPass && (this.state.isPatternPass ? 'valid' : 'invalid')\n              }\n              theme={this.props.theme}\n            >\n              <Icon name=\"check-mark-2\" />\n              {localize('[validation pass count char]')}\n            </TextError>\n          </ValidationMessageBlock>\n        )}\n      </InputContainer>\n    );\n  }\n}\n\nexport default withTheme(Input);\n","export { default } from './Input';\n","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { localize } from 'core/localization';\nimport { SVG_XML_NAMESPACE } from 'constants/common';\nimport { Figure } from './Figure.styled';\n\ntype TimeOutProps = {\n  theme: { [key: string]: any };\n};\n\nexport const TimeOut = (props: TimeOutProps) => (\n  <Figure\n    width=\"260\"\n    height=\"132\"\n    viewBox=\"0 0 260 132\"\n    version=\"1.1\"\n    xmlns={SVG_XML_NAMESPACE}\n    role=\"img\"\n    arialabel={`${localize('[aria label timeout image alt]')}`}\n  >\n    <defs>\n      <filter\n        id=\"filter-1\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n      <filter\n        id=\"filter-2\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n      <path id=\"path-1\" d=\"M60.567 10.928H68.56700000000001V18.928H60.567z\" />\n      <path\n        id=\"path-2\"\n        d=\"M40 0c3.314 0 6 2.686 6 6s-2.686 6-6 6-6-2.686-6-6 2.686-6 6-6zm0 2c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\"\n      />\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g fill={props.theme.colors.textColor} transform=\"translate(0 37)\">\n        <path\n          d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447 7.983c0 6.53-7.447 8.466-7.447\n          8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0 53.7 0 60.473C0 67.246 9.48 69 9.48\n          69h207.865s11.703-1.33 11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336\n          12.08-8.709 12.08-8.709l23.586-.816s12.31 1.814 12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260 .973 249.844 0 249.844 0L74.479.423z\"\n          filter=\"url(#filter-1)\"\n          opacity=\".02\"\n        />\n        <ellipse cx=\"130\" cy=\"91\" filter=\"url(#filter-2)\" opacity=\".1\" rx=\"35\" ry=\"4\" />\n      </g>\n      <g transform=\"translate(90)\">\n        <path\n          fill={props.theme.colors.mainColor}\n          d=\"M40 14c7.127 0 13.82 1.864 19.615 5.131l1.653-2.863 3.464 2L63 21.27C73.282 28.508 80 40.47 80 54c0 22.091-17.909 40-40 40S0 76.091 0\n          54s17.909-40 40-40zm0 6C21.222 20 6 35.222 6 54s15.222 34 34 34 34-15.222 34-34-15.222-34-34-34zm2-10v4h-4v-4h4z\"\n        />\n        <circle cx=\"40\" cy=\"54\" r=\"34\" fill={props.theme.colors.contentBodyColor} />\n        <path\n          fill={props.theme.colors.textColor}\n          d=\"M41 80v6h-2v-6h2zm-10.366-4.098l1.732 1-3 5.196-1.732-1 3-5.196zm19.732 0l3 5.196-1.732 1-3-5.196 1.732-1zm7.61-5.055l4.242 4.242-1.414\n          1.415-4.243-4.243 1.414-1.414zm-35.562-.675l1.414 1.414-4.242 4.242-1.414-1.414 4.242-4.242zm-6.316-6.538l1 1.732-5.196 3-1-1.732 5.196-3zm46.804-1l5.196 3-1\n          1.732-5.196-3 1-1.732zM14 53v2H8v-2h6zm58 0v2h-6v-2h6zm-4.902-11.366l1 1.732-5.196 3-1-1.732 5.196-3zm-55.196-2l5.196 3-1 1.732-5.196-3 1-1.732zm48.512-7.462l1.414\n          1.414-4.242 4.242-1.414-1.414 4.242-4.242zm-41.345-.747l4.242 4.242-1.414 1.415-4.243-4.243 1.415-1.414zm31.565-6.523l1.732 1-3 5.196-1.732-1 3-5.196zm-22.268 0l3\n          5.196-1.732 1-3-5.196 1.732-1zM41 22v6h-2v-6h2z\"\n        />\n        <path\n          fill={props.theme.colors.mainColor}\n          d=\"M36.207 23.447l7.045 31.628c.131.589.02 1.205-.307 1.712l-.461.713.84 4.378c.194 1.016-.457\n          2.002-1.468 2.222-.035.008-.07.014-.105.02-.955.147-1.849-.507-1.996-1.462l-.759-4.915-.8-.94c-.326-.38-.514-.858-.537-1.358l-1.452-31.998zm4.408\n          28.255c-.882-.236-1.794.31-2.038 1.22-.244.91.273 1.839 1.155 2.075.882.236 1.794-.31 2.038-1.22.244-.91-.273-1.839-1.155-2.075zM38 10H42V14H38z\"\n        />\n        <g transform=\"rotate(30 64.567 14.928)\">\n          <use fill={props.theme.colors.mainColor} xlinkHref=\"#path-1\" />\n          <use fill=\"#000\" fillOpacity=\".1\" xlinkHref=\"#path-1\" />\n        </g>\n        <use fill={props.theme.colors.mainColor} xlinkHref=\"#path-2\" />\n        <use fill=\"#000\" fillOpacity=\".1\" xlinkHref=\"#path-2\" />\n      </g>\n    </g>\n  </Figure>\n);\n\nexport default withTheme(TimeOut);\n","import styled from 'styled-components';\nimport { Button } from 'components/common';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport media from 'components/mixins/media';\nimport { secondaryFontH1, secondaryFontSmallText } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nexport const TimedOutWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n`;\n\nexport const TitleElement = styled.h1`\n  ${secondaryFontH1}\n  font-weight: normal;\n  line-height: 44px;\n  text-align: center;\n  margin-top: 55px;\n  margin-bottom: 28px;\n`;\n\nexport const DescriptionWrapper = styled.p`\n  ${secondaryFontSmallText}\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 auto;\n  margin-bottom: 40px;\n  font-weight: normal;\n  ${media.xlarge`\n    font-size: 14px;\n    line-height: 22px;\n  `};\n`;\n\nexport const ButtonElement = styled(Button)`\n  ${buttonDefaultStyle};\n  flex: 0 0 auto;\n  width: 227px;\n  background-color: ${props => props.theme.colors.mainColor};\n  font-size: 14px;\n  margin-bottom: 24px;\n  &:hover {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  &:focus {\n    outline: 1px solid black;\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n\n  &.js-focus-visible :focus:not(.focus-visible) {\n    outline: none;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAppState } from 'store/types';\nimport { localize } from 'core/localization';\nimport { withRouter } from 'react-router-dom';\nimport { CssAnimation } from 'components/common';\nimport { BUTTON } from 'constants/components';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { RESULTS_PATH } from 'constants/navigation';\nimport TimeOut from 'assets/figures/TimeOut';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { TimerStatus } from 'constants/timer';\nimport { shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { getCourseStructure } from 'store/course/selectors';\nimport { getUnansweredQuestions } from 'store/questions/selectors';\nimport * as treeOfContentActions from 'store/treeOfContent/actions';\nimport * as courseActions from 'store/course/actions';\nimport { CourseStructure } from 'components/timer/types';\nimport {\n  DescriptionWrapper,\n  TitleElement,\n  TimedOutWrapper,\n  ButtonElement\n} from './TimedOut.styled';\n\ntype TimedOutProps = {\n  closePopup(): void;\n  navigateToUrl(url: string): void;\n  submitAllQuestionsEnabled: boolean;\n  unansweredQuestions: any[];\n  courseStructure: CourseStructure;\n  timerActions: { [key: string]: any };\n  tocActions: { [key: string]: any };\n  mappedCourseActions: { [key: string]: any };\n  popupSettings: { [key: string]: any };\n};\n\nconst updateUnAnsweredQuestions = (\n  submitAllQuestionsEnabled: boolean,\n  unansweredQuestions: any[],\n  tocActions: { [key: string]: any },\n  courseStructure: CourseStructure,\n  mappedCourseActions: any\n) => {\n  if (submitAllQuestionsEnabled) {\n    tocActions.submitAllAnswerOnce(courseStructure.sections);\n  } else {\n    mappedCourseActions.courseTimeOutEmitter(unansweredQuestions);\n  }\n};\n\nexport const TimedOut: React.FunctionComponent<TimedOutProps> = (props: TimedOutProps) => {\n  const {\n    submitAllQuestionsEnabled,\n    unansweredQuestions,\n    courseStructure,\n    mappedCourseActions,\n    timerActions,\n    tocActions,\n    closePopup,\n    navigateToUrl\n  } = props;\n\n  const goToResults = async () => {\n    timerActions.setTimerStatus(TimerStatus.STOPPED);\n    updateUnAnsweredQuestions(\n      submitAllQuestionsEnabled,\n      unansweredQuestions,\n      tocActions,\n      courseStructure,\n      mappedCourseActions\n    );\n    closePopup();\n    navigateToUrl(RESULTS_PATH);\n  };\n\n  return (\n    <CssAnimation type={CssAnimation.AnimationType.fadeInDown}>\n      <TimedOutWrapper>\n        <TimeOut />\n        <TitleElement>{localize('[timed out title]')}</TitleElement>\n        <DescriptionWrapper>{localize('[timed out description]')}</DescriptionWrapper>\n        <ButtonElement layout={BUTTON.LAYOUT.PRIMARY} onClick={goToResults}>\n          {localize('[go to results]')}\n        </ButtonElement>\n      </TimedOutWrapper>\n    </CssAnimation>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    submitAllQuestionsEnabled: shouldSubmitAllQuestions(state),\n    courseStructure: getCourseStructure(state),\n    unansweredQuestions: getUnansweredQuestions(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    timerActions: bindActionCreators(courseTimerActions, dispatch),\n    tocActions: bindActionCreators(treeOfContentActions, dispatch),\n    mappedCourseActions: bindActionCreators(courseActions, dispatch)\n  };\n}\n\nexport default withRouter(withNavigation(connect(mapStateToProps, mapDispatchToProps)(TimedOut)));\n","import { ProgressStatus } from 'constants/progressStatus';\n\nconst verbsObject: Record<ProgressStatus, string> = {\n  [ProgressStatus.PASSED]: '[passed]',\n  [ProgressStatus.FAILED]: '[not passed]',\n  [ProgressStatus.IN_PROGRESS]: '[not passed yet]'\n};\n\nexport const getProgressStatusLocalizationKey = (status: number) => {\n  return verbsObject[status as ProgressStatus];\n};\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { secondaryFont, mainFontText } from 'components/mixins/typography';\nimport { Icon, Text, ProgressBar as ProgressComponent } from 'components/common';\n\nexport const ProgressBar = styled(ProgressComponent)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n`;\n\nexport const SectionContentWrapper = styled.section`\n  position: relative;\n  flex: 1 1 auto;\n  width: 100%;\n  height: inherit;\n  min-width: 0;\n  padding: 20px 30px 35px;\n  ${media.large`\n    padding: 20px 30px;\n  `};\n  ${media.mobile`\n    margin-top: 25px;\n    padding: 0 0 50px;\n  `};\n`;\n\nexport const SectionTitle = styled(Text)`\n  height: 85px;\n  max-height: 85px;\n  ${mainFontText}\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  font-style: normal;\n  && {\n    font-size: 22px;\n  }\n  &.section-title {\n    line-height: 1.3;\n  }\n  overflow: hidden;\n\n  ${media.medium`\n    font-size: 20px;\n  `}\n\n  ${media.mobile`\n    height: initial;\n    max-height: initial;\n    padding: 0 30px 50px;\n  `};\n`;\n\nexport const SectionSubText = styled(Text)`\n  font-size: 11px;\n`;\n\nexport const IconArrowRight = styled(Icon)`\n  margin-left: 8px;\n`;\n\nexport const Footer = styled.footer`\n  position: absolute;\n  right: 30px;\n  left: 30px;\n  bottom: 15px;\n  display: flex;\n  justify-content: flex-end;\n  font-weight: 600;\n  font-size: 12px;\n  ${secondaryFont};\n  opacity: 1;\n  transition: bottom 0.2s, opacity 0.2s;\n  &.hover-state {\n    bottom: 0;\n    justify-content: flex-end;\n    align-items: center;\n    opacity: 0;\n  }\n  ${media.mobile`\n    right: auto;\n    bottom: 60px;\n    &.hover-state {\n      bottom: -24px;\n    }\n  `};\n`;\n\nconst getColor = (props: any) =>\n  props.isPassed && !props.isOverallMasteryScore\n    ? props.theme.colors.correctColor\n    : props.theme.colors.textColor;\n\ntype SectionProgressStatusWrapperProps = {\n  isPassed: boolean;\n  isOverallMasteryScore: boolean;\n};\nexport const SectionProgressStatusWrapper = styled.div<SectionProgressStatusWrapperProps>`\n  display: flex;\n  align-items: center;\n  color: ${props => getColor(props)};\n  opacity: ${props => (props.isPassed && !props.isOverallMasteryScore ? 1 : 0.4)};\n\n  ${SectionSubText} {\n    color: ${props => getColor(props)};\n  }\n`;\n\ntype SectionProgressStatusIconWrapperProps = {\n  isPassed: boolean;\n};\nexport const SectionProgressStatusIconWrapper = styled.span<SectionProgressStatusIconWrapperProps>`\n  display: ${props => (props.isPassed ? 'flex' : 'none')};\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  font-size: 5px;\n  color: ${props => props.theme.colors.buttonTextColor};\n  background-color: ${props => props.theme.colors.correctColor};\n  border-radius: 50%;\n`;\n","import styled, { css } from 'styled-components';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { Footer, SectionSubText } from '../SectionContent/SectionContent.styled';\n\nexport const SectionsList = styled.ul.attrs(props => ({\n  'data-test': 'sections-list'\n}))`\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\ntype SectionsListItemProps = {\n  isDummy?: boolean;\n};\nexport const SectionsListItem = styled.li<SectionsListItemProps>`\n  position: relative;\n  bottom: 0;\n  width: 100%;\n  max-width: 880px;\n  margin: 0 auto 40px;\n  padding: 0;\n\n  ${media.mobile`\n    height: auto;\n    padding: 0 30px;\n  `};\n\n  ${props =>\n    props.isDummy &&\n    css`\n      background-color: ${props.theme.colors.textColor};\n      opacity: 0.02;\n      ${media.mobile`\n        display: none;\n      `};\n    `};\n\n  ${props =>\n    !props.isDummy &&\n    css`\n      transition: bottom 0.1s linear, box-shadow 0.1s linear;\n      &:hover {\n        bottom: 5px;\n        box-shadow: 0 2px 20px 0 ${transparentize(defaultBoxShadowColor, 0.1)});\n      }\n    `};\n  & > .reviewable-container {\n    width: 100%;\n  }\n`;\n\ntype SectionsButtonProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isDummy: boolean;\n  isPassed: boolean;\n  isOverallMasteryScore: boolean;\n};\nexport const SectionsButton = styled.button.attrs((props: SectionsButtonProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel,\n  disabled: props.isDummy,\n  'aria-hidden': props.isDummy\n}))<SectionsButtonProps>`\n  ${buttonDefaultStyle};\n  position: relative;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  max-width: 880px;\n  height: 140px;\n  margin: 0 auto;\n  padding: 0;\n  background-color: ${props => props.theme.colors.textColor};\n  text-align: left;\n  opacity: 0.02;\n\n  &:focus {\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n  ${media.mobile`\n    align-items: initial;\n    flex-direction: column;\n    height: auto;\n    padding: 30px 0 0;\n  `};\n\n  ${props =>\n    props.isDummy &&\n    media.mobile`\n      display: none;\n    `};\n\n  ${props =>\n    !props.isDummy &&\n    css`\n      box-shadow: 0 2px 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n      transition: bottom 0.1s linear, box-shadow 0.1s linear;\n      background-color: ${props.theme.colors.contentBodyColor};\n      opacity: 1;\n      cursor: pointer;\n      ${SectionSubText} {\n        color: ${props.isPassed && !props.isOverallMasteryScore\n          ? props.theme.colors.correctColor\n          : props.theme.colors.textColor};\n      }\n      &:hover ${Footer}, &:focus ${Footer} {\n        bottom: 0;\n        opacity: 0;\n        &.hover-state {\n          bottom: 15px;\n          opacity: 1;\n        }\n        ${media.mobile`\n          bottom: 60px;\n          opacity: 1;\n          &.hover-state {\n            opacity: 0;\n            bottom: 0;\n          }\n        `};\n      }\n    `};\n`;\n","import styled from 'styled-components';\nimport { Text, Icon, Button } from 'components/common';\nimport { transparentize } from 'utils/color';\nimport * as typography from 'components/mixins/typography';\nimport media from 'components/mixins/media';\n\nexport const CollapseWrapper = styled.div`\n  ${typography.secondaryFontText};\n  background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  border-left: 2px solid ${props => props.theme.colors.mainColor};\n  position: relative;\n  font-size: 12px;\n  ${media.mobile`\n    margin-top: -40px;\n  `};\n`;\n\nexport const CollapseInnerWrapper = styled.div`\n  padding: 34px;\n`;\n\nexport const CollapseButton = styled(Button)`\n  position: absolute;\n  display: block;\n  top: 100px;\n  left: 135px;\n  padding: 6px 15px 10px;\n  border: 0;\n  opacity: 0.5;\n  background: none;\n  user-select: none;\n  transition: opacity 0.2s;\n  cursor: pointer;\n  height: 40px;\n\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:hover,\n  &:focus {\n    background: none;\n  }\n\n  ${media.tablet`\n    left: 117px;\n    padding: 6px 15px 10px 32px;\n  `};\n  ${media.mobile`\n    position: relative;\n    top: -55px;\n    left: 30px;\n    padding: 0;\n  `};\n\n  > span {\n    display: flex;\n  }\n`;\n\nexport const ButtonText = styled(Text).attrs({\n  'data-test': 'learning-objective-button-text'\n})`\n  font-family: ${props => props.theme.fonts.secondaryFont.fontFamily};\n  color: ${props => props.theme.colors.textColor};\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 20px !important;\n`;\n\nexport const IconClose = styled(Icon)`\n  position: absolute;\n  top: 17px;\n  right: 17px;\n  padding: 10px;\n  opacity: 0.5;\n  transition: opacity 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nexport const IconCircleObjective = styled(Icon)`\n  font-size: 12px;\n  margin-right: 5px;\n  line-height: 20px;\n`;\n\nexport const LearningObjectiveText = styled(Text)`\n  ${typography.secondaryFontText};\n  padding-bottom: 8px;\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nexport const CollapseContent = styled(Text)`\n  ${typography.secondaryFontText};\n  font-size: 12px;\n  line-height: 1.92;\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { Collapse } from 'components/common';\n\nimport { KEYS } from 'constants/common';\nimport {\n  CollapseWrapper,\n  CollapseInnerWrapper,\n  CollapseButton,\n  ButtonText,\n  IconCircleObjective,\n  IconClose,\n  LearningObjectiveText,\n  CollapseContent\n} from './SectionLearningObjective.styled';\n\ntype SectionLearningObjectiveProps = {\n  learningObjective: string;\n};\n\ntype SectionLearningObjectiveState = {\n  isExpanded: boolean;\n};\n\nclass SectionLearningObjective extends React.Component<\n  SectionLearningObjectiveProps,\n  SectionLearningObjectiveState\n> {\n  constructor(props: SectionLearningObjectiveProps) {\n    super(props);\n    this.state = { isExpanded: false };\n  }\n\n  toggleExpanded = () => {\n    this.setState((prevState: SectionLearningObjectiveState) => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  onKeyDown = (event: any) => {\n    if (\n      event.key?.toLowerCase() === KEYS.SPACEBAR.toLowerCase() ||\n      event.key?.toLowerCase() === KEYS.ENTER.toLowerCase()\n    ) {\n      event.preventDefault();\n      this.toggleExpanded();\n    }\n  };\n\n  render() {\n    const { isExpanded } = this.state;\n    const { learningObjective } = this.props;\n    return (\n      <React.Fragment>\n        <CollapseButton\n          tabIndex={0}\n          onKeyDown={(event: any) => this.onKeyDown(event)}\n          onClick={() => this.toggleExpanded()}\n        >\n          <IconCircleObjective name=\"circle-objective\" size={11} color=\"textColor\" />\n          <ButtonText>\n            {localize(isExpanded ? '[hide learning objective]' : '[show learning objective]')}\n          </ButtonText>\n        </CollapseButton>\n\n        <CollapseWrapper>\n          <Collapse isExpanded={isExpanded}>\n            <CollapseInnerWrapper>\n              <IconClose\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={(event: any) => this.onKeyDown(event)}\n                onClick={() => this.toggleExpanded()}\n                name=\"close\"\n                size={7}\n                color=\"textColor\"\n              />\n              <LearningObjectiveText appearance={'p'}>\n                {localize('[learning objective]')}\n              </LearningObjectiveText>\n              <CollapseContent appearance={'p'}>{learningObjective}</CollapseContent>\n            </CollapseInnerWrapper>\n          </Collapse>\n        </CollapseWrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SectionLearningObjective;\n","export const getImageDimensions = (url: string) =>\n  new Promise((resolve, reject) => {\n    let img = new Image(); // eslint-disable-line no-undef\n\n    img.onload = loadHandler;\n    img.onerror = errorHandler;\n    img.src = url;\n\n    function loadHandler(this: any) {\n      resolve({ width: this.width, height: this.height });\n    }\n    function errorHandler() {\n      reject(new Error(`Can't load image by url ${url}`));\n    }\n  });\n\nexport const getThumbnailUrl = (url: string, width: number, height: number) => `${url}?width=${width}&height=${height}`;\n\nexport const getImageNameByUrl = (url: string) => {\n  let imageName = url.substring(url.indexOf('image/') + 6);\n  imageName = imageName.substring(\n    0,\n    imageName.length - (imageName.length - imageName.indexOf('?width'))\n  );\n  return imageName;\n};\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { MEDIA_XSMALL } from 'constants/common';\nimport { transparentize } from 'utils/color';\n\ntype ContainerProps = {\n  isBgColorTransparent?: boolean;\n}\nexport const Container = styled.figure<ContainerProps>`\n  flex: 0 0 auto;\n  width: 120px;\n  height: inherit;\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  ${media.mobile`\n    width: 100%;\n    height: 170px;\n    padding: 0 30px;\n    background: transparent;\n  `};\n  @media (max-width: ${MEDIA_XSMALL + 55}px) {\n    width: 100%;\n    height: 130px;\n  }\n`;\n\ntype BackgroundImageProps = {\n  bgSize: any;\n  url: string;\n}\n\nexport const BackgroundImage = styled.div<BackgroundImageProps>`\n  width: 100%;\n  height: 100%;\n  background-size: ${props => (props.bgSize ? props.bgSize : 'initial')};\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-image: url(${props => props.url});\n`;\n\nexport const DefaultSectionImage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DefaultSectionImageIcon = styled.div`\n  font-size: 30px;\n  color: ${props => props.theme.colors.textColor};\n  opacity: 0.3;\n`;\n","import * as React from 'react';\nimport { imageResizerQueryPattern, supportedBgSizes } from 'constants/common';\nimport { getImageDimensions, getThumbnailUrl } from 'utils/image';\nimport { Container, BackgroundImage } from './SectionImage.styled';\n\ntype SectionImageProps = {\n  imageUrl: string\n};\n\ntype SectionImageState = {\n  bgSize: any;\n  isImageLoading: boolean;\n  imageUrl: string;\n}\n\nexport class SectionImage extends React.Component<SectionImageProps, SectionImageState> {\n  isUnmounted: boolean;\n  imageDimensions: any;\n\n  constructor(props: SectionImageProps) {\n    super(props);\n    this.isUnmounted = false;\n    this.imageDimensions = {\n      width: 255,\n      height: 170\n    };\n    this.state = {\n      bgSize: supportedBgSizes.initial,\n      isImageLoading: true,\n      imageUrl: props.imageUrl\n    };\n  }\n\n  _getOriginalImageUrl() {\n    const { imageUrl } = this.props;\n    let originalImage = imageUrl;\n    const coincidences = imageResizerQueryPattern.exec(imageUrl);\n    if (coincidences && coincidences.length) {\n      originalImage = imageUrl.substring(0, coincidences.index);\n    }\n    return originalImage;\n  }\n\n  async getBgProps() {\n    try {\n      const { width, height } = this.imageDimensions;\n      let imageUrl = this._getOriginalImageUrl();\n      const size: any = await getImageDimensions(imageUrl);\n      let bgSize = 'initial';\n      if (size.width >= width || size.height >= height) {\n        imageUrl = getThumbnailUrl(imageUrl, width, height);\n        bgSize = 'contain';\n      }\n      if (size.width >= width && size.height >= height) {\n        imageUrl += '&scaleBySmallerSide=true';\n        bgSize = 'cover';\n      }\n\n      if (!this.isUnmounted) {\n        this.setState({ bgSize, isImageLoading: false, imageUrl });\n      }\n    } catch (e) {\n      if (!this.isUnmounted) {\n        this.setState({ bgSize: supportedBgSizes.initial, isImageLoading: false });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getBgProps();\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  render() {\n    const { bgSize, isImageLoading, imageUrl } = this.state;\n    if (isImageLoading) {\n      return <Container />;\n    }\n    return (\n      <Container isBgColorTransparent>\n        <BackgroundImage url={imageUrl} bgSize={bgSize} />\n      </Container>\n    );\n  }\n}\n\nexport default SectionImage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getProgressStatusLocalizationKey } from 'utils/localization';\nimport { isPassed, isFailed } from 'utils/comparison';\nimport { localize } from 'core/localization';\nimport { ShapedIcon } from 'components/common';\nimport { isOverallMasteryScore, shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport {\n  SectionContentWrapper,\n  SectionTitle,\n  Footer,\n  SectionProgressStatusIconWrapper,\n  SectionProgressStatusWrapper,\n  SectionSubText,\n  ProgressBar,\n  IconArrowRight\n} from './SectionContent.styled';\nimport { RootAppState } from 'store/types';\n\nexport const LIST_ITEM_TITLE_LENGTH = 45;\n\ntype SectionContentProps = {\n  progress: number;\n  title: string;\n  status: number;\n  affectsProgress?: boolean;\n  isSubmitAtOnce?: boolean;\n  isCourseSubmitted?: boolean;\n  affectProgressQuestionsCountInSection?: number;\n  answeredSectionQuestionsCount?: number;\n  correctlyAffectProgressQuestionsCountInSection?: number;\n  sectionProgress?: number;\n  isCourseProgress: boolean;\n};\n\nfunction SectionContent({\n  title,\n  status,\n  progress,\n  affectsProgress,\n  isSubmitAtOnce,\n  isCourseSubmitted,\n  affectProgressQuestionsCountInSection,\n  answeredSectionQuestionsCount = 0,\n  correctlyAffectProgressQuestionsCountInSection,\n  sectionProgress = 0,\n  isCourseProgress\n}: SectionContentProps) {\n  const maxLength = LIST_ITEM_TITLE_LENGTH;\n  const isSectionPassed = isPassed(status);\n  const isSectionFailed = isFailed(status);\n  return (\n    <SectionContentWrapper>\n      <SectionTitle maxLength={maxLength} appearance=\"h4\" className=\"section-title\">\n        {title}\n      </SectionTitle>\n      <Footer>\n        {affectsProgress && (\n          <SectionProgressStatusWrapper\n            isPassed={\n              !!(\n                (!isSubmitAtOnce && isSectionPassed) ||\n                (isSubmitAtOnce && isCourseSubmitted && isSectionPassed)\n              )\n            }\n            isOverallMasteryScore={isCourseProgress}\n          >\n            {isSectionPassed && !isCourseProgress && (\n              <SectionProgressStatusIconWrapper\n                isPassed={\n                  !!(\n                    (!isSubmitAtOnce && isSectionPassed) ||\n                    (isSubmitAtOnce && isCourseSubmitted && isSectionPassed)\n                  )\n                }\n              >\n                <ShapedIcon\n                  name=\"ok\"\n                  color=\"buttonTextColor\"\n                  shapeColor=\"correctColor\"\n                  size=\"small\"\n                />\n              </SectionProgressStatusIconWrapper>\n            )}\n            {isSectionFailed && !isCourseProgress && (\n              <ShapedIcon\n                name=\"close\"\n                color=\"textColor\"\n                shapeColor=\"contentBodyColor\"\n                size=\"small\"\n              />\n            )}\n            <SectionSubText>\n              {isSubmitAtOnce\n                ? renderSubmitOnceSectionText(\n                    isCourseProgress,\n                    status,\n                    isCourseSubmitted,\n                    correctlyAffectProgressQuestionsCountInSection,\n                    affectProgressQuestionsCountInSection,\n                    answeredSectionQuestionsCount\n                  )\n                : renderSectionText(\n                    isCourseProgress,\n                    status,\n                    correctlyAffectProgressQuestionsCountInSection,\n                    affectProgressQuestionsCountInSection\n                  )}\n            </SectionSubText>\n          </SectionProgressStatusWrapper>\n        )}\n      </Footer>\n      <Footer className=\"hover-state\">\n        <SectionSubText>{localize('[start section]')}</SectionSubText>\n        <IconArrowRight name=\"arrow-right\" size={8} color=\"textColor\" />\n      </Footer>\n      {isSubmitAtOnce && isCourseSubmitted && <ProgressBar progress={progress} opacity={1.0} />}\n      {isSubmitAtOnce && !isCourseSubmitted && (\n        <ProgressBar progress={sectionProgress} progressColor=\"textColor\" opacity={0.3} />\n      )}\n      {!isSubmitAtOnce && <ProgressBar progress={progress} opacity={1.0} />}\n    </SectionContentWrapper>\n  );\n}\nconst renderSubmitOnceSectionText = (\n  isCourseProgress: boolean,\n  status: number,\n  isCourseSubmitted = false,\n  correctlyAffectProgressQuestionsCountInSection?: number,\n  affectProgressQuestionsCountInSection?: number,\n  answeredSectionQuestionsCount?: number\n) => {\n  if (isCourseProgress) {\n    if (isCourseSubmitted) {\n      return localize('[x y answered correctly]', {\n        countCorrectlyAnsweredQuestionsInSection: correctlyAffectProgressQuestionsCountInSection,\n        countQuestionsInSection: affectProgressQuestionsCountInSection\n      });\n    }\n    return localize('[x y questions answered]', {\n      countAnsweredQuestionsInSection: answeredSectionQuestionsCount,\n      countQuestionsInSection: affectProgressQuestionsCountInSection\n    });\n  }\n  if (isCourseSubmitted) {\n    return localize(getProgressStatusLocalizationKey(status));\n  }\n  return localize('[x y questions answered]', {\n    countAnsweredQuestionsInSection: answeredSectionQuestionsCount,\n    countQuestionsInSection: affectProgressQuestionsCountInSection\n  });\n};\n\nconst renderSectionText = (\n  isCourseProgress: boolean,\n  status: number,\n  correctlyAffectProgressQuestionsCountInSection?: number,\n  affectProgressQuestionsCountInSection?: number\n) => {\n  if (isCourseProgress) {\n    return localize('[x y answered correctly]', {\n      countCorrectlyAnsweredQuestionsInSection: correctlyAffectProgressQuestionsCountInSection,\n      countQuestionsInSection: affectProgressQuestionsCountInSection\n    });\n  } else {\n    return localize(getProgressStatusLocalizationKey(status));\n  }\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isCourseProgress: isOverallMasteryScore(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state)\n  };\n}\nexport default connect(mapStateToProps)(SectionContent);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getProgressStatusLocalizationKey } from 'utils/localization';\nimport { isPassed } from 'utils/comparison';\nimport { localize } from 'core/localization';\nimport Reviewable from 'components/review/Reviewable';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport { RootAppState } from 'store/types';\nimport {\n  isOverallMasteryScore,\n  isShowContentPagesEnabled,\n  shouldSubmitAllQuestions\n} from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport { SectionsList, SectionsListItem, SectionsButton } from './SectionsList.styled';\nimport SectionLearningObjective from '../SectionLearningObjective';\nimport SectionImage from '../SectionImage';\nimport SectionContent from '../SectionContent';\n\nexport const COUNT_OF_DUMMY_ELEMENTS = 3;\n\nexport const getDummyElements = (length: any) => {\n  let dummyElements: Array<any> = [];\n  if (length < COUNT_OF_DUMMY_ELEMENTS) {\n    dummyElements = Array.from({ length: COUNT_OF_DUMMY_ELEMENTS - length }, (v, index) => (\n      <SectionsListItem key={index + length} isDummy={true} />\n    ));\n  }\n  return dummyElements;\n};\n\ntype SectionsListComponentProps = {\n  sections: Array<any>;\n  navigateToQuestion(id: string, question: string, isCourseOnOnePage: boolean): void;\n  learningObjective?: string;\n  navigateToLearningObjective(id: string, isCourseOnOnePage: boolean): void;\n  isCourseOnOnePage?: boolean;\n  isSubmitAtOnce?: boolean;\n  isCourseSubmitted?: boolean;\n  isCourseProgress?: boolean;\n  setSectionRefs?(ref: any): void;\n  isShowContentPagesEnabled: boolean;\n};\n\nexport const SectionsListComponent = ({\n  sections,\n  navigateToQuestion,\n  navigateToLearningObjective,\n  setSectionRefs,\n  isCourseOnOnePage = false,\n  isSubmitAtOnce = false,\n  isCourseSubmitted = false,\n  isCourseProgress = false,\n  isShowContentPagesEnabled = false\n}: Readonly<SectionsListComponentProps>) => {\n  const { length } = sections;\n  const dummyElements = getDummyElements(length);\n\n  return (\n    <SectionsList>\n      {sections.map((section, index) => {\n        const questionId = section.questions[0];\n        const {\n          id,\n          imageUrl,\n          status,\n          learningObjective,\n          score,\n          title,\n          affectsProgress,\n          affectProgressQuestionsCountInSection,\n          correctlyAffectProgressQuestionsCountInSection,\n          answeredSectionQuestionsCount,\n          sectionProgress\n        } = section;\n\n        const isSectionPassed = () => {\n          if (isSubmitAtOnce) {\n            return !!(isCourseSubmitted && isPassed(status));\n          }\n          return isPassed(status);\n        };\n\n        return (\n          <SectionsListItem key={index}>\n            <Reviewable\n              context={{\n                type: REVIEW_COMMENT_TYPES.SECTION,\n                property: REVIEW_COMMENT_PROPERTIES.TITLE,\n                id,\n                title\n              }}\n            >\n              <SectionsButton\n                isDummy={false}\n                ariaLabel={`${localize('[aria label start section]')} ${title} ${localize(\n                  getProgressStatusLocalizationKey(status)\n                )}`}\n                isPassed={isSectionPassed()}\n                tabIndex={0}\n                onClick={() =>\n                  learningObjective && isShowContentPagesEnabled\n                    ? navigateToLearningObjective(id, isCourseOnOnePage)\n                    : navigateToQuestion(id, questionId, isCourseOnOnePage)\n                }\n                isOverallMasteryScore={isCourseProgress}\n                ref={setSectionRefs}\n              >\n                <SectionImage imageUrl={imageUrl} />\n                <SectionContent\n                  progress={score}\n                  sectionProgress={sectionProgress}\n                  title={title}\n                  status={status}\n                  affectsProgress={affectsProgress}\n                  affectProgressQuestionsCountInSection={affectProgressQuestionsCountInSection}\n                  answeredSectionQuestionsCount={answeredSectionQuestionsCount}\n                  correctlyAffectProgressQuestionsCountInSection={\n                    correctlyAffectProgressQuestionsCountInSection\n                  }\n                />\n              </SectionsButton>\n              {learningObjective && isShowContentPagesEnabled && (\n                <SectionLearningObjective learningObjective={learningObjective} />\n              )}\n            </Reviewable>\n          </SectionsListItem>\n        );\n      })}\n      {dummyElements.length !== 0 && dummyElements.map(dummy => dummy)}\n    </SectionsList>\n  );\n};\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    isCourseProgress: isOverallMasteryScore(state),\n    isShowContentPagesEnabled: isShowContentPagesEnabled(state)\n  };\n}\n\nexport default connect(mapStateToProps)(SectionsListComponent);\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { mainFontH1 } from 'components/mixins/typography';\nimport { Text, ProgressBar, ProgressResult } from 'components/common';\nimport { MEDIA_MEDIUM } from 'constants/common';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport Icon from 'components/common/Icon';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: relative;\n  min-width: 0;\n  min-height: 100vh;\n  max-height: 100%;\n  ${props => getCustomScrollbars(props.theme.colors.coverBgOverlayTextColor)};\n  ${media.tablet`\n    height: auto;\n  `};\n  @media (max-width: ${MEDIA_MEDIUM - 24}px) {\n    flex: 0 0 auto;\n    min-height: 0;\n  }\n`;\n\nexport const CourseInfoContainer = styled.div`\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  padding: 56px 80px;\n  ${media.large`\n    padding: 56px 40px;\n  `}\n  ${media.tablet`\n    height: auto;\n  `};\n  ${media.mobile`\n    padding: 80px 30px;\n  `};\n`;\n\nexport const CourseInfoWrapper = styled.div`\n  margin: 0 auto;\n\n  h1 {\n    ${mainFontH1}\n    color: ${props => props.theme.colors.coverBgOverlayTextColor};\n    text-decoration: none;\n    font-style: normal;\n\n    &:first-child {\n      font-size: 48px;\n      line-height: 1.2;\n    }\n  }\n\n  ${media.medium`\n    h1 {\n      &:first-child {\n        padding-right: 22px;\n        font-size: 40px;\n      }\n    }\n  `}\n`;\n\nexport const ContentsContainer = styled.div`\n  width: 100%;\n\n  h2,\n  h3,\n  h4 {\n    margin-top: 0;\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\ntype CourseLogoType = {\n  logoUrl: string;\n  alt: any;\n};\nexport const CourseLogo = styled.img.attrs((props: CourseLogoType) => ({\n  src: props.logoUrl,\n  alt: props.alt\n}))<CourseLogoType>`\n  max-width: 240px;\n  max-height: 100px;\n\n  ${media.tablet`\n    max-width: 200px;\n    max-height: 80px;\n  `};\n\n  ${media.mobile`\n    max-width: 160px;\n    max-height: 60px;\n  `};\n`;\n\nexport const ProgressSectionsWrapper = styled.div`\n  display: flex;\n  margin-top: 56px;\n  margin-bottom: 8px;\n`;\n\nexport const ProgressPerSection = styled(ProgressBar)`\n  height: 4px;\n  margin: 0 3px;\n  border-radius: 2px;\n  background: ${props => transparentize(props.theme.colors.coverBgOverlayTextColor, 0.1)};\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\n\nexport const ProgressMasteryScore = styled(ProgressResult)`\n  margin-top: 46px;\n  height: 4px;\n  border-radius: 2px;\n  background: ${props => transparentize(props.theme.colors.coverBgOverlayTextColor, 0.1)};\n`;\n\nexport const ProgressCaption = styled(Text)`\n  padding-top: 4px;\n  display: block;\n  margin-bottom: 44px;\n  font-size: 10px;\n  font-weight: bold;\n  line-height: 1;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.coverBgOverlayTextColor};\n  opacity: 0.7;\n`;\n\nexport const TimerInfoWrapper = styled.div`\n  display: flex;\n  margin-top: 45px;\n  align-items: center;\n`;\n\nexport const TimerIcon = styled(Icon)`\n  color: ${props => props.theme.colors.coverBgOverlayTextColor};\n  font-size: 18px;\n  margin-right: 12px;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { isPassed } from 'utils/comparison';\nimport { Text, Separator } from 'components/common';\nimport {\n  getCourseTitle,\n  getCourseIntroductions,\n  getScore,\n  isAttemptSubmitted\n} from 'store/course/selectors';\nimport {\n  getMasteryScoreValue,\n  isOverallMasteryScore,\n  getAlternativeLogo,\n  shouldSubmitAllQuestions,\n  getTimerEnabled,\n  getTimerLimit,\n  isQuestionPoolEnabled\n} from 'store/settings/selectors';\nimport {\n  getAffectProgressSectionsCount,\n  getSectionsPassedCount,\n  getAnsweredSectionsCount,\n  getSectionsCount\n} from 'store/sections/selectors';\nimport {\n  getAffectProgressQuestionsCount,\n  getAnsweredAffectProgressQuestionsCount,\n  getAnsweredQuestionsProgress\n} from 'store/questions/selectors';\nimport Contents from 'components/contents/Contents';\nimport { localize } from 'core/localization';\nimport Reviewable from 'components/review/Reviewable';\nimport {\n  HINT_FOR_SPOT_COMMENT,\n  REVIEW_COMMENT_PROPERTIES,\n  REVIEW_COMMENT_TYPES\n} from 'constants/review';\nimport { RootAppState } from 'store/types';\nimport { getTimeFromMilliseconds } from 'utils/timer';\nimport {\n  Container,\n  CourseInfoContainer,\n  CourseInfoWrapper,\n  ContentsContainer,\n  LogoWrapper,\n  CourseLogo,\n  ProgressSectionsWrapper,\n  ProgressPerSection,\n  ProgressMasteryScore,\n  ProgressCaption,\n  TimerInfoWrapper,\n  TimerIcon\n} from './CourseInformation.styled';\n\ntype CourseInformationProps = {\n  title?: string;\n  introductions?: Array<string>;\n  sections: Array<any>;\n  courseProgress?: number;\n  masteryScore?: number;\n  isCourseProgress?: boolean;\n  affectProgressSectionsCount?: number;\n  answeredSectionsCount?: number;\n  sectionsPassedCount?: number;\n  reviewMode?: boolean;\n  alternativeLogoUrl: string;\n  isSubmitAtOnce: boolean;\n  affectProgressQuestionsCount: number;\n  affectAnsweredQuestionsCount: number;\n  answeredQuestionsProgress: number;\n  isCourseSubmitted?: boolean;\n  isTimerEnabled: boolean;\n  timeLimit: number;\n  isQuestionPool: boolean;\n  sectionCount: number;\n};\n\nexport class CourseInformation extends React.Component<CourseInformationProps, {}> {\n  refContainer: any;\n\n  constructor(props: CourseInformationProps) {\n    super(props);\n    this.refContainer = React.createRef();\n  }\n\n  renderCourseTimerInfo = (timeLimit: number) => (\n    <TimerInfoWrapper>\n      <TimerIcon size={18} name=\"timer\" />\n      <Text title={'title'} appearance=\"p\" inverted data-test=\"course-timer-text\">\n        {`${localize('[timer]')}: ${timeLimit} ${localize('[minutes]')}`}\n      </Text>\n    </TimerInfoWrapper>\n  );\n\n  renderProgressCaption = (\n    courseProgress: number,\n    affectAnsweredQuestionsCount: number,\n    affectProgressQuestionsCount: number,\n    isSubmitAtOnce = false,\n    isCourseSubmitted = false\n  ) => {\n    if (isCourseSubmitted) {\n      return localize('[you complete x]', {\n        percentSuccess: courseProgress\n      });\n    }\n    if (isSubmitAtOnce) {\n      return localize('[x out of y questions answered]', {\n        countAnsweredQuestions: affectAnsweredQuestionsCount,\n        countQuestions: affectProgressQuestionsCount\n      });\n    } else {\n      return localize('[you complete x]', {\n        percentSuccess: courseProgress\n      });\n    }\n  };\n\n  getProgress = (): number => {\n    const {\n      isSubmitAtOnce,\n      courseProgress,\n      answeredQuestionsProgress,\n      isCourseSubmitted\n    } = this.props;\n    if (isCourseSubmitted) {\n      return courseProgress as number;\n    }\n    return isSubmitAtOnce ? answeredQuestionsProgress : (courseProgress as number);\n  };\n\n  getBackgroundSettings = () => {\n    const { isSubmitAtOnce, isCourseSubmitted } = this.props;\n\n    if (isCourseSubmitted) {\n      return {\n        opacity: 1.0,\n        progressColor: 'correctColor'\n      };\n    }\n    if (isSubmitAtOnce) {\n      return {\n        opacity: 0.3,\n        progressColor: 'coverBgOverlayTextColor'\n      };\n    } else {\n      return {\n        opacity: 1.0,\n        progressColor: 'correctColor'\n      };\n    }\n  };\n\n  renderMasteryScoreSectionProgress = (\n    isSubmitAtOnce: boolean,\n    courseProgress: number,\n    answeredQuestionsProgress: number,\n    masteryScore: number,\n    isCourseSubmitted = false\n  ) => (\n    <ProgressMasteryScore\n      forwardedRef={this.refContainer}\n      progress={this.getProgress()}\n      passedMark={masteryScore}\n      {...this.getBackgroundSettings()}\n    />\n  );\n\n  render() {\n    const {\n      title,\n      introductions,\n      alternativeLogoUrl,\n      sections,\n      courseProgress = 0,\n      masteryScore = 0,\n      isCourseProgress,\n      sectionsPassedCount,\n      affectProgressSectionsCount = 0,\n      answeredSectionsCount = 0,\n      isSubmitAtOnce,\n      affectProgressQuestionsCount,\n      affectAnsweredQuestionsCount = 0,\n      answeredQuestionsProgress,\n      isCourseSubmitted,\n      isTimerEnabled,\n      timeLimit,\n      isQuestionPool,\n      sectionCount\n    } = this.props;\n\n    return (\n      <Container ref={this.refContainer}>\n        <CourseInfoContainer>\n          <CourseInfoWrapper>\n            <LogoWrapper>\n              <CourseLogo logoUrl={alternativeLogoUrl} alt={localize('[alt logo login]')} />\n            </LogoWrapper>\n            <Reviewable\n              context={{\n                type: REVIEW_COMMENT_TYPES.COURSE,\n                property: REVIEW_COMMENT_PROPERTIES.TITLE\n              }}\n              hintName={HINT_FOR_SPOT_COMMENT}\n            >\n              <Text title={title} appearance=\"h1\" inverted tabIndex={-1} ignoreFocus={true}>\n                {title}\n              </Text>\n            </Reviewable>\n            {affectProgressSectionsCount > 0 ? (\n              <>\n                {isCourseProgress && (\n                  <>\n                    {this.renderMasteryScoreSectionProgress(\n                      isSubmitAtOnce,\n                      courseProgress,\n                      answeredQuestionsProgress,\n                      masteryScore,\n                      isCourseSubmitted\n                    )}\n                    <ProgressCaption data-test=\"progress-caption-text\">\n                      {this.renderProgressCaption(\n                        courseProgress,\n                        affectAnsweredQuestionsCount,\n                        affectProgressQuestionsCount,\n                        isSubmitAtOnce,\n                        isCourseSubmitted\n                      )}\n                    </ProgressCaption>\n                  </>\n                )}\n                {!isCourseProgress && (\n                  <>\n                    {renderSectionProgress(sections, isSubmitAtOnce, isCourseSubmitted)}\n                    <ProgressCaption data-test=\"progress-caption-text\">\n                      {isSubmitAtOnce &&\n                        isCourseSubmitted &&\n                        localize('[x out of y sections passed]', {\n                          countSectionsSuccess: sectionsPassedCount,\n                          countSections: sectionCount\n                        })}\n                      {isSubmitAtOnce &&\n                        !isCourseSubmitted &&\n                        localize('[x out of y sections taken]', {\n                          countSectionsSuccess: answeredSectionsCount,\n                          countSections: sectionCount\n                        })}\n                      {!isSubmitAtOnce &&\n                        localize('[x out of y sections passed]', {\n                          countSectionsSuccess: sectionsPassedCount,\n                          countSections: sectionCount\n                        })}\n                    </ProgressCaption>\n                  </>\n                )}\n              </>\n            ) : (\n              <Separator height={2} opacity={0.3} margin={56} color=\"coverBgOverlayTextColor\" />\n            )}\n            {isTimerEnabled && !isQuestionPool && this.renderCourseTimerInfo(timeLimit)}\n            {renderCourseIntroduction(introductions)}\n          </CourseInfoWrapper>\n        </CourseInfoContainer>\n      </Container>\n    );\n  }\n}\n\nfunction renderSectionProgress(sections: any, isSubmitAtOnce: boolean, isCourseSubmitted = false) {\n  return (\n    <ProgressSectionsWrapper>\n      {sections.map((section: any) => {\n        if (section.affectsProgress) {\n          const { id } = section;\n          if (isPassed(section.status)) {\n            return isSubmitAtOnce ? (\n              renderSubmitAtOnceProgressPerSection(isCourseSubmitted, section, id)\n            ) : (\n              <ProgressPerSection key={id} progress={100} />\n            );\n          } else {\n            return isSubmitAtOnce ? (\n              renderSubmitAtOnceProgressPerSection(isCourseSubmitted, section, id)\n            ) : (\n              <ProgressPerSection key={id} progress={0} />\n            );\n          }\n        }\n        return false;\n      })}\n    </ProgressSectionsWrapper>\n  );\n}\n\nfunction renderSubmitAtOnceProgressPerSection(isCourseSubmitted: boolean, section: any, id: any) {\n  if (isCourseSubmitted) {\n    if (isPassed(section.status)) {\n      return <ProgressPerSection key={id} progress={100} />;\n    }\n    return <ProgressPerSection key={id} progress={0} />;\n  } else {\n    if (section.isSectionAnswered) {\n      return (\n        <ProgressPerSection\n          key={id}\n          progress={100}\n          progressColor=\"coverBgOverlayTextColor\"\n          opacity={0.4}\n        />\n      );\n    }\n    return <ProgressPerSection key={id} progress={0} />;\n  }\n}\n\nfunction renderCourseIntroduction(introductions: any) {\n  return (\n    Array.isArray(introductions) &&\n    introductions.length !== 0 && (\n      <React.Fragment>\n        <Reviewable\n          context={{\n            type: REVIEW_COMMENT_TYPES.COURSE,\n            property: REVIEW_COMMENT_PROPERTIES.INTRODUCTION\n          }}\n        >\n          <ContentsContainer>\n            <Contents inverted items={introductions} linkTabIndex={0} />\n          </ContentsContainer>\n        </Reviewable>\n      </React.Fragment>\n    )\n  );\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    alternativeLogoUrl: getAlternativeLogo(state),\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    courseProgress: getScore(state),\n    masteryScore: getMasteryScoreValue(state),\n    isCourseProgress: isOverallMasteryScore(state),\n    affectProgressSectionsCount: getAffectProgressSectionsCount(state),\n    sectionsPassedCount: getSectionsPassedCount(state),\n    answeredSectionsCount: getAnsweredSectionsCount(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    affectAnsweredQuestionsCount: getAnsweredAffectProgressQuestionsCount(state),\n    answeredQuestionsProgress: getAnsweredQuestionsProgress(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeLimit: getTimeFromMilliseconds(getTimerLimit(state), 'min') as number,\n    isQuestionPool: isQuestionPoolEnabled(state),\n    sectionCount: getSectionsCount(state)\n  };\n}\nexport default connect(mapStateToProps)(CourseInformation);\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { secondaryFont, mainFontText, secondaryFontText } from 'components/mixins/typography';\nimport { Icon, Button } from 'components/common';\n\nexport const QuestionPoolWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 105px;\n\n  ${media.mobile`\n    padding: 40px 30px;\n  `};\n`;\n\nexport const CourseUserTitle = styled.h3.attrs(() => ({\n  'data-test': 'course-user-title'\n}))`\n  ${mainFontText};\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  font-style: normal;\n  font-size: 32px;\n  line-height: 1.4;\n  margin-bottom: 20px;\n\n  ${media.mobile`\n    font-size: 30px;\n  `};\n`;\nexport const CourseIntroductionText = styled.p.attrs(() => ({\n  'data-test': 'course-intro'\n}))`\n  ${secondaryFontText};\n`;\nexport const QuestionPoolOptionsList = styled.ul.attrs({\n  'data-test': 'question-pool-options-list'\n})`\n  display: flex;\n  justify-content: space-between;\n  margin: 40px 0 80px;\n\n  ${media.mobile`\n    flex-direction: column;\n    margin-bottom: 20px;\n  `};\n`;\nexport const QuestionPoolOptionListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 32%;\n  min-height: 146px;\n  padding: 24px;\n  border-radius: 24px;\n  box-shadow: 0 4px 16px 0 ${transparentize(defaultBoxShadowColor, 0.06)};\n\n  ${media.mobile`\n    width: 100%;    \n    padding: 20px;\n    margin-bottom: 20px;\n    min-height: 104px;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n  `};\n`;\nexport const QuestionPoolOptionIcon = styled(Icon)``;\nexport const QuestionPoolOptionText = styled.p`\n  ${secondaryFont};\n  display: flex;\n  align-items: center;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  font-size: 18px;\n  line-height: 1;\n  ${media.mobile`\n    margin-left: 20px;\n  `};\n`;\nexport const QuestionPoolSubText = styled.strong`\n  font-size: 26px;\n  font-weight: 600;\n  margin-right: 6px;\n  color: ${props => transparentize(props.theme.colors.textColor, 1)};\n`;\n\ntype CourseStartButtonProps = {\n  tabIndex: string;\n  id: string;\n};\n\nexport const CourseStartButton = styled(Button).attrs((props: CourseStartButtonProps) => ({\n  'data-test': 'course-start-button',\n  tabIndex: props.tabIndex\n}))`\n  align-self: flex-start;\n  margin-top: 40px;\n  font-size: 14px;\n  &:focus {\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  ${media.mobile`\n    font-size: 14px;\n    line-height: 1;\n    width: 85%;\n    position: fixed;\n    bottom: 5%;\n    margin: 0 auto;\n    align-self: center;\n  `};\n`;\n","import * as React from 'react';\nimport { HTML_INFINITY_SYMBOL } from 'constants/common';\nimport {\n  QuestionPoolOptionIcon,\n  QuestionPoolOptionListItem,\n  QuestionPoolOptionText,\n  QuestionPoolSubText\n} from './QuestionPool.styled';\n\ntype QuestionPoolOptionItemProps = {\n  iconName: string;\n  optionText: string;\n  optionValue: number;\n};\n\nconst wrapText = (text: string) => ({ __html: text });\n\nexport const QuestionPoolOptionItem = ({\n  iconName,\n  optionText,\n  optionValue\n}: QuestionPoolOptionItemProps) => {\n  const optionSubText = `${optionValue === -1 ? HTML_INFINITY_SYMBOL : optionValue}`;\n  return (\n    <QuestionPoolOptionListItem>\n      <QuestionPoolOptionIcon name={iconName} size={40} color=\"mainColor\" />\n      <QuestionPoolOptionText>\n        <QuestionPoolSubText dangerouslySetInnerHTML={wrapText(optionSubText)} />\n        {optionText}\n      </QuestionPoolOptionText>\n    </QuestionPoolOptionListItem>\n  );\n};\nexport default QuestionPoolOptionItem;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getQuestionPoolSize,\n  getMasteryScoreValue,\n  isAttemptsLimited,\n  getLimitedAttemptsNumber,\n  getTimerEnabled,\n  getTimerLimit,\n  shouldSubmitAllQuestions\n} from 'store/settings/selectors';\nimport { getName } from 'store/user/selectors';\nimport {\n  getQuestions,\n  hasCourseBeenStarted,\n  getLastOpenedQuestion\n} from 'store/questions/selectors';\nimport { getCourseAttempt, isInProgress } from 'store/course/selectors';\nimport { localize } from 'core/localization';\nimport { Separator } from 'components/common';\nimport { RootAppState } from 'store/types';\nimport { getTimeFromMilliseconds } from 'utils/timer';\nimport QuestionPoolOptionItem from './QuestionPoolOptionItem';\nimport {\n  QuestionPoolWrapper,\n  CourseUserTitle,\n  CourseIntroductionText,\n  QuestionPoolOptionsList,\n  CourseStartButton\n} from './QuestionPool.styled';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\n\ntype QuestionPoolProps = {\n  questionPoolSize: number;\n  questions: any[];\n  hasCourseStarted: boolean;\n  isCourseInProgress: boolean;\n  navigateToPreviousPage(): void;\n  isPreviousPageResults(): boolean;\n  navigateToQuestion(id: string, question: string, isCourseOnOnePage: boolean): void;\n  masteryScore?: number;\n  isLimitedAttempts: boolean;\n  limitedAttemptsNumber: number;\n  courseAttempt?: number;\n  userName?: string;\n  isTimerEnabled: boolean;\n  timeLimit?: number;\n  courseAttempts: number;\n  isSubmitAllQuestions: boolean;\n  isCourseOnOnePage: boolean;\n};\n\nexport class QuestionPool extends React.Component<QuestionPoolProps> {\n  getTimerText = (isTimerEnabled: boolean) => {\n    if (isTimerEnabled) {\n      return localize('[min]');\n    }\n    return localize('[time]');\n  };\n\n  getTimer = (isTimerEnabled: boolean, timeLimit = 0) => {\n    if (isTimerEnabled) {\n      return timeLimit;\n    }\n    return -1;\n  };\n\n  continueCourse = () => {\n    const {\n      questions,\n      isCourseInProgress,\n      isPreviousPageResults,\n      navigateToQuestion,\n      navigateToPreviousPage,\n      isCourseOnOnePage\n    } = this.props;\n    if (isPreviousPageResults() && isCourseInProgress) {\n      const { id, sectionId } = getLastOpenedQuestion(questions);\n      navigateToQuestion(sectionId, id, isCourseOnOnePage);\n    } else {\n      navigateToPreviousPage();\n    }\n  };\n\n  startCourse = () => {\n    const { questions, navigateToQuestion, isCourseOnOnePage } = this.props;\n    const questionId = questions[0]?.id;\n    const { sectionId } = questions[0];\n    navigateToQuestion(sectionId, questionId, isCourseOnOnePage);\n  };\n\n  renderCourseIntroductionText = (remainedAttempts: number, isLimitedAttempts: boolean) => {\n    const {\n      questionPoolSize,\n      masteryScore,\n      timeLimit,\n      isTimerEnabled = false,\n      hasCourseStarted\n    } = this.props;\n    const introWithoutTimerAndAttempts = localize(\n      '[question pool introduction text without timer and attempts x y]',\n      {\n        questionPoolSize,\n        masteryScore\n      }\n    );\n    const introWithTimerAndAttempts = localize(\n      '[question pool introduction text with timer and attempts p q r s]',\n      {\n        questionPoolSize,\n        timer: timeLimit,\n        remainedAttempts,\n        masteryScore\n      }\n    );\n    const introWithTimer = localize('[question pool introduction text with timer x y z]', {\n      questionPoolSize,\n      timer: timeLimit,\n      masteryScore\n    });\n    const introWithAttempts = localize('[question pool introduction text with attempts x y z]', {\n      questionPoolSize,\n      remainedAttempts,\n      masteryScore\n    });\n    const timerWillStart = localize('[question pool timer intro text]');\n    const goodLuck = localize('[good luck]');\n\n    const introWithTimerText = () => {\n      if (hasCourseStarted) {\n        return introWithTimer;\n      }\n      return `${introWithTimer} ${timerWillStart} ${goodLuck}`;\n    };\n\n    const introWithAttemptsText = () => {\n      if (hasCourseStarted) {\n        return introWithAttempts;\n      }\n      return `${introWithAttempts} ${goodLuck}`;\n    };\n\n    const introWithTimerAndAttemptsText = () => {\n      if (hasCourseStarted) {\n        return introWithTimerAndAttempts;\n      }\n      return `${introWithTimerAndAttempts} ${timerWillStart} ${goodLuck}`;\n    };\n\n    const introWithoutTimerAndAttemptsText = () => {\n      if (hasCourseStarted) {\n        return introWithoutTimerAndAttempts;\n      }\n      return `${introWithoutTimerAndAttempts} ${goodLuck}`;\n    };\n\n    if (questionPoolSize <= 0) {\n      return localize('[question pool introduction text zero question]');\n    }\n\n    if (isTimerEnabled && !isLimitedAttempts) {\n      return introWithTimerText();\n    }\n\n    if (isLimitedAttempts && !isTimerEnabled) {\n      return introWithAttemptsText();\n    }\n\n    if (isTimerEnabled && isLimitedAttempts) {\n      return introWithTimerAndAttemptsText();\n    }\n\n    return introWithoutTimerAndAttemptsText();\n  };\n\n  render() {\n    const {\n      questionPoolSize,\n      hasCourseStarted,\n      userName,\n      isTimerEnabled,\n      timeLimit,\n      isLimitedAttempts,\n      limitedAttemptsNumber,\n      courseAttempts,\n      isSubmitAllQuestions\n    } = this.props;\n\n    const getRemainingAttempts = () => {\n      if (isLimitedAttempts) {\n        return isSubmitAllQuestions\n          ? limitedAttemptsNumber - courseAttempts\n          : limitedAttemptsNumber;\n      }\n      return -1;\n    };\n    return (\n      <QuestionPoolWrapper>\n        <CourseUserTitle>Hi {userName === '' ? 'there' : userName},</CourseUserTitle>\n        <CourseIntroductionText>\n          {this.renderCourseIntroductionText(getRemainingAttempts(), isLimitedAttempts)}\n        </CourseIntroductionText>\n        <QuestionPoolOptionsList>\n          <QuestionPoolOptionItem\n            iconName=\"document-alt\"\n            optionValue={questionPoolSize}\n            optionText={localize('[questions]')}\n          />\n          <QuestionPoolOptionItem\n            iconName=\"clock\"\n            optionValue={this.getTimer(isTimerEnabled, timeLimit)}\n            optionText={this.getTimerText(isTimerEnabled)}\n          />\n          <QuestionPoolOptionItem\n            iconName=\"repeat\"\n            optionValue={getRemainingAttempts()}\n            optionText={localize('[attempts]')}\n          />\n        </QuestionPoolOptionsList>\n        <Separator opacity={0.05} color=\"textColor\" height={1} margin={0} />\n        <CourseStartButton\n          id={SKIP_TO_CONTENT_IDS.QUESTION_POOL_START_BUTTON}\n          onClick={hasCourseStarted ? this.continueCourse : this.startCourse}\n          tabIndex={0}\n          disabled={questionPoolSize <= 0}\n        >\n          {hasCourseStarted\n            ? localize('[continue course]')\n            : localize('[course ready to start text]')}\n        </CourseStartButton>\n      </QuestionPoolWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    timeLimit: getTimeFromMilliseconds(getTimerLimit(state), 'min') as number,\n    questions: getQuestions(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    masteryScore: getMasteryScoreValue(state),\n    hasCourseStarted: hasCourseBeenStarted(state),\n    isCourseInProgress: isInProgress(state),\n    userName: getName(state),\n    isLimitedAttempts: isAttemptsLimited(state),\n    limitedAttemptsNumber: getLimitedAttemptsNumber(state),\n    isTimerEnabled: getTimerEnabled(state),\n    courseAttempts: getCourseAttempt(state),\n    isSubmitAllQuestions: shouldSubmitAllQuestions(state)\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPool);\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { MEDIA_MEDIUM } from 'constants/common';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { bodyBackground } from 'components/mixins/backgrounds';\nimport { BasicStyledSidebar, PageContent } from 'components/shell/Layout';\n\nexport const SectionsPageContainer = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  ${media.tablet`\n    display: flex;\n    flex-wrap: wrap;\n  `};\n`;\n\nexport const SectionsPageSidebar = styled(BasicStyledSidebar)`\n  ${media.tablet`\n    position: relative;\n    width: 100% !important;\n    left: 0 !important;\n    height: auto;\n    order: 1;\n  `};\n`;\n\ntype SectionsPageContentProps = {\n  background: any;\n};\nexport const SectionsPageContent = styled(PageContent)<SectionsPageContentProps>`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  height: 100%;\n  width: 50%;\n  z-index: 100;\n  overflow-y: auto;\n  ${props => bodyBackground(props.background.body)};\n  ${media.tablet`\n    position: relative;\n    width: 100% !important;\n    left: 0 !important;\n    height: auto;\n    order: 2;\n  `};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  ${getCustomScrollbars()};\n  @media (max-width: ${MEDIA_MEDIUM - 24}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SectionListContainer = styled.section`\n  flex: 1 1 50%;\n  height: 100vh;\n  min-width: 0;\n  padding: 100px 80px 30px;\n  ${getCustomScrollbars()};\n  ${media.large`\n    padding: 80px 40px 30px;\n  `};\n  ${media.medium`\n    min-height: 0;\n  `};\n  ${media.small`\n    flex: 0 0 auto;\n    padding: 60px 40px 30px;\n  `};\n  ${media.tablet`\n    height: auto;\n    overflow: initial;\n  `};\n  ${media.mobile`\n    padding: 48px 0 30px;\n  `};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getQuestionUrl, getLearningObjectiveUrl } from 'utils/navigation';\nimport withNavigation from 'components/hocs/withNavigation';\nimport {\n  getBackground,\n  isAllQuestionsOnOnePage,\n  getTimerEnabled,\n  getTimerLimit,\n  isQuestionPoolEnabled\n} from 'store/settings/selectors';\nimport { getCourseTitle, getCourseIntroductions } from 'store/course/selectors';\nimport {\n  getSections,\n  affectsProgress,\n  getAffectProgressQuestionsCountInSection,\n  getAnsweredSectionQuestionsCount,\n  getCorrectlyAffectProgressQuestionsCountInSection\n} from 'store/sections/selectors';\nimport SectionsListComponent from 'components/sections/SectionsList';\nimport CourseInformation from 'components/sections/CourseInformation';\nimport QuestionPool from 'components/sections/QuestionPool/QuestionPool';\nimport { localize } from 'core/localization';\nimport { RootAppState } from 'store/types';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { getTimeFromMilliseconds } from 'utils/timer';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport * as courseQuestionActions from 'store/questions/actions';\nimport { TimerStatus } from 'constants/timer';\nimport {\n  SectionsPageContainer,\n  SectionListContainer,\n  SectionsPageSidebar,\n  SectionsPageContent\n} from './SectionsPage.styled';\n\nimport * as navigationActions from '../../../store/navigation/actions';\nimport SkipToContent from '../../../components/common/SkipToContent';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport { getPopupVisibility } from '../../../store/popup/selectors';\n\ntype SectionsProps = {\n  sections: any[];\n  navigateToUrl(url: string): void;\n  navigateToPrevPage(): void;\n  isPreviousPageResults(): boolean;\n  updateClickedID(url: string): void;\n  isAccessLimited: boolean;\n  theme: { [key: string]: any };\n  background: { [key: string]: any };\n  title: string;\n  isQuestionPool: boolean;\n  scrollToId(id: string): void;\n  isCourseOnOnePage: boolean;\n  navigateToOnePage(id: string): void;\n  timerActions: { [key: string]: any };\n  questionActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeLimit: number;\n  timeElapsed: number;\n  popupExpanded: boolean;\n};\n\nexport class Sections extends React.Component<SectionsProps, {}> {\n  sectionRefs: { [key: string]: any };\n  questionPoolButtonRef: any;\n\n  constructor(props: SectionsProps) {\n    super(props);\n    this.sectionRefs = [];\n    this.questionPoolButtonRef = React.createRef();\n  }\n\n  setSectionRefs = (ref: any) => {\n    this.sectionRefs.push(ref);\n  };\n\n  focusFirstSection = () => this.sectionRefs[0].focus();\n\n  focusQuestionPoolButton = () => {\n    const element = document.getElementById(SKIP_TO_CONTENT_IDS.QUESTION_POOL_START_BUTTON);\n    if (element) {\n      element.focus();\n    }\n  };\n\n  focusElement = () => {\n    const { isQuestionPool } = this.props;\n    return isQuestionPool ? this.focusQuestionPoolButton() : this.focusFirstSection();\n  };\n\n  navigateToQuestion = (sectionId: string, questionId: string, isCourseOnOnePage: boolean) => {\n    const { isTimerEnabled, timerActions, questionActions, timeElapsed, timerStatus } = this.props;\n    if (\n      isTimerEnabled &&\n      (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n    ) {\n      timerActions.setTimerElapsed(timeElapsed);\n      timerActions.startTimer();\n    }\n    if (isCourseOnOnePage) {\n      this.props.navigateToUrl(getQuestionUrl(sectionId, questionId));\n      this.props.scrollToId(questionId);\n      questionActions.markAsOpened(questionId);\n    } else {\n      this.props.navigateToUrl(getQuestionUrl(sectionId, questionId));\n    }\n  };\n\n  navigateToLearningObjective = (sectionId: string, isCourseOnOnePage: boolean) => {\n    if (isCourseOnOnePage) {\n      this.props.navigateToUrl(getLearningObjectiveUrl(sectionId));\n      this.props.scrollToId(sectionId);\n    } else {\n      this.props.navigateToUrl(getLearningObjectiveUrl(sectionId));\n    }\n  };\n\n  navigateToPrevPage = () => {\n    const { navigateToPrevPage } = this.props;\n    navigateToPrevPage();\n  };\n\n  renderQuestionPoolComponent = () => {\n    const { isCourseOnOnePage } = this.props;\n    return (\n      <QuestionPool\n        navigateToQuestion={this.navigateToQuestion}\n        navigateToPreviousPage={this.navigateToPrevPage}\n        isPreviousPageResults={this.props.isPreviousPageResults}\n        isCourseOnOnePage={isCourseOnOnePage}\n      />\n    );\n  };\n\n  renderSectionsListComponent = () => {\n    const { sections, isCourseOnOnePage } = this.props;\n    return (\n      <SectionsListComponent\n        sections={sections}\n        navigateToQuestion={this.navigateToQuestion}\n        navigateToLearningObjective={this.navigateToLearningObjective}\n        isCourseOnOnePage={isCourseOnOnePage}\n        setSectionRefs={this.setSectionRefs}\n      />\n    );\n  };\n\n  componentDidMount() {\n    document.title = `${localize('[section page title]')} | ${this.props.title}`;\n  }\n\n  render() {\n    const { sections, background, isQuestionPool, popupExpanded } = this.props;\n    return (\n      <>\n        {!popupExpanded && <SkipToContent onClick={this.focusElement} />}\n        <SectionsPageContainer>\n          {sections.length > 0 && (\n            <SectionsPageContent background={background}>\n              <SectionListContainer>\n                {isQuestionPool\n                  ? this.renderQuestionPoolComponent()\n                  : this.renderSectionsListComponent()}\n              </SectionListContainer>\n            </SectionsPageContent>\n          )}\n          <SectionsPageSidebar background={background}>\n            <CourseInformation sections={sections} />\n          </SectionsPageSidebar>\n        </SectionsPageContainer>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    sections: getSections(state).map(section => ({\n      ...section,\n      affectsProgress: affectsProgress(state, section.id),\n      affectProgressQuestionsCountInSection: getAffectProgressQuestionsCountInSection(\n        state,\n        section.id\n      ),\n      answeredSectionQuestionsCount: getAnsweredSectionQuestionsCount(state, section.id),\n      correctlyAffectProgressQuestionsCountInSection: getCorrectlyAffectProgressQuestionsCountInSection(\n        state,\n        section.id\n      )\n    })),\n    background: getBackground(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    timeLimit: getTimeFromMilliseconds(getTimerLimit(state), 'min') as number,\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state),\n    popupExpanded: getPopupVisibility(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    navigationActions: bindActionCreators(navigationActions, dispatch),\n    questionActions: bindActionCreators(courseQuestionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(Sections));\n","// Written in this round about way for babel-transform-imports\nimport Switch from \"react-router/es/Switch\";\n\nexport default Switch;","import styled from 'styled-components';\nimport { secondaryFont, mainFont } from 'components/mixins/typography';\nimport Icon from 'components/common/Icon';\nimport { transparentize } from 'utils/color';\nimport { Button, Text } from 'components/common';\n\ntype PopoverContentWrapperProps = {\n  ariaModal: boolean;\n};\nexport const PopoverContentWrapper = styled.div<PopoverContentWrapperProps>`\n  ${secondaryFont};\n  line-height: 2;\n  padding: 4px 6px 6px;\n  text-align: center;\n  outline: none;\n  color: ${props => {\n    return props.theme.colors.textColor;\n  }};\n  font-size: 14px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  max-height: 70vh;\n  overflow: hidden;\n`;\n\nexport const SubmitMessageWrapper = styled.div``;\n\nexport const PopoverContent = styled.div`\n  width: 240px;\n  min-height: 310px;\n  padding: 35px 20px 19px;\n`;\n\nexport const ClosePopoverIcon = styled(Icon)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.2)};\n  transition: 0.2s;\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\nexport const PopoverButton = styled(Button)`\n  height: 40px;\n\n  &:first-of-type {\n    margin-bottom: 20px;\n  }\n`;\nexport const PopoverContentHeader = styled(Text)`\n  margin: 24px 0 12px;\n`;\nexport const PopoverContentMessage = styled.span`\n  ${mainFont};\n  font-weight: normal;\n  display: block;\n  margin: 0 0 12px;\n  font-size: 15px;\n  line-height: 1.4;\n  color: ${props => props.theme.colors.textColor};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withTheme } from 'styled-components';\nimport { localize } from 'core/localization';\nimport { BUTTON } from 'constants/components';\nimport { Button, Tooltip } from 'components/common';\nimport { getColors } from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport {\n  getAnsweredAffectProgressQuestionsCount,\n  getAffectProgressQuestionsCount\n} from 'store/questions/selectors';\n\nimport { RootAppState } from 'store/types';\nimport { KEYS } from 'constants/common';\nimport {\n  SubmitMessageWrapper,\n  PopoverContentWrapper,\n  PopoverContent,\n  ClosePopoverIcon,\n  PopoverContentHeader,\n  PopoverContentMessage,\n  PopoverButton\n} from './SubmitOnceButton.styled';\n\ntype SubmitOnceButtonProps = {\n  onClick(): void;\n  isActive: boolean;\n  open: boolean;\n  theme?: any;\n  colors?: { [key: string]: any };\n  showSubmitButton?: boolean;\n  remainingQuestions?: number;\n  affectProgressQuestionsCount?: number;\n  tabIndex: number;\n};\n\ntype SubmitOnceButtonState = {\n  open: boolean;\n};\n\nexport class SubmitOnceButton extends React.PureComponent<\n  SubmitOnceButtonProps,\n  SubmitOnceButtonState\n> {\n  popoverRef: any;\n\n  popoverContentRef: any;\n\n  constructor(props: SubmitOnceButtonProps) {\n    super(props);\n    this.state = { open: false };\n    this.popoverRef = React.createRef();\n    this.popoverContentRef = React.createRef();\n  }\n\n  static defaultProps = {\n    open: false,\n    isActive: false\n  };\n\n  setTooltipAction = (option: any) => {\n    this.setState({\n      open: option\n    });\n  };\n\n  closePopup = () => {\n    this.setTooltipAction(false);\n    setTimeout(() => {\n      this.popoverRef.current.children[0].focus();\n    }, 0);\n  };\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      if (\n        this.state.open &&\n        this.popoverContentRef.current &&\n        this.popoverContentRef.current.children.length\n      ) {\n        this.popoverContentRef.current.children[0].focus();\n      }\n    }, 0);\n  }\n\n  render() {\n    const { open } = this.state;\n    const { isActive, remainingQuestions, showSubmitButton, tabIndex } = this.props;\n    return (\n      <React.Fragment>\n        {isActive &&\n          showSubmitButton &&\n          (remainingQuestions ? (\n            <Tooltip\n              style={{ display: 'block' }}\n              trigger={'click'}\n              open={open}\n              onRequestClose={this.closePopup}\n              position={'top'}\n              tooltipTheme={'light'}\n              arrow={true}\n              interactive\n              html={this.renderPopoverContent()}\n            >\n              <div ref={this.popoverRef}>\n                <Button\n                  tabIndex={tabIndex}\n                  onClick={this.viewAction}\n                  layout={BUTTON.LAYOUT.SECONDARY}\n                  data-test=\"submit-all-answers-remaining\"\n                >\n                  {this.submitAllAnswersText()}\n                </Button>\n              </div>\n            </Tooltip>\n          ) : (\n            <Button\n              tabIndex={tabIndex}\n              onClick={this.submitOnce}\n              data-test=\"submit-all-answers-completed\"\n            >\n              {this.submitAllAnswersText()}\n            </Button>\n          ))}\n      </React.Fragment>\n    );\n  }\n\n  submitAllAnswersText = () => localize('[submit all answers]');\n\n  handleKeyDown = (evt: any) => {\n    if ([KEYS.ENTER.toLowerCase(), KEYS.ESCAPE.toLowerCase()].includes(evt.key.toLowerCase())) {\n      this.closePopup();\n    }\n  };\n\n  viewAction = () => {\n    const { remainingQuestions } = this.props;\n    if (!remainingQuestions) {\n      this.submitOnce();\n    } else {\n      this.setTooltipAction(true);\n    }\n  };\n\n  toggle = (evt: any) => {\n    if (!evt.key) {\n      const { open } = this.state;\n      this.setTooltipAction(!open);\n    }\n  };\n\n  renderPopoverContent = () => {\n    const templateTheme = this.props.theme;\n    const { remainingQuestions, tabIndex } = this.props;\n    return (\n      <SubmitMessageWrapper>\n        <PopoverContentWrapper\n          id=\"progress-popover\"\n          role=\"dialog\"\n          ariaModal={true}\n          tabIndex={-1}\n          onKeyDown={event => this.handleKeyDown(event)}\n          theme={templateTheme}\n        >\n          <PopoverContent ref={this.popoverContentRef}>\n            <ClosePopoverIcon\n              role=\"button\"\n              ariaLabel={localize('[close popover]')}\n              tabIndex={tabIndex}\n              onClick={this.toggle}\n              size={14}\n              name=\"close-popup\"\n              theme={templateTheme}\n            />\n            <PopoverContentHeader theme={templateTheme} appearance=\"h3\">\n              {localize('[you did not answer all questions]')}\n            </PopoverContentHeader>\n            <PopoverContentMessage theme={templateTheme} data-test=\"remaining-questions\">\n              ({localize('[x question remaining]', { remainingQuestions })})\n            </PopoverContentMessage>\n\n            <PopoverButton\n              tabIndex={tabIndex}\n              onClick={this.closePopup}\n              theme={templateTheme}\n              data-test=\"continue-course-button\"\n            >\n              {localize('[continue course]')}\n            </PopoverButton>\n            <PopoverButton\n              tabIndex={tabIndex}\n              onClick={this.submitOnce}\n              theme={templateTheme}\n              layout={BUTTON.LAYOUT.SECONDARY}\n              data-test=\"submit-all-answers-pop-up\"\n            >\n              {localize('[submit all answers]')}\n            </PopoverButton>\n          </PopoverContent>\n        </PopoverContentWrapper>\n      </SubmitMessageWrapper>\n    );\n  };\n\n  submitOnce = () => {\n    this.props.onClick();\n  };\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    showSubmitButton: !isAttemptSubmitted(state),\n    remainingQuestions:\n      getAffectProgressQuestionsCount(state) - getAnsweredAffectProgressQuestionsCount(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(SubmitOnceButton));\n","import styled from 'styled-components';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport { Text, ShapedIcon } from 'components/common';\nimport media from 'components/mixins/media';\n\ntype RemainingAttemptsProps = {\n  hasOneRemainingAttempt: boolean;\n};\n\nfunction getBorderColor(props: any) {\n  return props.hasOneRemainingAttempt\n    ? transparentize(props.theme.colors.mainColor, 0.3)\n    : transparentize(props.theme.colors.textColor, 0.3);\n}\n\nexport const RemainingAttemptsWrapper = styled.div.attrs((props: RemainingAttemptsProps) => ({\n  hasOneRemainingAttempt: props.hasOneRemainingAttempt\n}))<RemainingAttemptsProps>`\n  border: solid 1px ${props => getBorderColor(props)};\n  border-radius: 4px;\n  display: flex;\n  background-color: ${props =>\n    props.hasOneRemainingAttempt\n      ? transparentize(props.theme.colors.mainColor, 0.1)\n      : transparentize(props.theme.colors.textColor, 0.02)};\n  padding: 8px;\n  align-items: center;\n`;\n\nexport const InfoIcon = styled(ShapedIcon).attrs((props: RemainingAttemptsProps) => ({\n  hasOneRemainingAttempt: props.hasOneRemainingAttempt\n}))<RemainingAttemptsProps>`\n  border: solid 1px ${props => getBorderColor(props)};\n  .icon {\n    font-size: 8px;\n    margin: 0px;\n  }\n`;\n\nexport const RemainingAttemptsBlockText = styled(Text).attrs({\n  'data-test': 'remaining-attempts-info'\n})`\n  ${secondaryFont};\n  font-size: 10px;\n  font-weight: 600;\n  text-align: center;\n  padding-left: 10px;\n  padding-right: 10px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.8)};\n  text-align: left;\n  ${media.mobile`\n    line-height: 15px !important;\n  `};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport { ICON } from 'constants/components';\nimport {\n  isAttemptsLimited,\n  getLimitedAttemptsNumber,\n  shouldSubmitAllQuestions\n} from 'store/settings/selectors';\nimport { RootAppState } from 'store/types';\nimport { getCourseAttempt } from 'store/course/selectors';\nimport {\n  RemainingAttemptsBlockText,\n  RemainingAttemptsWrapper,\n  InfoIcon\n} from './RemainingAttemptsBlock.styled';\n\ntype RemainingAttemptsBlockProps = {\n  isSubmitAtOnce: boolean;\n  isLimitedAttempts: boolean;\n  allowedAttempts: number;\n  usedAttempts: number;\n  isResultsPage: boolean;\n  text?: string;\n  isQuestionPage?: boolean;\n  remainingQuestionAttempt?: number;\n  setShowRemainingAttemptsBlock?(value: boolean): void;\n};\n\nexport class RemainingAttemptsBlock extends React.Component<RemainingAttemptsBlockProps> {\n  render() {\n    const {\n      isSubmitAtOnce,\n      isLimitedAttempts,\n      allowedAttempts,\n      usedAttempts,\n      isResultsPage,\n      text,\n      isQuestionPage = false,\n      remainingQuestionAttempt = 0,\n      setShowRemainingAttemptsBlock\n    } = this.props;\n\n    const remainingAttempts = allowedAttempts - usedAttempts;\n    let remainingAttemptsText = `${localize('[remaining attempts]')} ${remainingAttempts}`;\n\n    if (remainingAttempts === 1 && !isResultsPage && allowedAttempts > 1) {\n      remainingAttemptsText = localize('[only this attempt left]');\n    }\n\n    if (allowedAttempts === 1) {\n      remainingAttemptsText = localize('[one attempt to complete course]');\n    }\n\n    const shouldDisplay =\n      isQuestionPage ||\n      (isSubmitAtOnce &&\n        isLimitedAttempts &&\n        remainingAttempts > 0 &&\n        (remainingAttempts < allowedAttempts || allowedAttempts === 1));\n\n    if (!isQuestionPage && setShowRemainingAttemptsBlock) {\n      setShowRemainingAttemptsBlock(shouldDisplay);\n    }\n\n    const hasOneRemainingAttempt = isQuestionPage\n      ? remainingQuestionAttempt === 1\n      : remainingAttempts === 1;\n    return (\n      shouldDisplay && (\n        <RemainingAttemptsWrapper hasOneRemainingAttempt={hasOneRemainingAttempt}>\n          <InfoIcon\n            name=\"info\"\n            color=\"mainColor\"\n            shapeColor=\"textColor\"\n            size=\"small\"\n            shape={ICON.SHAPES.ROUND_OUTLINED}\n            hasOneRemainingAttempt={hasOneRemainingAttempt}\n          />\n          <RemainingAttemptsBlockText>{text || remainingAttemptsText}</RemainingAttemptsBlockText>\n        </RemainingAttemptsWrapper>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootAppState) => ({\n  isSubmitAtOnce: shouldSubmitAllQuestions(state),\n  isLimitedAttempts: isAttemptsLimited(state),\n  allowedAttempts: getLimitedAttemptsNumber(state),\n  usedAttempts: getCourseAttempt(state)\n});\nexport default connect(mapStateToProps)(RemainingAttemptsBlock);\n","import styled, { css } from 'styled-components';\nimport { Text, Icon } from 'components/common';\nimport { transparentize } from 'utils/color';\nimport { transition, pointerOnHover } from 'components/mixins/interactivity';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { mainFontText } from 'components/mixins/typography';\n\ntype TitleProps = {\n  isActive: boolean;\n};\nexport const Title = styled(Text)<TitleProps>`\n  ${mainFontText}\n  && {\n    font-size: 18px;\n  }\n  text-decoration: none;\n  font-style: normal;\n  && {\n    ${props =>\n      !props.isActive &&\n      css`\n        color: ${transparentize(props.theme.colors.textColor, 0.7)};\n        ${transition('color')};\n        ${pointerOnHover};\n        &:hover {\n          color: ${props.theme.colors.textColor};\n        }\n        &:focus {\n          color: ${props.theme.colors.textColor};\n          outline: 1px solid black;\n        }\n      `};\n  }\n`;\n\ntype ContainerProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isActive: boolean;\n};\nexport const Container = styled.button.attrs((props: ContainerProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<ContainerProps>`\n  ${buttonDefaultStyle};\n  position: relative;\n  height: 57px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  box-shadow: inset -2px 0 6px 0 ${transparentize(defaultBoxShadowColor, 0.04)};\n  width: 100%;\n  padding: 0 40px;\n  text-align: left;\n\n  &:focus ${Title} {\n    outline: 1px solid black;\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus:not(:focus-visible) ${Title} {\n    outline: none;\n  }\n\n  &::after {\n    left: 0;\n    top: 0;\n    content: '';\n    display: block;\n    position: absolute;\n    width: 100%;\n    box-shadow: 0 0 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      &::before {\n        content: '';\n        position: absolute;\n        width: 2px;\n        height: 100%;\n        top: 0;\n        left: 0;\n        background-color: ${props.theme.colors.mainColor};\n      }\n    `};\n`;\n\ntype ResultsIconProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isCollapsed?: boolean;\n};\nexport const ResultsIcon = styled(Icon).attrs((props: ResultsIconProps) => ({\n  tabIndex: props.tabIndex,\n  role: 'button',\n  'aria-label': props.ariaLabel\n}))<ResultsIconProps>`\n  position: absolute;\n  left: 17px;\n  bottom: 35px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n  ${pointerOnHover};\n  ${props =>\n    props.isCollapsed &&\n    css`\n      font-size: 25px;\n    `};\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\n\nimport { Container, Title, ResultsIcon } from './ResultsBlock.styled';\n\ntype ResultsBlockProps = {\n  show: boolean;\n  isActive: boolean;\n  collapsed: boolean;\n  navigateToResults(): void;\n  ariaLabel: string;\n  tabIndex: number;\n};\n\nexport class ResultsBlock extends React.PureComponent<ResultsBlockProps, {}> {\n  static defaultProps = {\n    show: true,\n    isActive: false,\n    collapsed: false\n  };\n\n  render() {\n    const {\n      navigateToResults,\n      show,\n      isActive,\n      collapsed,\n      ariaLabel,\n      tabIndex\n    } = this.props;\n    return (\n      show &&\n      (collapsed ? (\n        !isActive && (\n          <ResultsIcon\n            ariaLabel={ariaLabel}\n            tabIndex={tabIndex}\n            {...(!isActive && {\n              onClick: navigateToResults,\n              onKeyDown: (event: any) => {\n                if (event.key === 'Enter') {\n                  navigateToResults();\n                }\n              }\n            })}\n            name=\"medal\"\n            size={27}\n          />\n        )\n      ) : (\n        <Container\n          ariaLabel={ariaLabel}\n          isActive={isActive}\n          tabIndex={tabIndex}\n          onClick={navigateToResults}\n        >\n          <Title isActive={isActive} appearance=\"h4\" ellipsis>\n            {localize('[results]')}\n          </Title>\n        </Container>\n      ))\n    );\n  }\n}\n\nexport default ResultsBlock;\n","import styled, { css } from 'styled-components';\nimport { Text, Icon } from 'components/common';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { transparentize } from 'utils/color';\nimport { transition, pointerOnHover } from 'components/mixins/interactivity';\nimport { TOC } from 'constants/components';\nimport { mainFontText } from 'components/mixins/typography';\n\nconst colored = css`\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  ${transition('color')};\n`;\n\ntype CourseBackIconProps = {\n  isCollapsed?: boolean;\n};\nexport const CourseBackIcon = styled(Icon)<CourseBackIconProps>`\n  font-size: 40px;\n  ${colored};\n  ${pointerOnHover};\n  ${props =>\n    props.isCollapsed &&\n    css`\n      font-size: 25px;\n    `};\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\nexport const CourseTitleText = styled(Text)`\n  ${mainFontText}\n  && {\n    font-size: 18px;\n    ${colored};\n  }\n  font-style: normal;\n  line-height: 1.4;\n  text-decoration: none;\n  align-self: center;\n  margin-left: 16px;\n  word-break: break-word;\n`;\n\ntype CourseBackButtonProps = {\n  ariaLabel: string;\n  tabIndex: number;\n  isCollapsed: boolean;\n};\n\nexport const CourseBackButton = styled.button.attrs((props: CourseBackButtonProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel,\n  'data-test': 'back-home-button'\n}))<CourseBackButtonProps>`\n  ${buttonDefaultStyle};\n  height: auto;\n  ${props =>\n    !props.isCollapsed &&\n    css`\n      display: flex;\n      flex: 0 0 auto;\n      margin: 40px 40px 0 40px;\n    `};\n  ${props =>\n    props.isCollapsed &&\n    css`\n      height: auto;\n      margin: 0;\n      padding: 0;\n    `};\n  width: auto;\n  overflow: visible;\n  text-align: left;\n  ${pointerOnHover};\n\n  @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n    margin: 0 10px;\n    & ${CourseBackIcon} {\n      display: none;\n    }\n\n    & ${CourseTitleText} {\n      margin-left: 0;\n    }\n  }\n  &:focus {\n    outline: 1px solid black;\n    ${CourseTitleText}, ${CourseBackIcon} {\n      color: ${props => props.theme.colors.textColor};\n    }\n  }\n  &:hover {\n    ${CourseTitleText}, ${CourseBackIcon} {\n      color: ${props => props.theme.colors.textColor};\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { localize } from 'core/localization';\n\nimport { CourseTitleText, CourseBackIcon, CourseBackButton } from './Header.styled';\n\ntype HeaderProps = {\n  courseTitle?: string;\n  collapsed?: boolean;\n  navigateToIndex(): void;\n  tabIndex: number;\n};\n\nexport class Header extends Component<HeaderProps, {}> {\n  render() {\n    const { navigateToIndex, courseTitle, collapsed = false, tabIndex } = this.props;\n    return collapsed ? (\n      <CourseBackButton\n        onClick={navigateToIndex}\n        tabIndex={tabIndex}\n        ariaLabel={`${localize('[back home button]')}`}\n        isCollapsed={collapsed}\n        data-test=\"back-home-button\"\n      >\n        <CourseBackIcon name=\"back-btn\" isCollapsed />\n      </CourseBackButton>\n    ) : (\n      <CourseBackButton\n        onClick={navigateToIndex}\n        tabIndex={tabIndex}\n        ariaLabel={`${localize('[back home button]')}`}\n        isCollapsed={collapsed}\n        data-test=\"back-home-button\"\n      >\n        <CourseBackIcon name=\"back-btn\" />\n        <CourseTitleText appearance=\"h4\" maxLength={35}>\n          {courseTitle}\n        </CourseTitleText>\n      </CourseBackButton>\n    );\n  }\n}\n\nexport default Header;\n","import styled, { css } from 'styled-components';\nimport { Text, ShapedIcon } from 'components/common';\nimport { IconElement } from 'components/common/Icon/Icon.styled';\nimport { transparentize } from 'utils/color';\nimport { pointerOnHover } from 'components/mixins/interactivity';\n\nconst highlighted = css`\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n`;\n\ntype QuestionIconProps = {\n  ariaLabel?: string;\n  name: string;\n  size: any;\n  shape: any;\n  shapeColor: any;\n  iconColor?: any;\n  shapeOpacity?: any;\n};\nexport const QuestionIcon = styled(ShapedIcon).attrs((props: QuestionIconProps) => ({\n  'aria-label': props.ariaLabel\n}))<QuestionIconProps>`\n  flex-shrink: 0;\n  margin-right: 9px;\n\n  & ${IconElement} {\n    color: ${props => props.theme.colors[props.iconColor]};\n  }\n`;\n\nexport const CollapsedQuestionIcon = styled(ShapedIcon)`\n  flex-shrink: 0;\n`;\n\nexport const TitleText = styled(Text)`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px !important;\n  word-break: break-word;\n`;\n\ntype QuestionItemProps = {\n  ariaLabel: string;\n  role: string;\n  tabIndex: number;\n  isActive: boolean;\n  isPassed?: boolean;\n};\nexport const QuestionItem = styled.li.attrs((props: QuestionItemProps) => ({\n  'aria-label': props.ariaLabel,\n  role: props.role,\n  tabIndex: props.tabIndex\n}))<QuestionItemProps>`\n  display: flex;\n  align-items: flex-start;\n  padding: 8px 20px;\n  position: relative;\n  ${props =>\n    props.isActive &&\n    css`\n      ${highlighted};\n      ${TitleText} {\n        color: ${props.theme.colors.textColor};\n      }\n      &::before {\n        content: '';\n        position: absolute;\n        width: 2px;\n        height: 100%;\n        top: 0;\n        left: 0;\n        background-color: ${props.theme.colors.mainColor};\n      }\n    `};\n  ${props =>\n    !props.isActive &&\n    css`\n      ${pointerOnHover};\n      ${TitleText} {\n        color: ${props.isPassed\n          ? transparentize(props.theme.colors.textColor, 0.6, { fullColor: true })\n          : props.theme.colors.textColor};\n      }\n      &:hover {\n        ${highlighted};\n      }\n      &:hover ${TitleText} {\n        text-decoration: underline;\n      }\n    `};\n`;\n","import * as React from 'react';\nimport { SIZES, ICON } from 'constants/components';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport { localize } from 'core/localization';\nimport { QuestionItem, TitleText, QuestionIcon } from './QuestionTreeNode.styled';\nimport { NAVIGATION_ITEM_ICON_NAMES } from 'constants/common';\n\nexport type QuestionTreeNodeProps = {\n  question: {\n    id: string;\n    title: string;\n    isInformationContent: boolean;\n    isAnswered: boolean;\n    isAnsweredCorrectly: boolean;\n    isSurvey: boolean;\n    type: string;\n    hasBeenOpened: boolean;\n    isPreviousAnswerCorrect: boolean;\n    isAnswerChanged: boolean;\n  };\n  isActive: boolean;\n  onClick?(e?: any): void;\n  onKeyDown?(e?: any): void;\n  role: string;\n  tabIndex: number;\n};\n\nexport default class QuestionTreeNode<T extends QuestionTreeNodeProps> extends React.PureComponent<\n  T,\n  {}\n> {\n  getTitleQuestion(isAnswered: boolean, isAnsweredCorrectly: boolean, title: string) {\n    return isAnswered\n      ? isAnsweredCorrectly\n        ? `${localize('[aria label question icon ok]')} ${title}`\n        : `${localize('[aria label question icon non]')} ${title}`\n      : `${localize('[aria label question icon]')} ${title}`;\n  }\n\n  render() {\n    const { question, onClick, isActive, onKeyDown, role, tabIndex } = this.props;\n    const {\n      title,\n      isInformationContent,\n      isAnswered,\n      isAnsweredCorrectly,\n      isSurvey,\n      type,\n      hasBeenOpened\n    } = question;\n    const isPassed = type === INFORMATION_CONTENT ? hasBeenOpened : isAnswered;\n    return (\n      <QuestionItem\n        isActive={isActive}\n        isPassed={isPassed}\n        tabIndex={tabIndex}\n        role={role}\n        ariaLabel={\n          !isInformationContent\n            ? this.getTitleQuestion(isAnswered, isAnsweredCorrectly, title)\n            : title\n        }\n        {...(!isActive && { onClick, onKeyDown })}\n      >\n        {!isInformationContent && renderQuestionIcon(isAnswered, isAnsweredCorrectly, isSurvey)}\n        <TitleText>{title}</TitleText>\n      </QuestionItem>\n    );\n  }\n}\n\nfunction renderQuestionIcon(isAnswered: any, isAnsweredCorrectly: any, isSurvey: any) {\n  let iconName;\n  if (isAnswered) {\n    if (isAnsweredCorrectly) {\n      iconName = NAVIGATION_ITEM_ICON_NAMES.OK;\n    } else {\n      iconName = NAVIGATION_ITEM_ICON_NAMES.CLOSE;\n    }\n  } else {\n    iconName = NAVIGATION_ITEM_ICON_NAMES.QUESTION;\n  }\n\n  if (isSurvey) {\n    iconName = 'survey';\n  }\n  const color = isAnswered\n    ? isAnsweredCorrectly || isSurvey\n      ? 'correctColor'\n      : 'incorrectColor'\n    : 'mainColor';\n  return (\n    <QuestionIcon\n      name={iconName}\n      size={SIZES.SMALL}\n      shape={ICON.SHAPES.ROUND_FULL_COLOR}\n      shapeColor={color}\n      {...(!isAnswered && { fontSize: 7 })}\n    />\n  );\n}\n","import * as React from 'react';\nimport { SIZES, ICON } from 'constants/components';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport { NAVIGATION_ITEM_ICON_NAMES } from 'constants/common';\nimport QuestionTreeNode, { QuestionTreeNodeProps } from './QuestionTreeNode';\nimport { QuestionItem, TitleText, QuestionIcon } from './QuestionTreeNode.styled';\n\ninterface QuestionTreeNodeSubmitOnceProps extends QuestionTreeNodeProps {\n  isAttemptSubmitted?: boolean;\n  hasGuidedReattempt: boolean;\n}\n\nexport default class QuestionTreeNodeSubmitOnce extends QuestionTreeNode<\n  QuestionTreeNodeSubmitOnceProps\n> {\n  render() {\n    const {\n      question,\n      onClick,\n      isActive,\n      onKeyDown,\n      role,\n      tabIndex,\n      isAttemptSubmitted = false,\n      hasGuidedReattempt\n    } = this.props;\n    const {\n      title,\n      isInformationContent,\n      isAnswered,\n      isAnsweredCorrectly,\n      isSurvey,\n      type,\n      hasBeenOpened,\n      isPreviousAnswerCorrect,\n      isAnswerChanged\n    } = question;\n    const isPassed = type === INFORMATION_CONTENT ? hasBeenOpened : isAnswered;\n    return (\n      <QuestionItem\n        isActive={isActive}\n        isPassed={isPassed}\n        tabIndex={tabIndex}\n        role={role}\n        ariaLabel={\n          !isInformationContent\n            ? this.getTitleQuestion(isAnswered, isAnsweredCorrectly, title)\n            : title\n        }\n        {...(!isActive && { onClick, onKeyDown })}\n      >\n        {!isInformationContent &&\n          renderQuestionIcon(\n            isAnswered,\n            isAnsweredCorrectly,\n            isSurvey,\n            isAttemptSubmitted,\n            hasGuidedReattempt,\n            isPreviousAnswerCorrect,\n            isAnswerChanged\n          )}\n        <TitleText>{title}</TitleText>\n      </QuestionItem>\n    );\n  }\n}\n\nfunction getIconName(\n  isAttemptSubmitted: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean,\n  isAnswered: boolean,\n  hasGuidedReattempt: boolean,\n  isPreviousAnswerCorrect: boolean,\n  isAnswerChanged: boolean\n) {\n  let questionIconText = '';\n\n  const whenNotSubmitted = () => {\n    if (hasGuidedReattempt) {\n      if (isPreviousAnswerCorrect || isAnswerChanged) {\n        return NAVIGATION_ITEM_ICON_NAMES.OK;\n      }\n      return NAVIGATION_ITEM_ICON_NAMES.QUESTION;\n    }\n    return NAVIGATION_ITEM_ICON_NAMES.OK;\n  };\n\n  const whenSubmitted = () => {\n    if (isAnsweredCorrectly) {\n      return NAVIGATION_ITEM_ICON_NAMES.OK;\n    }\n    return NAVIGATION_ITEM_ICON_NAMES.CLOSE;\n  };\n\n  if (isSurvey) {\n    questionIconText = 'survey';\n  } else if (!isAttemptSubmitted && isAnswered) {\n    questionIconText = whenNotSubmitted();\n  } else if (isAttemptSubmitted && isAnswered) {\n    questionIconText = whenSubmitted();\n  } else {\n    questionIconText = 'question';\n  }\n  return questionIconText;\n}\n\nfunction getShapeColor(\n  isAttemptSubmitted: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean,\n  hasGuidedReattempt: boolean,\n  isPreviousAnswerCorrect: boolean\n) {\n  let questionTextColor = 'textColor';\n  if (isAttemptSubmitted) {\n    if (isAnsweredCorrectly || isSurvey) {\n      questionTextColor = 'correctColor';\n    } else {\n      questionTextColor = 'incorrectColor';\n    }\n  } else if (!isAttemptSubmitted && hasGuidedReattempt && isPreviousAnswerCorrect) {\n    questionTextColor = 'correctColor';\n  }\n  return questionTextColor;\n}\n\nfunction renderQuestionIcon(\n  isAnswered: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean,\n  isAttemptSubmitted = false,\n  hasGuidedReattempt: boolean,\n  isPreviousAnswerCorrect: boolean,\n  isAnswerChanged: boolean\n) {\n  const questionIconText = getIconName(\n    isAttemptSubmitted,\n    isAnsweredCorrectly,\n    isSurvey,\n    isAnswered,\n    hasGuidedReattempt,\n    isPreviousAnswerCorrect,\n    isAnswerChanged\n  );\n  const questionTextColor = getShapeColor(\n    isAttemptSubmitted,\n    isAnsweredCorrectly,\n    isSurvey,\n    hasGuidedReattempt,\n    isPreviousAnswerCorrect\n  );\n\n  return (\n    <QuestionIcon\n      name={questionIconText}\n      size={SIZES.SMALL}\n      shape={ICON.SHAPES.ROUND_FULL_COLOR}\n      shapeColor={questionTextColor}\n      iconColor={!isAttemptSubmitted && questionTextColor}\n      shapeOpacity={!isAttemptSubmitted && 0.08}\n      {...(!isAnswered && { fontSize: 7 })}\n    />\n  );\n}\n","import React from 'react';\nimport QuestionTreeNode from '../QuestionTreeNode';\nimport QuestionTreeNodeSubmitOnce from '../QuestionTreeNode/QuestionTreeNodeSubmitOnce';\n\nexport default function ExpandedTocItems({ props }: any) {\n  const {\n    activeQuestionId,\n    section,\n    navigateToQuestion,\n    isExpanded,\n    shouldSubmitAllQuestions,\n    isAttemptSubmitted,\n    isCourseOnOnePage,\n    hasGuidedReattempt\n  } = props;\n\n  const navigateWithKeyEvent = (event: any, { id }: any, question: any) => {\n    if (event.key === 'Enter') {\n      return navigateToQuestion(id, question.id, isCourseOnOnePage);\n    }\n    return false;\n  };\n\n  const getTabindex = () => (isExpanded ? 0 : -1);\n\n  return props.section.questions.map((question: any, questionIndex: any) =>\n    shouldSubmitAllQuestions ? (\n      <QuestionTreeNodeSubmitOnce\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabindex()}\n        isAttemptSubmitted={isAttemptSubmitted}\n        hasGuidedReattempt={hasGuidedReattempt}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(section.id, question.id, isCourseOnOnePage),\n          onKeyDown: event => navigateWithKeyEvent(event, section, question)\n        })}\n      />\n    ) : (\n      <QuestionTreeNode\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabindex()}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(section.id, question.id, isCourseOnOnePage),\n          onKeyDown: event => navigateWithKeyEvent(event, section, question)\n        })}\n      />\n    )\n  );\n}\n","import styled, { css } from 'styled-components';\nimport Icon from 'components/common/Icon';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport Text from 'components/common/Text';\nimport { centerAbsoluteElement } from 'components/mixins/placement';\n\ntype PopoverContentWrapperProps = {\n  ariaModal: boolean;\n};\nexport const PopoverContentWrapper = styled.div<PopoverContentWrapperProps>`\n  ${secondaryFont};\n  line-height: 2;\n  padding: 4px 6px 6px;\n  text-align: center;\n  outline: none;\n  color: ${props => {\n    return props.theme.colors.textColor;\n  }};\n  font-size: 14px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  max-height: 70vh;\n  overflow: hidden;\n`;\n\nexport const PopoverContent = styled.div`\n  width: 240px;\n  min-height: 310px;\n  padding: 35px 20px 19px;\n`;\n\nexport const ClosePopoverIcon = styled(Icon)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.2)};\n  transition: 0.2s;\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\ntype QuestionsProgressProps = {\n  isPassed: boolean;\n};\nexport const QuestionsProgress = styled.div<QuestionsProgressProps>`\n  width: 94px;\n  height: 94px;\n  margin: 0 auto 30px;\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 4px;\n    background: ${props => props.theme.colors.textColor};\n    position: absolute;\n    top: -1px;\n    left: 50%;\n  }\n\n  ${props =>\n    props.isPassed &&\n    css`\n      .CircularProgressbar-path {\n        stroke: ${props.theme.colors.correctColor} !important;\n      }\n    `};\n`;\n\nexport const CongratsMessageWrapper = styled.div``;\n\nexport const CongratsMessageTitle = styled(Text)`\n  margin-bottom: 6px;\n`;\n\nexport const NotPassedMessageWrapper = styled.div``;\n\nexport const FailedMessageWrapper = styled(CongratsMessageWrapper)``;\n\nexport const FailedMessageTitle = styled(CongratsMessageTitle)``;\n\nexport const PopoverButton = styled.button.attrs({\n  'data-test': 'popover-button'\n})`\n  cursor: pointer;\n  background: none;\n  border: none;\n  width: 100%;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1;\n`;\n\nexport const QuestionProgressText = styled.div`\n  position: absolute;\n  ${centerAbsoluteElement};\n  font-size: 24px;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { isPassed, isFailed, isInProgress } from 'utils/comparison';\nimport { withTheme } from 'styled-components';\nimport { Tooltip } from 'components/common';\nimport { localize } from 'core/localization';\nimport { transparentize } from 'utils/color';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport * as settingsSelectors from 'store/settings/selectors';\nimport {\n  getAffectProgressQuestionsCountInSection,\n  getCorrectlyAffectProgressQuestionsCountInSection,\n  getAffectCorrectlyAnsweredQuestionsCount,\n  getAnsweredSectionQuestionsCount,\n  getSectionProgress\n} from 'store/sections/selectors';\nimport {\n  getCourseNonInformationQuestionCount,\n  getCourseInformationQuestionCount,\n  getAffectProgressQuestionsCount,\n  getQuestionCountToReachMasteryScore,\n  getQuestionPercentageToReachMasteryScore,\n  getCorrectlyAffectProgressAnsweredQuestionsCount\n} from 'store/questions/selectors';\nimport * as courseSelectors from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport { KEYS, CIRCULAR_PROGRESSBAR } from 'constants/common';\nimport {\n  PopoverContentWrapper,\n  PopoverContent,\n  ClosePopoverIcon,\n  QuestionsProgress,\n  CongratsMessageWrapper,\n  CongratsMessageTitle,\n  NotPassedMessageWrapper,\n  FailedMessageWrapper,\n  FailedMessageTitle,\n  PopoverButton,\n  QuestionProgressText\n} from './ProgressPopover.styled';\n\ntype ProgressPopoverProps = {\n  score: number;\n  status: number;\n  affectProgressQuestionsCountInSection?: number;\n  colors?: { [key: string]: any };\n  popoverPosition: any;\n  children?: any;\n  correctlyAffectProgressQuestionsCountInSection?: number;\n  affectCorrectlyAnsweredQuestionsCount?: number;\n  answeredSectionQuestionsCount?: number;\n  sectionProgress?: number;\n  isSubmitAtOnce?: boolean;\n  isCourseSubmitted?: boolean;\n  sectionId: string;\n  questions?: any;\n  theme?: any;\n  ariaLabelledby?: string;\n  isOverallMasteryScore?: boolean;\n  isScoringOfContentPagesAllowed?: boolean;\n  courseNonInformationQuestionCount?: number;\n  courseInformationQuestionCount?: number;\n  affectProgressQuestionsCount?: number;\n  masteryScoreValue?: number;\n  questionCountToReachMasteryScore?: number;\n  questionPercentageToReachMasteryScore?: number;\n  correctlyAffectProgressAnsweredQuestionsCount?: number;\n  isCoursePassed?: boolean;\n  isCourseProgress?: boolean;\n  isCourseFailed?: boolean;\n  courseScore?: number;\n};\n\ntype ProgressPopoverState = {\n  isExpanded: boolean;\n};\n\nexport class ProgressPopover extends React.Component<ProgressPopoverProps, ProgressPopoverState> {\n  popoverRef: any;\n\n  constructor(props: ProgressPopoverProps) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n    this.popoverRef = React.createRef();\n  }\n\n  toggleOnClick = (evt: any) => {\n    if (!evt.key) {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      });\n    }\n  };\n\n  closePopup = () => {\n    if (this.state.isExpanded) {\n      this.setState({\n        isExpanded: false\n      });\n    }\n  };\n\n  handleClosePopupKeyDown = (evt: any) => {\n    if ([KEYS.ENTER.toLowerCase(), KEYS.ESCAPE.toLowerCase()].includes(evt.key.toLowerCase())) {\n      this.closePopup();\n    }\n  };\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      const element = document.getElementById('progress-popover');\n      if (element && this.state.isExpanded) {\n        element.focus();\n      }\n      if (this.popoverRef.current && !this.state.isExpanded) {\n        this.popoverRef.current.focus();\n      }\n    }, 0);\n  }\n\n  shouldComponentUpdate(nextProps: ProgressPopoverProps, nextState: ProgressPopoverState) {\n    return this.state.isExpanded !== nextState.isExpanded;\n  }\n\n  render() {\n    const { isExpanded } = this.state;\n    const { popoverPosition, ariaLabelledby } = this.props;\n\n    return (\n      <Tooltip\n        style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}\n        trigger={'click'}\n        open={isExpanded}\n        onRequestClose={this.closePopup}\n        position={popoverPosition}\n        tooltipTheme={'light'}\n        arrow={true}\n        interactive\n        html={this.renderPopoverContent()}\n      >\n        <PopoverButton\n          tabIndex={0}\n          onClick={this.toggleOnClick}\n          ref={this.popoverRef}\n          aria-labelledby={ariaLabelledby}\n        />\n      </Tooltip>\n    );\n  }\n\n  getCircularProgressbarStroke = () => {\n    const { status, colors, isCourseFailed, isOverallMasteryScore } = this.props;\n    const failingObject = isOverallMasteryScore ? isCourseFailed : isFailed(status);\n\n    return failingObject && colors ? colors.incorrectColor : colors && colors.mainColor;\n  };\n\n  renderSubmitOnceQuestionProgress = () => {\n    const {\n      status,\n      correctlyAffectProgressQuestionsCountInSection,\n      affectProgressQuestionsCountInSection,\n      answeredSectionQuestionsCount,\n      sectionProgress = 0,\n      isCourseSubmitted = false,\n      score,\n      colors\n    } = this.props;\n    const templateTheme = this.props.theme;\n    const isSectionPassed = isCourseSubmitted && isPassed(status);\n\n    return (\n      <React.Fragment>\n        <QuestionsProgress isPassed={isSectionPassed} theme={templateTheme}>\n          <QuestionProgressText>\n            {isCourseSubmitted\n              ? correctlyAffectProgressQuestionsCountInSection\n              : answeredSectionQuestionsCount}\n            /{affectProgressQuestionsCountInSection}\n          </QuestionProgressText>\n          <CircularProgressbar\n            strokeWidth={2}\n            percentage={isCourseSubmitted ? score : sectionProgress}\n            styles={{\n              path: {\n                stroke: this.getCircularProgressbarStroke(),\n                strokeLinecap: CIRCULAR_PROGRESSBAR.STROKE_LINECAP,\n                transition: CIRCULAR_PROGRESSBAR.TRANSITION\n              },\n              trail: {\n                stroke: colors && transparentize(colors.textColor, 0.02)\n              }\n            }}\n          />\n        </QuestionsProgress>\n        {this.renderPopoverMessageContent()}\n      </React.Fragment>\n    );\n  };\n\n  renderQuestionProgress = () => {\n    const {\n      status,\n      correctlyAffectProgressQuestionsCountInSection,\n      affectProgressQuestionsCountInSection,\n      score,\n      colors\n    } = this.props;\n    const templateTheme = this.props.theme;\n    const isSectionPassed = isPassed(status);\n\n    return (\n      <React.Fragment>\n        <QuestionsProgress isPassed={isSectionPassed} theme={templateTheme}>\n          <QuestionProgressText>\n            {correctlyAffectProgressQuestionsCountInSection}/{affectProgressQuestionsCountInSection}\n          </QuestionProgressText>\n          <CircularProgressbar\n            strokeWidth={2}\n            percentage={score}\n            styles={{\n              path: {\n                stroke: this.getCircularProgressbarStroke(),\n                strokeLinecap: CIRCULAR_PROGRESSBAR.STROKE_LINECAP,\n                transition: CIRCULAR_PROGRESSBAR.TRANSITION\n              },\n              trail: {\n                stroke: colors && transparentize(colors.textColor, 0.02)\n              }\n            }}\n          />\n        </QuestionsProgress>\n        {this.renderPopoverMessageContent()}\n      </React.Fragment>\n    );\n  };\n\n  renderMasteryProgress = () => {\n    const {\n      colors,\n      affectProgressQuestionsCount,\n      questionPercentageToReachMasteryScore,\n      correctlyAffectProgressAnsweredQuestionsCount,\n      isCoursePassed\n    } = this.props;\n    const templateTheme = this.props.theme;\n    const isMasteryCoursePassed = isCoursePassed !== undefined ? isCoursePassed : false;\n\n    return (\n      <React.Fragment>\n        <QuestionsProgress isPassed={isMasteryCoursePassed} theme={templateTheme}>\n          <QuestionProgressText>\n            {correctlyAffectProgressAnsweredQuestionsCount}/{affectProgressQuestionsCount}\n          </QuestionProgressText>\n          <CircularProgressbar\n            strokeWidth={2}\n            percentage={\n              questionPercentageToReachMasteryScore !== undefined\n                ? questionPercentageToReachMasteryScore\n                : 0\n            }\n            styles={{\n              path: {\n                stroke: this.getCircularProgressbarStroke(),\n                strokeLinecap: CIRCULAR_PROGRESSBAR.STROKE_LINECAP,\n                transition: CIRCULAR_PROGRESSBAR.TRANSITION\n              },\n              trail: {\n                stroke: colors && transparentize(colors.textColor, 0.02)\n              }\n            }}\n          />\n        </QuestionsProgress>\n        {this.renderPopoverMasteryScoreMessage()}\n      </React.Fragment>\n    );\n  };\n\n  selectProgressPopup = () => {\n    const { isSubmitAtOnce, isOverallMasteryScore } = this.props;\n\n    if (isOverallMasteryScore) {\n      return this.renderMasteryProgress();\n    }\n    return isSubmitAtOnce ? this.renderSubmitOnceQuestionProgress() : this.renderQuestionProgress();\n  };\n\n  renderPopoverContent = () => {\n    const templateTheme = this.props.theme;\n\n    return (\n      <PopoverContentWrapper\n        id=\"progress-popover\"\n        role=\"dialog\"\n        ariaModal={true}\n        tabIndex={-1}\n        onKeyDown={event => this.handleClosePopupKeyDown(event)}\n        theme={templateTheme}\n      >\n        <PopoverContent>\n          <ClosePopoverIcon\n            role=\"button\"\n            ariaLabel={localize('[close popover]')}\n            tabIndex={0}\n            onKeyDown={(event: any) => this.handleClosePopupKeyDown(event)}\n            onClick={this.toggleOnClick}\n            size={14}\n            name=\"close-popup\"\n            theme={templateTheme}\n          />\n          {this.selectProgressPopup()}\n        </PopoverContent>\n      </PopoverContentWrapper>\n    );\n  };\n\n  renderPopoverMessageContent = () => {\n    const {\n      status,\n      affectProgressQuestionsCountInSection,\n      theme,\n      affectCorrectlyAnsweredQuestionsCount\n    } = this.props;\n    return (\n      <>\n        {isPassed(status) && (\n          <CongratsMessageWrapper>\n            <CongratsMessageTitle theme={theme} appearance=\"h4\">\n              {localize('[passed section title]')}\n            </CongratsMessageTitle>\n            {localize('[passed section]')}\n          </CongratsMessageWrapper>\n        )}\n        {isFailed(status) && (\n          <FailedMessageWrapper>\n            <FailedMessageTitle theme={theme} appearance=\"h4\">\n              {localize('[failed section title]')}\n            </FailedMessageTitle>\n            {localize('[failed section x y]', {\n              countCorrectlyAnsweredQuestionsInSection: affectCorrectlyAnsweredQuestionsCount,\n              countQuestionsInSection: affectProgressQuestionsCountInSection\n            })}\n          </FailedMessageWrapper>\n        )}\n        {isInProgress(status) && (\n          <NotPassedMessageWrapper>\n            {localize('[you need to answer X questions out of Y]', {\n              correctQuestionsCount: affectCorrectlyAnsweredQuestionsCount,\n              totalQuestionsCount: affectProgressQuestionsCountInSection\n            })}\n          </NotPassedMessageWrapper>\n        )}\n      </>\n    );\n  };\n\n  renderPopoverMasteryScoreMessage = () => {\n    const {\n      courseNonInformationQuestionCount,\n      courseInformationQuestionCount,\n      affectProgressQuestionsCount,\n      questionCountToReachMasteryScore,\n      isCoursePassed,\n      isCourseProgress,\n      isCourseFailed,\n      masteryScoreValue,\n      theme\n    } = this.props;\n\n    const isCourseOnlyQuestions =\n      courseInformationQuestionCount !== undefined &&\n      courseNonInformationQuestionCount !== undefined &&\n      courseInformationQuestionCount <= 0 &&\n      courseNonInformationQuestionCount > 0;\n    const isCourseOnlyContents =\n      courseInformationQuestionCount !== undefined &&\n      courseNonInformationQuestionCount !== undefined &&\n      courseInformationQuestionCount > 0 &&\n      courseNonInformationQuestionCount <= 0;\n\n    let messageToShow = '[overall answer x y items z]';\n    if (isCourseOnlyQuestions) {\n      messageToShow = '[overall answer x y questions z]';\n    }\n    if (isCourseOnlyContents) {\n      messageToShow = '[overall answer x y content z]';\n    }\n\n    const inProgressMessage = localize(messageToShow, {\n      questionCountToReachMasteryScore,\n      affectProgressQuestionsCount,\n      masteryScoreValue\n    });\n\n    return (\n      <>\n        {isCoursePassed && (\n          <CongratsMessageWrapper>\n            <CongratsMessageTitle theme={theme} appearance=\"h4\">\n              {localize('[passed section title]')}\n            </CongratsMessageTitle>\n            {localize('[question pool passed]')}\n          </CongratsMessageWrapper>\n        )}\n        {isCourseFailed && (\n          <FailedMessageWrapper>\n            <FailedMessageTitle theme={theme} appearance=\"h4\">\n              {localize('[course is not passed]')}\n            </FailedMessageTitle>\n            {inProgressMessage}\n          </FailedMessageWrapper>\n        )}\n        {isCourseProgress && <NotPassedMessageWrapper>{inProgressMessage}</NotPassedMessageWrapper>}\n      </>\n    );\n  };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ProgressPopoverProps) {\n  return {\n    colors: settingsSelectors.getColors(state),\n    affectProgressQuestionsCountInSection: getAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.sectionId\n    ),\n    correctlyAffectProgressQuestionsCountInSection: getCorrectlyAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.sectionId\n    ),\n    affectCorrectlyAnsweredQuestionsCount: getAffectCorrectlyAnsweredQuestionsCount(\n      state,\n      ownProps.sectionId\n    ),\n    sectionProgress: getSectionProgress(state, ownProps.sectionId),\n    answeredSectionQuestionsCount: getAnsweredSectionQuestionsCount(state, ownProps.sectionId),\n    isCourseSubmitted: courseSelectors.isAttemptSubmitted(state),\n    isOverallMasteryScore: settingsSelectors.isOverallMasteryScore(state),\n    isCoursePassed: courseSelectors.isPassed(state),\n    isCourseProgress: courseSelectors.isInProgress(state),\n    isCourseFailed: courseSelectors.isFailed(state),\n    courseScore: courseSelectors.getScore(state),\n    isScoringOfContentPagesAllowed: settingsSelectors.isScoringOfContentPagesAllowed(state),\n    courseNonInformationQuestionCount: getCourseNonInformationQuestionCount(state),\n    courseInformationQuestionCount: getCourseInformationQuestionCount(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    masteryScoreValue: settingsSelectors.getMasteryScoreValue(state),\n    questionCountToReachMasteryScore: getQuestionCountToReachMasteryScore(state),\n    questionPercentageToReachMasteryScore: getQuestionPercentageToReachMasteryScore(state),\n    correctlyAffectProgressAnsweredQuestionsCount: getCorrectlyAffectProgressAnsweredQuestionsCount(\n      state\n    )\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(ProgressPopover));\n","import styled from 'styled-components';\nimport { pointerOnHover } from 'components/mixins/interactivity';\nimport { Icon, Text } from 'components/common';\nimport { TOC } from 'constants/components';\nimport { transparentize } from 'utils/color';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { mainFontText } from 'components/mixins/typography';\n\nexport const ProgressPopoverWrapper = styled.div`\n  position: relative;\n`;\n\ntype SectionItemProps = {\n  role: string;\n  ariaLabel?: string;\n};\nexport const SectionItem = styled.li.attrs((props: SectionItemProps) => ({\n  role: props.role,\n  'aria-label': props.ariaLabel\n}))<SectionItemProps>`\n  margin: 0 40px;\n  padding: 16px 0 20px 0;\n  box-shadow: 0 0 10px 0 ${transparentize(defaultBoxShadowColor, 0.05)};\n  background: ${props => props.theme.colors.contentBodyColor};\n  &:focus {\n    outline: none;\n  }\n  @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n    margin: 0 10px;\n  }\n`;\n\nexport const TitleIcon = styled(Icon)`\n  position: absolute;\n  top: 9px;\n  right: 20px;\n  margin-left: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n`;\n\nexport const QuestionList = styled.ul.attrs((props: any) => ({\n  role: props.role\n}))`\n  padding-bottom: 20px;\n`;\n\ntype HeaderProps = {\n  ariaLabel: string;\n  role: string;\n  tabIndex: number;\n  ariaExpanded: any;\n};\nexport const Header = styled.div.attrs((props: HeaderProps) => ({\n  tabIndex: props.tabIndex,\n  role: props.role,\n  'aria-expanded': props.ariaExpanded,\n  'aria-label': props.ariaLabel\n}))<HeaderProps>`\n  position: relative;\n  padding: 0 20px;\n  margin-bottom: 16px;\n  ${pointerOnHover};\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  margin: 0 20px;\n  justify-content: flex-end;\n`;\n\nexport const StatusIcon = styled.div`\n  display: flex;\n  margin-right: 8px;\n`;\n\nexport const SectionText = styled(Text)`\n  word-break: break-word;\n  ${mainFontText}\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  font-style: normal;\n  && {\n    font-size: 18px;\n  }\n  line-height: 22px;\n  margin-right: 25px;\n`;\n\ntype StatusTextProps = {\n  ariaLabel: string;\n  tabIndex: number;\n  role: string;\n  isPassed: boolean;\n  isOverallMasteryScore: boolean;\n  id?: string;\n};\nexport const StatusText = styled(Text).attrs((props: StatusTextProps) => ({\n  tabIndex: props.tabIndex,\n  role: props.role,\n  'aria-label': props.ariaLabel,\n  id: props.id\n}))<StatusTextProps>`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 24px;\n  color: ${props =>\n    props.isPassed && !props.isOverallMasteryScore\n      ? props.theme.colors.correctColor\n      : transparentize(props.theme.colors.textColor, 0.4)};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Status = styled.div`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    ${StatusText} {\n      text-decoration: underline;\n    }\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getProgressStatusLocalizationKey } from 'utils/localization';\nimport { isPassed, isFailed } from 'utils/comparison';\nimport { Collapse, Icon } from 'components/common';\nimport { localize } from 'core/localization';\nimport ProgressPopover from 'components/common/ProgressPopover';\nimport {\n  getAffectProgressQuestionsCountInSection,\n  getAnsweredSectionQuestionsCount,\n  getCorrectlyAffectProgressQuestionsCountInSection\n} from 'store/sections/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport { shouldSubmitAllQuestions, isQuestionPoolEnabled } from 'store/settings/selectors';\nimport {\n  SectionText,\n  SectionItem,\n  Header,\n  TitleIcon,\n  Footer,\n  Status,\n  StatusIcon,\n  StatusText,\n  QuestionList,\n  ProgressPopoverWrapper\n} from './SectionTreeNode.styled';\nimport { objectToArray } from '../../../utils/object';\n\ntype SectionTreeNodeProps = {\n  isActive: boolean;\n  section: {\n    title?: string;\n    status?: number;\n    affectsProgress?: boolean;\n    score?: number;\n    id?: string;\n  };\n  children: any;\n  ariaLabel: string;\n  tabIndex: any;\n  questions: any[];\n  isSubmitAtOnce?: boolean;\n  affectProgressQuestionsCountInSection?: number;\n  answeredSectionQuestionsCount?: number;\n  correctlyAffectProgressQuestionsCountInSection?: number;\n  isCourseSubmitted?: boolean;\n  isCourseProgress: boolean;\n  sectionIndex: any;\n  poolTitle?: string;\n  affectsProgress?: boolean;\n  questionsForPool: any;\n  answeredPoolQuestionsCount?: number;\n  shouldSubmitAllQuestions?: boolean;\n  isQuestionPoolEnabled: boolean;\n};\n\ntype SectionTreeNodeState = {\n  isExpanded: any;\n};\n\nconst ariaLabelStatusText = localize('[aria label status text]');\n\nexport class SectionTreeNode extends React.Component<SectionTreeNodeProps, SectionTreeNodeState> {\n  constructor(props: SectionTreeNodeProps) {\n    super(props);\n    this.state = {\n      isExpanded: this.props.isActive\n    };\n  }\n\n  componentDidUpdate(prevProps: SectionTreeNodeProps) {\n    if (this.props.isActive !== prevProps.isActive) {\n      this.setState({\n        isExpanded: this.props.isActive\n      });\n    }\n  }\n\n  toggleIsExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  answeredCorrectlyCountText = (correctCount: any, totalCount: any) =>\n    localize('[x y answered correctly]', {\n      countCorrectlyAnsweredQuestionsInSection: correctCount,\n      countQuestionsInSection: totalCount\n    });\n\n  answeredCountText = (correctCount: any, totalCount: any) =>\n    localize('[x y questions answered]', {\n      countAnsweredQuestionsInSection: correctCount,\n      countQuestionsInSection: totalCount\n    });\n\n  renderSubmitOnceStatusText = (\n    section: {\n      title: string;\n      status: number;\n    },\n    isCourseSubmitted: boolean,\n    isCourseProgress: boolean,\n    sectionStatusId: string,\n    correctlyAffectProgressQuestionsCountInSection?: number,\n    affectProgressQuestionsCountInSection?: number,\n    answeredSectionQuestionsCount?: number\n  ) => {\n    const { status } = section;\n    const statusText = getProgressStatusLocalizationKey(status);\n    return (\n      <React.Fragment>\n        {isCourseSubmitted &&\n          isCourseProgress &&\n          this.answeredCorrectlyCountText(\n            correctlyAffectProgressQuestionsCountInSection,\n            affectProgressQuestionsCountInSection\n          )}\n        {isCourseSubmitted && !isCourseProgress && localize(statusText)}\n        {!isCourseSubmitted &&\n          this.answeredCountText(\n            answeredSectionQuestionsCount,\n            affectProgressQuestionsCountInSection\n          )}\n      </React.Fragment>\n    );\n  };\n\n  renderSubmitOnceSectionProgress = (\n    section: {\n      title: string;\n      status: number;\n    },\n    isCourseSubmitted: boolean,\n    isCourseProgress: boolean,\n    sectionStatusId: string,\n    correctlyAffectProgressQuestionsCountInSection?: number,\n    affectProgressQuestionsCountInSection?: number,\n    answeredSectionQuestionsCount?: number\n  ) => {\n    const { status, title } = section;\n    const isSectionPassed = isPassed(status);\n    const statusText = getProgressStatusLocalizationKey(status);\n    return (\n      <React.Fragment>\n        <Status>\n          {isSectionPassed && isCourseSubmitted && !isCourseProgress && (\n            <StatusIcon>\n              <Icon name=\"ok\" size={5} color=\"correctColor\" />\n            </StatusIcon>\n          )}\n          {isFailed(status) && isCourseSubmitted && !isCourseProgress && (\n            <StatusIcon>\n              <Icon name=\"close\" size={5} color=\"textColor\" opacity={0.4} />\n            </StatusIcon>\n          )}\n          <StatusText\n            isPassed={isSectionPassed && isCourseSubmitted}\n            ellipsis\n            ariaLabel={`${ariaLabelStatusText} ${title} ${localize(statusText)}`}\n            tabIndex={0}\n            role=\"status\"\n            data-test=\"question-answered-text\"\n            isOverallMasteryScore={isCourseProgress}\n            id={sectionStatusId}\n          >\n            {this.renderSubmitOnceStatusText(\n              section,\n              isCourseSubmitted,\n              isCourseProgress,\n              sectionStatusId,\n              correctlyAffectProgressQuestionsCountInSection,\n              affectProgressQuestionsCountInSection,\n              answeredSectionQuestionsCount\n            )}\n          </StatusText>\n        </Status>\n      </React.Fragment>\n    );\n  };\n\n  renderSectionProgress = (\n    section: {\n      title: string;\n      status: number;\n    },\n    isCourseProgress: boolean,\n    sectionStatusId: string,\n    correctlyAffectProgressQuestionsCountInSection?: number,\n    affectProgressQuestionsCountInSection?: number\n  ) => {\n    const { status, title } = section;\n    const isSectionPassed = isPassed(status);\n    const statusText = getProgressStatusLocalizationKey(status);\n    return (\n      <>\n        <Status>\n          {isSectionPassed && (\n            <StatusIcon>\n              <Icon name=\"ok\" size={5} color=\"correctColor\" />\n            </StatusIcon>\n          )}\n          <StatusText\n            data-test=\"question-answered-text\"\n            isPassed={isSectionPassed}\n            ellipsis\n            ariaLabel={`${ariaLabelStatusText} ${title} ${localize(statusText)}`}\n            tabIndex={-1}\n            role=\"status\"\n            isOverallMasteryScore={isCourseProgress}\n            id={sectionStatusId}\n          >\n            {isCourseProgress\n              ? this.answeredCorrectlyCountText(\n                  correctlyAffectProgressQuestionsCountInSection,\n                  affectProgressQuestionsCountInSection\n                )\n              : localize(statusText)}\n          </StatusText>\n        </Status>\n      </>\n    );\n  };\n\n  renderSectionHeads = (children: any, isExpanded: boolean, tabIndex: number, title: any) => (\n    <Header\n      ariaLabel={\n        isExpanded\n          ? `${localize('[close section items]')} ${title}`\n          : `${localize('[open section items]')} ${title}`\n      }\n      tabIndex={tabIndex}\n      role=\"menuitem\"\n      ariaExpanded={true}\n      aria-haspopup={children.length > 0 ? 'true' : 'false'}\n      onClick={this.toggleIsExpanded}\n      onKeyDown={event => {\n        if (event.key === 'Enter') {\n          this.toggleIsExpanded();\n        }\n      }}\n    >\n      <SectionText appearance=\"h4\" maxLength={35}>\n        {title}\n      </SectionText>\n      <TitleIcon size={5} name={isExpanded ? 'chevron-up' : 'chevron-down'} />\n    </Header>\n  );\n\n  renderSectionBody = (children: any, isExpanded: boolean) => (\n    <Collapse isExpanded={isExpanded} animateAppear={false} duration={200} opacityDuration=\"200\">\n      <QuestionList role=\"menu\">{children}</QuestionList>\n    </Collapse>\n  );\n\n  renderSectionFooter = (section: any) => {\n    const {\n      questions,\n      isSubmitAtOnce,\n      affectProgressQuestionsCountInSection,\n      answeredSectionQuestionsCount,\n      correctlyAffectProgressQuestionsCountInSection,\n      isCourseSubmitted = false,\n      isCourseProgress,\n      sectionIndex\n    } = this.props;\n    const { id, affectsProgress, status, score } = section;\n    const sectionStatusId = `section-status-${sectionIndex}`;\n    return (\n      <Footer>\n        {affectsProgress && (\n          <ProgressPopoverWrapper>\n            <ProgressPopover\n              popoverPosition={'top'}\n              questions={questions}\n              score={score}\n              status={status}\n              sectionId={id}\n              ariaLabelledby={sectionStatusId}\n            />\n            {isSubmitAtOnce\n              ? this.renderSubmitOnceSectionProgress(\n                  section,\n                  isCourseSubmitted,\n                  isCourseProgress,\n                  sectionStatusId,\n                  correctlyAffectProgressQuestionsCountInSection,\n                  affectProgressQuestionsCountInSection,\n                  answeredSectionQuestionsCount\n                )\n              : this.renderSectionProgress(\n                  section,\n                  isCourseProgress,\n                  sectionStatusId,\n                  correctlyAffectProgressQuestionsCountInSection,\n                  affectProgressQuestionsCountInSection\n                )}\n          </ProgressPopoverWrapper>\n        )}\n      </Footer>\n    );\n  };\n\n  renderPoolFooter = () => {\n    const {\n      poolTitle,\n      questionsForPool,\n      isCourseProgress,\n      shouldSubmitAllQuestions,\n      answeredPoolQuestionsCount\n    } = this.props;\n    const correctlyAnsweredQuestionsInSection = objectToArray(questionsForPool).filter(\n      item => item.isAnsweredCorrectly === true\n    );\n    const countCorrectlyAnsweredQuestionsInSection = correctlyAnsweredQuestionsInSection.length;\n    const countQuestionsInSection = questionsForPool.length;\n    const shouldDisplayAsPassed = false;\n    const courseStatusText = shouldSubmitAllQuestions\n      ? this.answeredCountText(answeredPoolQuestionsCount, countQuestionsInSection)\n      : this.answeredCorrectlyCountText(\n          countCorrectlyAnsweredQuestionsInSection,\n          countQuestionsInSection\n        );\n\n    return (\n      <Footer>\n        <StatusText\n          isPassed={shouldDisplayAsPassed}\n          ariaLabel={`${ariaLabelStatusText} ${poolTitle}`}\n          tabIndex={-1}\n          role=\"status\"\n          isOverallMasteryScore={isCourseProgress}\n        >\n          {courseStatusText}\n        </StatusText>\n      </Footer>\n    );\n  };\n\n  render() {\n    const { section, children, tabIndex, isQuestionPoolEnabled, poolTitle } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <SectionItem role=\"presentation\">\n        {this.renderSectionHeads(\n          children,\n          isExpanded,\n          tabIndex,\n          isQuestionPoolEnabled ? poolTitle : section.title\n        )}\n        {this.renderSectionBody(children, isExpanded)}\n        {isQuestionPoolEnabled ? this.renderPoolFooter() : this.renderSectionFooter(section)}\n      </SectionItem>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps?: any) {\n  if (isQuestionPoolEnabled(state)) {\n    return {\n      isCourseSubmitted: isAttemptSubmitted(state),\n      isQuestionPoolEnabled: isQuestionPoolEnabled(state)\n    };\n  }\n\n  return {\n    affectProgressQuestionsCountInSection: getAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.section.id\n    ),\n    answeredSectionQuestionsCount: getAnsweredSectionQuestionsCount(state, ownProps.section.id),\n    correctlyAffectProgressQuestionsCountInSection: getCorrectlyAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.section.id\n    ),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state)\n  };\n}\n\nexport default connect(mapStateToProps)(SectionTreeNode);\n","import styled from 'styled-components';\nimport {\n  QuestionItem,\n  TitleText\n} from 'components/treeOfContent/QuestionTreeNode/QuestionTreeNode.styled';\n\ntype LearningObjectiveItemProps = {\n  isActive: boolean;\n  tabIndex: number;\n  role: string;\n  ariaLabel: string;\n  onClick?(e?: any): void;\n  onKeyDown?(e?: any): void;\n};\nexport const LearningObjectiveItem = styled(QuestionItem).attrs({\n  'data-test': 'learning-objective-item'\n})<LearningObjectiveItemProps>``;\n\nexport const ItemTitle = styled(TitleText)``;\n","import React, { PureComponent } from 'react';\nimport { localize } from 'core/localization';\nimport { LearningObjectiveItem, ItemTitle } from './LearningObjectiveTreeNode.styled';\n\ntype LearningObjectiveTreeNodeProps = {\n  isActive: boolean;\n  onClick(e?: any): void;\n  onKeyDown(e?: any): void;\n  role: string;\n  tabIndex: number;\n};\n\nexport default class LearningObjectiveTreeNode extends PureComponent<LearningObjectiveTreeNodeProps, {}> {\n  render() {\n    const { onClick, isActive, onKeyDown, role, tabIndex } = this.props;\n    return (\n      <LearningObjectiveItem\n        isActive={isActive}\n        tabIndex={tabIndex}\n        role={role}\n        ariaLabel={localize('[overview]')}\n        {...(!isActive && { onClick, onKeyDown })}\n      >\n        <ItemTitle>{localize('[overview]')}</ItemTitle>\n      </LearningObjectiveItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport QuestionTreeNode from '../QuestionTreeNode/QuestionTreeNode';\nimport QuestionTreeNodeSubmitOnce from '../QuestionTreeNode/QuestionTreeNodeSubmitOnce';\nimport SectionTreeNode from '../SectionTreeNode/SectionTreeNode';\n\ntype ExpandedTocPoolSectionProps = {\n  activeQuestionId: string;\n  navigateToQuestion: any;\n  questionsForPool: any[];\n  isExpanded: boolean;\n  isCourseProgress: boolean;\n  shouldSubmitAllQuestions: boolean;\n  isAttemptSubmitted: boolean;\n  answeredPoolQuestionsCount: number;\n  hasGuidedReattempt: boolean;\n};\n\nconst navigateWithKeyEvent = (event: any, question: any, navigateToQuestion: any) => {\n  if (event.key === 'Enter') {\n    return navigateToQuestion(question.sectionId, question.id);\n  }\n  return false;\n};\n\nconst getTabIndex = (isExpanded: boolean) => {\n  if (isExpanded) {\n    return 0;\n  }\n  return -1;\n};\n\nfunction ExpandedTocPoolItems({ props }: any) {\n  const {\n    activeQuestionId,\n    navigateToQuestion,\n    questionsForPool,\n    isExpanded,\n    shouldSubmitAllQuestions,\n    isAttemptSubmitted,\n    hasGuidedReattempt\n  } = props;\n  return questionsForPool.map((question: any, questionIndex: any) =>\n    shouldSubmitAllQuestions ? (\n      <QuestionTreeNodeSubmitOnce\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabIndex(isExpanded)}\n        isAttemptSubmitted={isAttemptSubmitted}\n        hasGuidedReattempt={hasGuidedReattempt}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(question.sectionId, question.id),\n          onKeyDown: event => navigateWithKeyEvent(event, question, navigateToQuestion)\n        })}\n      />\n    ) : (\n      <QuestionTreeNode\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabIndex(isExpanded)}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(question.sectionId, question.id),\n          onKeyDown: event => navigateWithKeyEvent(event, question, navigateToQuestion)\n        })}\n      />\n    )\n  );\n}\n\nclass ExpandedTocPoolSection extends React.Component<ExpandedTocPoolSectionProps> {\n  render() {\n    const {\n      activeQuestionId,\n      navigateToQuestion,\n      questionsForPool,\n      isExpanded,\n      isCourseProgress,\n      shouldSubmitAllQuestions,\n      isAttemptSubmitted,\n      answeredPoolQuestionsCount,\n      hasGuidedReattempt\n    } = this.props;\n\n    return (\n      <SectionTreeNode\n        poolTitle={localize('[questions - second variation]')}\n        isActive={activeQuestionId ? true : false}\n        questionsForPool={questionsForPool}\n        isCourseProgress={isCourseProgress}\n        answeredPoolQuestionsCount={answeredPoolQuestionsCount}\n        shouldSubmitAllQuestions={shouldSubmitAllQuestions}\n        tabIndex={0}\n      >\n        <ExpandedTocPoolItems\n          props={{\n            activeQuestionId,\n            navigateToQuestion,\n            questionsForPool,\n            isExpanded,\n            shouldSubmitAllQuestions,\n            isAttemptSubmitted,\n            hasGuidedReattempt\n          }}\n        />\n      </SectionTreeNode>\n    );\n  }\n}\n\nexport default ExpandedTocPoolSection;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { TOC } from 'constants/components';\nimport { Text, ProgressResult } from 'components/common';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { SectionItem } from '../SectionTreeNode/SectionTreeNode.styled';\n\ntype SectionsProps = {\n  role: string;\n};\nexport const Sections = styled.ul.attrs((props: SectionsProps) => ({\n  role: props.role,\n  'data-test': 'expanded-navigation-block'\n}))<SectionsProps>`\n  flex: 1 0 auto;\n  margin-top: 44px;\n  margin-bottom: 50px;\n\n  ${SectionItem} + ${SectionItem} {\n    margin-top: 2px;\n  }\n`;\n\ntype ExpandedTocContainer = {\n  ariaLabel: string;\n  isExpanded: boolean;\n  shouldAdjustHeight: boolean;\n};\nexport const ExpandedTocContainer = styled.nav.attrs((props: ExpandedTocContainer) => ({\n  'aria-label': props.ariaLabel\n}))<ExpandedTocContainer>`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: ${props => (props.shouldAdjustHeight ? `calc(100vh - 125px)` : `calc(100vh - 57px)`)};\n  ${getCustomScrollbars()};\n  box-shadow: inset -2px 2px 6px 0 ${transparentize(defaultBoxShadowColor, 0.04)};\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n\n  @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n    padding-top: 32px;\n  }\n  &:focus {\n    outline: none;\n  }\n  & ${Sections} {\n    margin-top: 32px;\n  }\n`;\n\nexport const ProgressMasteryScoreWrapper = styled.div`\n  margin: 16px 40px 0;\n`;\n\ntype submitAllAnswersWithLimitedAttempts = {\n  shouldAdjustHeight: boolean;\n};\n\nexport const SubmitAllAnswersWithLimitedAttempts = styled.div.attrs(\n  (props: submitAllAnswersWithLimitedAttempts) => {\n    return {};\n  }\n)<submitAllAnswersWithLimitedAttempts>`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  margin-bottom: 10px;\n  height: ${props => (props.shouldAdjustHeight ? `125px` : `57px`)};\n  box-shadow: inset -2px 0 6px 0 ${transparentize(defaultBoxShadowColor, 0.04)};\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  align-content: center;\n`;\nexport const SubmitAllAnswersButtonContainer = styled.div`\n  margin: 0 16px 16px;\n  width: 100%;\n  padding: 0 20px;\n  button {\n    width: 100%;\n  }\n  + div {\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n`;\n\nexport const ProgressMasteryScore = styled(ProgressResult)`\n  height: 4px;\n  border-radius: 2px;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.06)};\n`;\n\nexport const ProgressCaption = styled(Text)`\n  display: block;\n  font-size: 10px;\n  font-weight: bold;\n  text-transform: uppercase;\n  line-height: 1;\n  color: ${props => props.theme.colors.textColor};\n  opacity: 0.7;\n`;\n\nexport const TocWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import React from 'react';\nimport { OPACITY } from '../../../constants/components';\nimport SubmitOnceButton from '../../submitOnce';\nimport RemainingAttemptsBlock from '../../remainingAttemptsBlock';\nimport { localize } from '../../../core/localization';\nimport ResultsBlock from '../ResultsBlock/ResultsBlock';\nimport Header from '../Header/Header';\nimport ExpandedTocItems from '../ExpandedTocItems';\nimport SectionTreeNode from '../SectionTreeNode/SectionTreeNode';\nimport LearningObjectiveTreeNode from '../LearningObjectiveTreeNode/LearningObjectiveTreeNode';\nimport ExpandedTocPoolSection from '../ExpandedTocPoolSection/ExpandedTocPoolSection';\n\nimport {\n  Sections,\n  ExpandedTocContainer,\n  ProgressMasteryScoreWrapper,\n  ProgressMasteryScore,\n  ProgressCaption,\n  SubmitAllAnswersButtonContainer,\n  TocWrapper,\n  SubmitAllAnswersWithLimitedAttempts\n} from './ExpandedToc.styled';\n\ntype ExpandedTocProps = {\n  isExpanded: boolean;\n  courseStructure: {\n    title: string;\n    sections: any[];\n    isAttemptSubmitted: boolean;\n  };\n  activeSectionId: string;\n  activeQuestionId: string;\n  navigateToIndex(): void;\n  navigateToQuestion(sectionId: string, questionId: string, isCourseOnOnePage: boolean): void;\n  navigateToLearningObjective(sectionId: string, isCourseOnOnePage: boolean): void;\n  submitAllAnswerOnce(section: any): void;\n  navigateToResults(): void;\n  isResultsActive: boolean;\n  isLearningObjectiveView: boolean;\n  courseProgress: number;\n  masteryScore: number;\n  isCourseProgress: boolean;\n  affectProgressSectionsCount: number;\n  questionsForPool: any;\n  isQuestionPool: boolean;\n  isCourseOnOnePage: boolean;\n  shouldSubmitAllQuestions: boolean;\n  affectProgressQuestionsCount: number;\n  affectAnsweredQuestionsCount: number;\n  answeredQuestionsProgress: number;\n  showSubmitButton: boolean;\n  isNextPageResults: boolean;\n  isCoursePassed: boolean;\n  isShowContentPagesEnabled: boolean;\n  hasGuidedReattempt: boolean;\n};\n\nfunction ExpandedTocSection({ props }: any) {\n  const {\n    courseStructure,\n    activeSectionId,\n    activeQuestionId,\n    navigateToQuestion,\n    navigateToLearningObjective,\n    isExpanded,\n    isLearningObjectiveView,\n    scrollToQuestion,\n    isCourseOnOnePage,\n    shouldSubmitAllQuestions,\n    isCourseProgress,\n    isShowContentPagesEnabled,\n    hasGuidedReattempt\n  } = props;\n  const { isAttemptSubmitted } = courseStructure;\n  return courseStructure.sections.map((section: any, sectionIndex: any) => (\n    <SectionTreeNode\n      key={sectionIndex}\n      isActive={section.id === activeSectionId}\n      section={section}\n      questions={section.questions}\n      tabIndex={isExpanded ? 0 : -1}\n      isCourseProgress={isCourseProgress}\n      sectionIndex={sectionIndex}\n    >\n      {section.learningObjective && isShowContentPagesEnabled && (\n        <LearningObjectiveTreeNode\n          role=\"menuitem\"\n          tabIndex={0}\n          isActive={section.id === activeSectionId && isLearningObjectiveView}\n          onClick={() => navigateToLearningObjective(section.id, isCourseOnOnePage)}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              navigateToLearningObjective(section.id, isCourseOnOnePage);\n            }\n          }}\n        />\n      )}\n      <ExpandedTocItems\n        props={{\n          section,\n          activeQuestionId,\n          isExpanded,\n          navigateToQuestion,\n          scrollToQuestion,\n          isCourseOnOnePage,\n          shouldSubmitAllQuestions,\n          isAttemptSubmitted,\n          hasGuidedReattempt\n        }}\n      />\n    </SectionTreeNode>\n  ));\n}\n\nclass ExpandedToc extends React.Component<\n  ExpandedTocProps,\n  { shouldShowRemainingAttemptsBlock: boolean }\n> {\n  refContainer: any;\n\n  constructor(props: ExpandedTocProps) {\n    super(props);\n    this.state = {\n      shouldShowRemainingAttemptsBlock: false\n    };\n    this.refContainer = React.createRef();\n  }\n\n  renderSubmitOnceMasteryScoreProgress = () => {\n    const {\n      courseProgress,\n      answeredQuestionsProgress,\n      masteryScore,\n      affectAnsweredQuestionsCount,\n      affectProgressQuestionsCount,\n      isCoursePassed\n    } = this.props;\n\n    const { isAttemptSubmitted } = this.props.courseStructure;\n\n    return (\n      <ProgressMasteryScoreWrapper>\n        <ProgressMasteryScore\n          progress={isAttemptSubmitted ? courseProgress : answeredQuestionsProgress}\n          progressColor={isAttemptSubmitted && isCoursePassed ? 'correctColor' : 'textColor'}\n          opacity={isAttemptSubmitted && isCoursePassed ? OPACITY.PERCENT_100 : OPACITY.PERCENT_30}\n          passedMark={masteryScore}\n          passedMarkStyles={{\n            opacity: OPACITY.PERCENT_30,\n            color: 'textColor'\n          }}\n          forwardedRef={this.refContainer}\n        />\n        <ProgressCaption data-test=\"question-answered-count\">\n          {isAttemptSubmitted\n            ? localize('[you complete x]', {\n                percentSuccess: courseProgress\n              })\n            : localize('[x out of y questions answered]', {\n                countAnsweredQuestions: affectAnsweredQuestionsCount,\n                countQuestions: affectProgressQuestionsCount\n              })}\n        </ProgressCaption>\n      </ProgressMasteryScoreWrapper>\n    );\n  };\n\n  setShowRemainingAttemptsBlock = (value: boolean) => {\n    this.setState({ shouldShowRemainingAttemptsBlock: value });\n  };\n\n  renderSectionProgress = (courseProgress: number, masteryScore: number) => (\n    <ProgressMasteryScoreWrapper>\n      <ProgressMasteryScore\n        progress={courseProgress}\n        progressColor=\"correctColor\"\n        opacity={OPACITY.PERCENT_100}\n        passedMark={masteryScore}\n        passedMarkStyles={{\n          opacity: OPACITY.PERCENT_30,\n          color: 'textColor'\n        }}\n        forwardedRef={this.refContainer}\n      />\n      <ProgressCaption>\n        {localize('[you complete x]', {\n          percentSuccess: courseProgress\n        })}\n      </ProgressCaption>\n    </ProgressMasteryScoreWrapper>\n  );\n\n  render() {\n    const {\n      courseStructure,\n      activeSectionId,\n      activeQuestionId,\n      navigateToIndex,\n      navigateToResults,\n      navigateToQuestion,\n      navigateToLearningObjective,\n      isResultsActive,\n      isExpanded,\n      isLearningObjectiveView,\n      courseProgress,\n      masteryScore,\n      isCourseProgress,\n      affectProgressSectionsCount,\n      questionsForPool,\n      isQuestionPool,\n      isCourseOnOnePage,\n      shouldSubmitAllQuestions,\n      showSubmitButton,\n      affectAnsweredQuestionsCount,\n      isShowContentPagesEnabled,\n      hasGuidedReattempt\n    } = this.props;\n    const { isAttemptSubmitted } = courseStructure;\n    const { shouldShowRemainingAttemptsBlock } = this.state;\n\n    return (\n      <React.Fragment>\n        <TocWrapper>\n          <ExpandedTocContainer\n            ref={this.refContainer}\n            isExpanded={isExpanded}\n            aria-hidden={!isExpanded}\n            ariaLabel={`${localize('[expanded nav section]')}`}\n            shouldAdjustHeight={shouldShowRemainingAttemptsBlock && showSubmitButton}\n          >\n            <Header\n              courseTitle={courseStructure.title}\n              navigateToIndex={navigateToIndex}\n              tabIndex={isExpanded ? 0 : -1}\n            />\n            {isCourseProgress &&\n              affectProgressSectionsCount > 0 &&\n              (shouldSubmitAllQuestions\n                ? this.renderSubmitOnceMasteryScoreProgress()\n                : this.renderSectionProgress(courseProgress, masteryScore))}\n\n            {isQuestionPool && (\n              <Sections role=\"menubar\">\n                <ExpandedTocPoolSection\n                  activeQuestionId={activeQuestionId}\n                  navigateToQuestion={navigateToQuestion}\n                  questionsForPool={questionsForPool}\n                  isExpanded={isExpanded}\n                  isCourseProgress={isCourseProgress}\n                  isAttemptSubmitted={isAttemptSubmitted}\n                  shouldSubmitAllQuestions={shouldSubmitAllQuestions}\n                  answeredPoolQuestionsCount={affectAnsweredQuestionsCount}\n                  hasGuidedReattempt={hasGuidedReattempt}\n                />\n              </Sections>\n            )}\n            {!isQuestionPool && (\n              <Sections role=\"menubar\">\n                <ExpandedTocSection\n                  props={{\n                    courseStructure,\n                    activeSectionId,\n                    activeQuestionId,\n                    navigateToIndex,\n                    navigateToResults,\n                    navigateToQuestion,\n                    navigateToLearningObjective,\n                    isResultsActive,\n                    isExpanded,\n                    isLearningObjectiveView,\n                    shouldSubmitAllQuestions,\n                    isCourseOnOnePage,\n                    isCourseProgress,\n                    isShowContentPagesEnabled,\n                    hasGuidedReattempt\n                  }}\n                />\n              </Sections>\n            )}\n          </ExpandedTocContainer>\n          {shouldSubmitAllQuestions && showSubmitButton && (\n            <SubmitAllAnswersWithLimitedAttempts\n              shouldAdjustHeight={shouldShowRemainingAttemptsBlock && showSubmitButton}\n            >\n              <SubmitAllAnswersButtonContainer>\n                <SubmitOnceButton\n                  onClick={this.submitOnce}\n                  isActive={showSubmitButton}\n                  tabIndex={0}\n                />\n              </SubmitAllAnswersButtonContainer>\n              <RemainingAttemptsBlock\n                isResultsPage={false}\n                setShowRemainingAttemptsBlock={this.setShowRemainingAttemptsBlock}\n              />\n            </SubmitAllAnswersWithLimitedAttempts>\n          )}\n          <ResultsBlock\n            ariaLabel={localize('[results]')}\n            show={shouldSubmitAllQuestions ? !showSubmitButton : true}\n            isActive={isResultsActive}\n            navigateToResults={navigateToResults}\n            tabIndex={isExpanded ? 0 : -1}\n          />\n        </TocWrapper>\n      </React.Fragment>\n    );\n  }\n\n  submitOnce = () => {\n    const { courseStructure, submitAllAnswerOnce, navigateToResults } = this.props;\n    submitAllAnswerOnce(courseStructure.sections);\n    navigateToResults();\n  };\n}\n\nexport default ExpandedToc;\n","import styled, { css, keyframes } from 'styled-components';\nimport { ShapedIcon } from 'components/common';\nimport { pointerOnHover, transition } from 'components/mixins/interactivity';\n\nexport const scaleAnimation = keyframes`\n  0% { transform: scale(0.5); }\n  100% { transform: scale(1); }\n`;\n\ntype NavigationItemIconProps = {\n  role: string;\n  ariaLabel:string;\n  tabIndex: number;\n  isActive?: boolean;\n}\nexport const NavigationItemIcon = styled(ShapedIcon).attrs((props: NavigationItemIconProps) => ({\n  role: props.role,\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<NavigationItemIconProps>`\n  flex-shrink: 0;\n  ${transition('border, background-color, transform')};\n  &:focus {\n    border: none;\n    outline: 1px solid black;\n  }\n  ${props =>\n    !props.isActive &&\n    css`\n      ${pointerOnHover};\n      /* &:active {\n        animation: ${scaleAnimation} 0.2s;\n      } */\n    `};\n`;\n","import styled, { css } from 'styled-components';\nimport { pointerOnHover, transition } from 'components/mixins/interactivity';\nimport { IconElement } from 'components/common/Icon/Icon.styled';\nimport { transparentize } from 'utils/color';\nimport { MEDIA_SMALL } from 'constants/screenResolutions';\nimport { NavigationItemIcon } from '../NavigationItem/NavigationItem.styled';\n\ntype ContainerProps = {\n  role: string;\n}\nexport const Container = styled.div.attrs((props: ContainerProps) => ({\n  role: props.role,\n  'data-test': 'navigation-block'\n})) <ContainerProps>`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  ${NavigationItemIcon} + ${NavigationItemIcon} {\n    margin-top: 20px;\n  }\n  @media (max-height: ${MEDIA_SMALL}px){\n    margin-top: 100px;\n  }\n`;\n\ntype ItemsLimiterProps = {\n  height: number;\n}\nexport const ItemsLimiter = styled.div<ItemsLimiterProps>`\n  max-height: ${props => props.height + 10}px;\n  padding: 5px;\n  overflow: hidden;\n`;\n\ntype NavButtonProps = {\n  prev?: any;\n  next?: any;\n}\nexport const NavButton = styled.button<NavButtonProps>`\n  ${pointerOnHover};\n  position: absolute;\n  padding: 10px;\n  height: 30px;\n  outline: none;\n  background: none;\n  border: none;\n  width: 100%;\n  left: 0;\n\n  ${props => css`\n    & ${IconElement} {\n      color: ${transparentize(props.theme.colors.textColor, 0.7, {\n  solidColor: true\n})};\n    }\n  `};\n\n  &:hover ${IconElement} {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  ${props =>\n    props.prev &&\n    css`\n      transform: translate(0, -100%);\n      top: -20px;\n    `};\n  ${props =>\n    props.next &&\n    css`\n      transform: translate(0, 100%);\n      bottom: -20px;\n    `};\n`;\n\ntype ItemsProps = {\n  topShift: number;\n}\nexport const Items = styled.div<ItemsProps>`\n  ${transition('margin-top')};\n  margin-top: -${props => props.topShift}px;\n`;\n","import React, { Component } from 'react';\nimport { Icon } from 'components/common';\nimport { minCountTocNavigationElements, maxCountTocNavigationElements } from 'constants/common';\nimport throttle from 'lodash.throttle';\nimport { MEDIA_SMALL } from 'constants/screenResolutions';\nimport { Container, ItemsLimiter, Items, NavButton } from './NavigationBlock.styled';\n\nconst itemHeight = 24;\nconst itemDistance = 20;\n\ntype NavigationBlockProps = {\n  children: any[];\n  role: string;\n  navigationElementsCount: number;\n  activeItemIndex: number;\n};\ntype NavigationBlockState = {\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n  startIndex: number;\n  endIndex: number;\n  countTocNavigationElements: number;\n  windowHeight: number;\n};\nexport default class NavigationBlock extends Component<NavigationBlockProps, NavigationBlockState> {\n  constructor(props: NavigationBlockProps) {\n    super(props);\n    this.state = {\n      hasNextPage: false,\n      hasPrevPage: false,\n      startIndex: -1,\n      endIndex: -1,\n      countTocNavigationElements: maxCountTocNavigationElements,\n      windowHeight: window.innerHeight\n    };\n  }\n\n  componentDidMount() {\n    this.setTocNavigationElements(this.state.windowHeight);\n    window.addEventListener('resize', this.windowResizeHandler);\n\n    this.updatePagingState(this.props.navigationElementsCount, this.props.activeItemIndex);\n  }\n\n  componentDidUpdate(prevProps: NavigationBlockProps) {\n    const index = prevProps.activeItemIndex;\n    const { activeItemIndex, navigationElementsCount } = this.props;\n    if (\n      (index !== activeItemIndex && !this.isIndexInView(index)) ||\n      this.props.navigationElementsCount !== prevProps.navigationElementsCount\n    ) {\n      this.updatePagingState(navigationElementsCount, activeItemIndex);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n  }\n\n  windowResizeHandler = throttle(() => {\n    this.setState({ windowHeight: window.innerHeight });\n    this.setTocNavigationElements(this.state.windowHeight);\n  }, 500);\n\n  setTocNavigationElements = (height: any) => {\n    if (height <= MEDIA_SMALL) {\n      this.setState({ countTocNavigationElements: minCountTocNavigationElements });\n    } else {\n      this.setState({ countTocNavigationElements: maxCountTocNavigationElements });\n    }\n  };\n\n  isIndexInView = (index: any) => {\n    const { startIndex, endIndex } = this.state;\n    return index >= startIndex && index <= endIndex;\n  };\n\n  nextPage = () => {\n    const totalItems = this.props.navigationElementsCount;\n    const { startIndex, countTocNavigationElements } = this.state;\n    this.updatePagingState(totalItems, startIndex + countTocNavigationElements);\n  };\n\n  prevPage = () => {\n    const totalItems = this.props.navigationElementsCount;\n    const { startIndex, countTocNavigationElements } = this.state;\n    this.updatePagingState(totalItems, startIndex - countTocNavigationElements);\n  };\n\n  updatePagingState = (totalItems: any, index: any) => {\n    const { countTocNavigationElements } = this.state;\n    this.setState(calculatePaging(totalItems, index, countTocNavigationElements));\n  };\n\n  render() {\n    const { children, role } = this.props;\n    const { hasNextPage, hasPrevPage, startIndex, countTocNavigationElements } = this.state;\n    const limiterHeight =\n      countTocNavigationElements * itemHeight + (countTocNavigationElements - 1) * itemDistance;\n    const topShift = startIndex * itemHeight + startIndex * itemDistance;\n    return (\n      <Container role={role}>\n        {hasPrevPage && (\n          <NavButton tabIndex={0} onClick={this.prevPage} prev>\n            <Icon name=\"chevron-up\" />\n          </NavButton>\n        )}\n        <ItemsLimiter height={limiterHeight}>\n          <Items topShift={topShift}>{children}</Items>\n        </ItemsLimiter>\n        {hasNextPage && (\n          <NavButton tabIndex={0} onClick={this.nextPage} next>\n            <Icon name=\"chevron-down\" />\n          </NavButton>\n        )}\n      </Container>\n    );\n  }\n}\n\nfunction calculatePaging(totalItems: any, index: any, countTocNavigationElements: any) {\n  const range = getRange(totalItems, index, countTocNavigationElements);\n  const startIndex = range.start;\n  const endIndex = range.end;\n  const hasNextPage =\n    totalItems - startIndex !== countTocNavigationElements &&\n    totalItems > countTocNavigationElements;\n  const hasPrevPage = startIndex > 0;\n  return { hasPrevPage, hasNextPage, startIndex, endIndex };\n}\n\nfunction getRange(totalItems: any, index: any, countTocNavigationElements: any) {\n  if (index <= 0) {\n    return {\n      start: 0,\n      end: totalItems >= countTocNavigationElements ? countTocNavigationElements : totalItems\n    };\n  }\n\n  const postDelta = totalItems - 1 - index;\n  if (postDelta >= countTocNavigationElements) {\n    return { start: index, end: index + countTocNavigationElements };\n  }\n\n  const preDelta = countTocNavigationElements - postDelta;\n  const pre = index - preDelta + 1;\n  return { start: pre >= 0 ? pre : 0, end: index + postDelta };\n}\n","import React from 'react';\nimport { SIZES, ICON } from 'constants/components';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { NavigationItemIcon } from './NavigationItem.styled';\nimport { NAVIGATION_ITEM_ICON_NAMES } from 'constants/common';\n\ntype NavigationLearningItemProps = {\n  sectionTitle?: string;\n  onClick(e?: any): void;\n  onKeyDown(e?: any): void;\n  isActive: boolean;\n  role: string;\n  tabIndex: number;\n};\nexport const NavigationLearningItem = ({\n  sectionTitle,\n  onClick,\n  onKeyDown,\n  isActive,\n  role,\n  tabIndex\n}: NavigationLearningItemProps) =>\n  getNavigationItemIcon({\n    ariaLabel: sectionTitle,\n    title: sectionTitle,\n    isActive,\n    onClick,\n    onKeyDown,\n    size: SIZES.MEDIUM,\n    role,\n    tabIndex,\n    ...getContentIconProps(isActive)\n  });\n\ntype NavigationItemProps = {\n  question: {\n    title: string;\n    isInformationContent: boolean;\n    isAnswered: boolean;\n    isAnsweredCorrectly: boolean;\n    isSurvey: boolean;\n  };\n  isActive: boolean;\n  onClick?(e?: any): void;\n  onKeyDown?(e?: any): void;\n  role: string;\n  tabIndex: number;\n  shouldSubmitAllQuestions: boolean;\n  isAttemptSubmitted: boolean;\n  hasGuidedReattempt: boolean;\n};\nexport const NavigationItem = ({\n  question,\n  onClick,\n  onKeyDown,\n  isActive,\n  role,\n  tabIndex,\n  shouldSubmitAllQuestions,\n  isAttemptSubmitted,\n  hasGuidedReattempt\n}: NavigationItemProps) => {\n  let iconProps = getQuestionIconProps(isActive, question);\n  if (question.isInformationContent) {\n    iconProps = getContentIconProps(isActive);\n  } else if (shouldSubmitAllQuestions) {\n    iconProps = getSubmitOnceQuestionIconProps(\n      isActive,\n      question,\n      isAttemptSubmitted,\n      hasGuidedReattempt\n    );\n  }\n\n  const ariaLabel = question.isAnswered\n    ? question.isAnsweredCorrectly\n      ? `${localize('[aria label question icon ok]')} ${question.title}`\n      : `${localize('[aria label question icon non]')} ${question.title}`\n    : `${localize('[aria label question icon]')} ${question.title}`;\n  return getNavigationItemIcon({\n    ariaLabel: question.isInformationContent ? question.title : ariaLabel,\n    title: question.title || ariaLabel,\n    isActive,\n    onClick,\n    onKeyDown,\n    size: SIZES.MEDIUM,\n    role,\n    tabIndex,\n    ...iconProps\n  });\n};\n\nfunction getNavigationItemIcon(configs: any) {\n  return <NavigationItemIcon {...configs} />;\n}\n\nfunction getContentIconProps(isActive: boolean) {\n  return {\n    name: 'point',\n    fontSize: 4,\n    shape: isActive ? ICON.SHAPES.ROUND_SHADED : ICON.SHAPES.ROUND_FULL_COLOR,\n    getColor: (colors: any) => getDefaultQuestionColor(isActive, colors),\n    getShapeColor: (colors: any) => transparentize(colors.textColor, 0.1),\n    ...(!isActive && {\n      getHoverColor: (colors: any) => colors.textColor,\n      hoverShape: ICON.SHAPES.ROUND_SHADED\n    })\n  };\n}\n\nfunction getSubmitOnceQuestionIconProps(\n  isActive: boolean,\n  question: any,\n  isAttemptSubmitted: boolean,\n  hasGuidedReattempt: boolean\n) {\n  return {\n    name: getIconName(question, isAttemptSubmitted, hasGuidedReattempt),\n    fontSize: question.isAnswered ? 5 : 8,\n    getColor: (colors: any) =>\n      getSubmitOnceShapeColor(question, colors, isAttemptSubmitted, hasGuidedReattempt, 0.5),\n    getShapeColor: (colors: any) =>\n      getSubmitOnceShapeColor(question, colors, isAttemptSubmitted, hasGuidedReattempt, 0.1),\n    shape: isActive\n      ? ICON.SHAPES.ROUND_SHADED\n      : question.isAnswered\n      ? ICON.SHAPES.ROUND_OUTLINED\n      : ICON.SHAPES.ROUND_FULL_COLOR,\n    ...(!isActive && {\n      hoverShape: ICON.SHAPES.ROUND_SHADED\n    }),\n    ...(!isActive &&\n      !question.isAnswered && {\n        getHoverColor: (colors: any) => colors.textColor\n      })\n  };\n}\n\nfunction getQuestionIconProps(isActive: boolean, question: any) {\n  let name;\n  if (question.isAnswered) {\n    if (question.isAnsweredCorrectly) {\n      name = NAVIGATION_ITEM_ICON_NAMES.OK;\n    } else {\n      name = NAVIGATION_ITEM_ICON_NAMES.CLOSE;\n    }\n  } else {\n    name = NAVIGATION_ITEM_ICON_NAMES.QUESTION;\n  }\n\n  if (question.isSurvey) {\n    name = 'survey';\n  }\n  let shape: string = ICON.SHAPES.ROUND_FULL_COLOR;\n  if (isActive) {\n    shape = ICON.SHAPES.ROUND_SHADED;\n  } else if (question.isAnswered) {\n    shape = ICON.SHAPES.ROUND_OUTLINED;\n  }\n\n  return {\n    name,\n    fontSize: question.isAnswered ? 5 : 8,\n    getColor: (colors: any) =>\n      question.isAnswered\n        ? getAnsweredQuestionColor(question, colors)\n        : getDefaultQuestionColor(isActive, colors),\n    getShapeColor: (colors: any) => getShapeColor(question, colors),\n    shape,\n    ...(!isActive && {\n      hoverShape: ICON.SHAPES.ROUND_SHADED\n    }),\n    ...(!isActive &&\n      !question.isAnswered && {\n        getHoverColor: (colors: any) => colors.textColor\n      })\n  };\n}\n\nfunction getIconName(question: any, isAttemptSubmitted: boolean, hasGuidedReattempt: boolean) {\n  return question.isSurvey\n    ? 'survey'\n    : getAnsweredOnceIconName(\n        question.isAnswered,\n        isAttemptSubmitted,\n        question.isAnsweredCorrectly,\n        question.isPreviousAnswerCorrect,\n        question.isAnswerChanged,\n        hasGuidedReattempt\n      );\n}\n\nfunction getAnsweredOnceIconName(\n  isAnswered: boolean,\n  isAttemptSubmitted: boolean,\n  isAnsweredCorrectly: boolean,\n  isPreviousAnswerCorrect: boolean,\n  isAnswerChanged: boolean,\n  hasGuidedReattempt: boolean\n) {\n  if (isAnswered && isAttemptSubmitted) {\n    if (isAnsweredCorrectly) {\n      return NAVIGATION_ITEM_ICON_NAMES.OK;\n    }\n    return NAVIGATION_ITEM_ICON_NAMES.CLOSE;\n  } else if (isAnswered && !isAttemptSubmitted) {\n    if (hasGuidedReattempt) {\n      if (isPreviousAnswerCorrect || isAnswerChanged) {\n        return NAVIGATION_ITEM_ICON_NAMES.OK;\n      }\n      return NAVIGATION_ITEM_ICON_NAMES.QUESTION;\n    }\n    return NAVIGATION_ITEM_ICON_NAMES.OK;\n  } else {\n    return NAVIGATION_ITEM_ICON_NAMES.QUESTION;\n  }\n}\n\nfunction getShapeColor(question: any, colors: any) {\n  return question.isAnswered\n    ? getAnsweredQuestionColor(question, colors)\n    : transparentize(colors.textColor, 0.1);\n}\n\nfunction getSubmitOnceShapeColor(\n  question: any,\n  colors: any,\n  isAttemptSubmitted: boolean,\n  hasGuidedReattempt: boolean,\n  opacity: any\n) {\n  const { isAnsweredCorrectly, isSurvey, isPreviousAnswerCorrect } = question;\n  if (isAttemptSubmitted) {\n    if (isAnsweredCorrectly || isSurvey) {\n      return colors.correctColor;\n    } else {\n      return colors.incorrectColor;\n    }\n  }\n  if (!isAttemptSubmitted && hasGuidedReattempt && isPreviousAnswerCorrect) {\n    return colors.correctColor;\n  }\n  return transparentize(colors.textColor, opacity);\n}\nfunction getAnsweredQuestionColor(question: any, colors: any) {\n  return question.isAnsweredCorrectly || question.isSurvey\n    ? colors.correctColor\n    : colors.incorrectColor;\n}\n\nfunction getDefaultQuestionColor(isActive: any, colors: any) {\n  return isActive ? colors.mainColor : transparentize(colors.textColor, 0.5);\n}\n\nexport default NavigationItem;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getColors } from 'store/settings/selectors';\nimport { RootAppState } from 'store/types';\nimport { getCorrectlyAnsweredQuestionsCount } from 'store/sections/selectors';\nimport NavigationBlock from '../NavigationBlock/NavigationBlock';\nimport NavigationItem from '../NavigationItem/NavigationItem';\n\ntype CollapsedTocPoolSectionProps = {\n  questionsForPool?: any;\n  colors: { [key: string]: any };\n  navigateToQuestion: any;\n  activeQuestionId: string;\n  activeQuestionIndex: number;\n  correctlyAnsweredQuestionsCount?: number;\n  isAttemptSubmitted: boolean;\n  isSubmitAtOnce: boolean;\n  hasGuidedReattempt: boolean;\n};\n\nclass CollapsedTocPoolSection extends React.Component<CollapsedTocPoolSectionProps> {\n  render() {\n    const {\n      questionsForPool,\n      navigateToQuestion,\n      activeQuestionId,\n      activeQuestionIndex,\n      isAttemptSubmitted,\n      isSubmitAtOnce,\n      hasGuidedReattempt\n    } = this.props;\n\n    return (\n      <NavigationBlock\n        activeItemIndex={activeQuestionIndex}\n        navigationElementsCount={questionsForPool.length}\n        role=\"menu\"\n      >\n        {questionsForPool.map((item: any, itemIndex: any) => (\n          <NavigationItem\n            key={itemIndex}\n            role=\"menuitem\"\n            tabIndex={0}\n            question={item}\n            shouldSubmitAllQuestions={isSubmitAtOnce}\n            isAttemptSubmitted={isAttemptSubmitted}\n            hasGuidedReattempt={hasGuidedReattempt}\n            isActive={item.id === activeQuestionId}\n            {...(item.id !== activeQuestionId && {\n              onClick: () => navigateToQuestion(item.sectionId, item.id),\n              onKeyDown: event => {\n                if (event.key === 'Enter') {\n                  navigateToQuestion(item.sectionId, item.id);\n                }\n              }\n            })}\n          />\n        ))}\n      </NavigationBlock>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    correctlyAnsweredQuestionsCount: getCorrectlyAnsweredQuestionsCount(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CollapsedTocPoolSection);\n","import styled, { css } from 'styled-components';\nimport { TOC, Z_INDEX } from 'constants/components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { transition } from 'components/mixins/interactivity';\nimport { CourseBackButton } from '../Header/Header.styled';\n\ntype CollapsedTocContainerProps = {\n  ariaLabel: string;\n  ariaHidden?: any;\n  isExpanded: boolean;\n}\n/* eslint-disable import/prefer-default-export */\nexport const CollapsedTocContainer = styled.nav.attrs((props: CollapsedTocContainerProps) => ({\n  'aria-label': props.ariaLabel,\n  'aria-hidden': props.ariaHidden\n})) <CollapsedTocContainerProps>`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: ${TOC.COLLAPSED_WIDTH}px;\n  left: -${TOC.COLLAPSED_WIDTH}px;\n  z-index: ${Z_INDEX.COLLAPSED_TOC};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.mainBackground};\n  ${transition('left')};\n  transition-delay: '0.15s';\n  visibility: hidden;\n  & ${CourseBackButton} {\n    top: 80px;\n    left: 16px;\n    position: absolute;\n  }\n\n  ${props =>\n    !props.isExpanded &&\n    css`\n      left: 100%;\n      visibility: visible;\n    `};\n\n  ${media.small`\n    display: none;\n  `};\n`;\n\ntype SectionProgressProps = {\n  isNavigationExist: boolean;\n}\nexport const SectionProgress = styled.div<SectionProgressProps>`\n  width: 24px;\n  height: 51px;\n  padding-top: 16px;\n  position: relative;\n  margin: ${props => (props.isNavigationExist ? '60px auto 30px' : '10px auto 30px')};\n\n  &:before {\n    content: '';\n    display: block;\n    width: 16px;\n    height: 1px;\n    position: absolute;\n    top: 0;\n    left: 4px;\n    background: ${props => transparentize(props.theme.colors.textColor, 0.1)};\n  }\n\n  &:hover {\n    .CircularProgressbar-trail {\n      stroke: ${props => transparentize(props.theme.colors.textColor, 0.2)} !important;\n    }\n  }\n`;\n\nexport const StatusIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  background: ${props => props.theme.colors.correctColor};\n  border-radius: 50%;\n  flex-shrink: 0;\n  align-self: self-start;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport { isPassed, isFailed } from 'utils/comparison';\nimport { Icon } from 'components/common';\nimport { maxCountTocNavigationElements } from 'constants/common';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport ProgressPopover from 'components/common/ProgressPopover';\nimport { getColors, shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { transparentize } from 'utils/color';\nimport Header from '../Header/Header';\nimport NavigationBlock from '../NavigationBlock/NavigationBlock';\nimport NavigationItem, { NavigationLearningItem } from '../NavigationItem/NavigationItem';\nimport ResultsBlock from '../ResultsBlock/ResultsBlock';\nimport CollapsedTocPoolSection from '../CollapsedTocPoolSection';\nimport { CollapsedTocContainer, SectionProgress, StatusIcon } from './CollapsedToc.styled';\nimport { RootAppState } from 'store/types';\nimport isEmpty from 'lodash.isempty';\n\nconst constants = {\n  minimalShownProgress: 10\n};\n\ntype CollapsedTocProps = {\n  isExpanded: boolean;\n  courseStructure: {\n    title: string;\n    sections: any[];\n    isAttemptSubmitted: boolean;\n  };\n  activeSectionId: string;\n  activeQuestionId: string;\n  navigateToIndex(): void;\n  navigateToQuestion(sectionId: string, questionId: string, isCourseOnOnePage: boolean): void;\n  navigateToResults(): void;\n  navigateToLearningObjective(id: any, isCourseOnOnePage: boolean): void;\n  isResultsActive: boolean;\n  isLearningObjectiveView: boolean;\n  colors: { [key: string]: any };\n  questionsForPool: any;\n  isQuestionPool: boolean;\n  isCourseOnOnePage: boolean;\n  isSubmitAtOnce: boolean;\n  isShowContentPagesEnabled: boolean;\n  hasGuidedReattempt: boolean;\n  shouldSubmitAllQuestions: boolean;\n  showSubmitButton: boolean;\n};\nexport class CollapsedToc extends React.Component<CollapsedTocProps, {}> {\n  showProgressScore = (score: number) => {\n    if (score <= constants.minimalShownProgress) {\n      return constants.minimalShownProgress;\n    }\n    return score;\n  };\n\n  renderSubmitOnceSectionProgress = (section: any, isAttemptSubmitted: boolean) => {\n    if (isAttemptSubmitted) {\n      return this.showProgressScore(section.score);\n    }\n    return this.showProgressScore(section.sectionProgress);\n  };\n\n  renderSectionProgress = (section: any) => {\n    return this.showProgressScore(section.score);\n  };\n\n  renderCircularProgressbar(section: any) {\n    const { colors, courseStructure, isSubmitAtOnce } = this.props;\n    const isAttemptSubmitted = courseStructure.isAttemptSubmitted;\n    return (\n      <CircularProgressbar\n        strokeWidth={24}\n        percentage={\n          isSubmitAtOnce\n            ? this.renderSubmitOnceSectionProgress(section, isAttemptSubmitted)\n            : this.renderSectionProgress(section)\n        }\n        styles={{\n          path: {\n            stroke: isFailed(section.status) ? colors.incorrectColor : colors.mainColor,\n            strokeLinecap: 'butt',\n            transition: 'stroke-dashoffset 0.5s ease 0s'\n          },\n          trail: {\n            stroke: transparentize(colors.textColor, 0.02),\n            transition: 'stroke 0.2s ease 0s'\n          }\n        }}\n      />\n    );\n  }\n\n  isPassedSection = (section: any) => {\n    const { courseStructure, isSubmitAtOnce } = this.props;\n    const isAttemptSubmitted = courseStructure.isAttemptSubmitted;\n\n    if (isSubmitAtOnce) {\n      return isAttemptSubmitted && isPassed(section.status);\n    } else {\n      return isPassed(section.status);\n    }\n  };\n\n  getSectionData = () => {\n    const { activeSectionId, courseStructure, activeQuestionId } = this.props;\n    let section: any = null;\n    let questions: any[] = [];\n    let activeQuestionIndex = -1;\n    let activeSectionIndex = -1;\n\n    if (activeSectionId) {\n      section =\n        courseStructure.sections.find((item, index) => {\n          return item.id === activeSectionId;\n        }) || {};\n      if (!isEmpty(section)) {\n        activeSectionIndex = courseStructure.sections.indexOf(section);\n      }\n      questions = (section.questions || []).map((question: any, questionIndex: any) => ({\n        key: `${questionIndex}`,\n        question,\n        isAnsweredCorrectly: question.isAnsweredCorrectly,\n        affectsProgress: question.affectsProgress,\n        sectionId: section.id\n      }));\n      activeQuestionIndex = questions.findIndex(item => item.question.id === activeQuestionId);\n    }\n    return { section, questions, activeQuestionIndex, activeSectionIndex };\n  };\n\n  render() {\n    const {\n      courseStructure,\n      isExpanded,\n      activeQuestionId,\n      activeSectionId,\n      navigateToIndex,\n      navigateToQuestion,\n      navigateToResults,\n      navigateToLearningObjective,\n      isResultsActive,\n      isLearningObjectiveView,\n      questionsForPool,\n      isQuestionPool,\n      isCourseOnOnePage,\n      isSubmitAtOnce,\n      isShowContentPagesEnabled,\n      hasGuidedReattempt,\n      shouldSubmitAllQuestions,\n      showSubmitButton\n    } = this.props;\n\n    const isAttemptSubmitted = courseStructure.isAttemptSubmitted;\n    const { section, questions, activeQuestionIndex, activeSectionIndex } = this.getSectionData();\n\n    return (\n      <CollapsedTocContainer isExpanded={isExpanded} ariaLabel={localize('[navigation section]')}>\n        <Header collapsed navigateToIndex={navigateToIndex} tabIndex={isExpanded ? -1 : 0} />\n        {isQuestionPool && (\n          <CollapsedTocPoolSection\n            questionsForPool={questionsForPool}\n            navigateToQuestion={navigateToQuestion}\n            activeQuestionId={activeQuestionId}\n            activeQuestionIndex={activeQuestionIndex}\n            isSubmitAtOnce={isSubmitAtOnce}\n            isAttemptSubmitted={isAttemptSubmitted}\n            hasGuidedReattempt={hasGuidedReattempt}\n          />\n        )}\n        {!isQuestionPool && activeSectionId && (\n          <NavigationBlock\n            activeItemIndex={activeQuestionIndex}\n            navigationElementsCount={(questions.length as any) + !!section.learningObjective}\n            role=\"menu\"\n          >\n            {section.learningObjective && isShowContentPagesEnabled && (\n              <NavigationLearningItem\n                onClick={() => navigateToLearningObjective(section.id, isCourseOnOnePage)}\n                onKeyDown={event => {\n                  if (event.key === 'Enter') {\n                    navigateToLearningObjective(section.id, isCourseOnOnePage);\n                  }\n                }}\n                role=\"menuitem\"\n                tabIndex={0}\n                isActive={isLearningObjectiveView}\n              />\n            )}\n            {questions.map(item => (\n              <NavigationItem\n                key={item.key}\n                role=\"menuitem\"\n                tabIndex={0}\n                question={item.question}\n                isActive={item.question.id === activeQuestionId}\n                shouldSubmitAllQuestions={isSubmitAtOnce}\n                isAttemptSubmitted={isAttemptSubmitted}\n                hasGuidedReattempt={hasGuidedReattempt}\n                {...(item.question.id !== activeQuestionId && {\n                  onClick: () =>\n                    navigateToQuestion(item.sectionId, item.question.id, isCourseOnOnePage),\n                  onKeyDown: event => {\n                    if (event.key === 'Enter') {\n                      navigateToQuestion(item.sectionId, item.question.id, isCourseOnOnePage);\n                    }\n                  }\n                })}\n              />\n            ))}\n          </NavigationBlock>\n        )}\n        {!isQuestionPool && section && section.affectsProgress && (\n          <SectionProgress isNavigationExist={maxCountTocNavigationElements < questions.length}>\n            <ProgressPopover\n              popoverPosition={'right-end'}\n              questions={questions}\n              score={section.score}\n              status={section.status}\n              sectionId={section.id}\n              ariaLabelledby={`section-status-${activeSectionIndex}`}\n            />\n            {this.isPassedSection(section) ? (\n              <StatusIcon>\n                <Icon name=\"ok\" size={6} color=\"buttonTextColor\" />\n              </StatusIcon>\n            ) : (\n              this.renderCircularProgressbar(section)\n            )}\n          </SectionProgress>\n        )}\n        <ResultsBlock\n          ariaLabel={localize('[results]')}\n          collapsed\n          isActive={isResultsActive}\n          navigateToResults={navigateToResults}\n          tabIndex={isExpanded ? -1 : 0}\n          show={shouldSubmitAllQuestions ? !showSubmitButton : true}\n        />\n      </CollapsedTocContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CollapsedToc);\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Z_INDEX } from 'constants/components';\nimport media from 'components/mixins/media';\nimport { Icon } from 'components/common';\nimport { pointerOnHover } from 'components/mixins/interactivity';\nimport buttonDefaultStyle from 'components/mixins/normalize';\n\nexport const TailIcon = styled(Icon)`\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n`;\n\ntype TailProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isExpanded: boolean;\n}\nexport const Tail = styled.button.attrs((props: TailProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel,\n  'data-test': 'hamburger-button'\n})) <TailProps>`\n  ${buttonDefaultStyle};\n  position: absolute;\n  top: 16px;\n  right: -54px;\n  padding: 16px;\n  z-index: ${Z_INDEX.TOC_TAIL};\n  ${pointerOnHover};\n  &:hover ${TailIcon} {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ${TailIcon} {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) ${TailIcon} {\n    outline: none;\n  }\n\n  ${media.small`\n    top: 8px;\n    right: -45px;\n  `};\n\n  ${props =>\n    props.isExpanded &&\n    media.mobile`\n      top: 8px;\n      right: -38px;\n  `}};\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { getCurrentLocationHash } from 'utils/window';\nimport { getQuestionUrl, getLocationParams, getLearningObjectiveUrl } from 'utils/navigation';\nimport {\n  INDEX_PATH,\n  RESULTS_PATH,\n  QUESTION_PATH,\n  LEARNING_OBJECTIVE_PATH\n} from 'constants/navigation';\nimport {\n  getCourseAttempt,\n  getCourseStructure,\n  getPoolIds,\n  isAttemptSubmitted,\n  isPassed\n} from 'store/course/selectors';\nimport { getTreeOfContentVisibility } from 'store/treeOfContent/selectors';\nimport {\n  getMasteryScoreValue,\n  isOverallMasteryScore,\n  isAllQuestionsOnOnePage,\n  shouldSubmitAllQuestions,\n  isQuestionPoolEnabled,\n  getTimerEnabled,\n  isShowContentPagesEnabled,\n  isAnswersFromPreviousAttemptEnabled\n} from 'store/settings/selectors';\nimport { getAffectProgressSectionsCount, isSectionsPassed } from 'store/sections/selectors';\nimport {\n  getAffectProgressQuestionsCount,\n  getAnsweredAffectProgressQuestionsCount,\n  getAnsweredQuestionsProgress,\n  getPoolQuestions\n} from 'store/questions/selectors';\nimport { isLowResolution } from 'store/app/selectors';\nimport * as actions from 'store/treeOfContent/actions';\nimport * as courseTimerActions from 'store/timer/actions';\nimport * as courseQuestionActions from 'store/questions/actions';\nimport { TimerStatus } from 'constants/timer';\nimport { localize } from 'core/localization';\nimport { RootAppState } from 'store/types';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport { hasGuidedReattempt } from 'store/common/selectors';\nimport ExpandedToc from './ExpandedToc';\nimport CollapsedToc from './CollapsedToc';\nimport { isLearningObjectiveView } from '../shell/RouteTransition/viewChecker';\nimport { Tail, TailIcon } from './TreeOfContent.styled';\n\ntype TreeOfContentProps = {\n  isExpanded: boolean;\n  courseStructure: {\n    title: string;\n    sections: { [key: string]: any }[];\n    isAttemptSubmitted: boolean;\n  };\n  isAppInLowResolution: boolean;\n  activeSectionId: string;\n  activeQuestionId: string;\n  navigateToIndex(): void;\n  navigateToUrl(url: string): void;\n  isNextPageResults(): boolean;\n  actions: { [key: string]: any };\n  ariaLabel: string;\n  isLearningObjectiveView: boolean;\n  state: { [key: string]: any };\n  masteryScore: number;\n  isCourseProgress: boolean;\n  affectProgressSectionsCount: number;\n  questionsForPool: any;\n  isQuestionPool: boolean;\n  scrollToId(id: string): void;\n  isCourseOnOnePage: boolean;\n  shouldSubmitAllQuestions: boolean;\n  affectProgressQuestionsCount: number;\n  affectAnsweredQuestionsCount: number;\n  answeredQuestionsProgress: number;\n  showSubmitButton: boolean;\n  isSectionsPassed: boolean;\n  isCoursePassed: boolean;\n  timerActions: { [key: string]: any };\n  questionActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeElapsed: number;\n  isShowContentPagesEnabled: boolean;\n  hasGuidedReattempt: boolean;\n};\n\nexport class TreeOfContent extends Component<TreeOfContentProps, {}> {\n  navigateToQuestion = (sectionId: string, questionId: string) => {\n    const {\n      isTimerEnabled,\n      timerActions,\n      questionActions,\n      timeElapsed,\n      isCourseOnOnePage,\n      timerStatus\n    } = this.props;\n\n    if (\n      isTimerEnabled &&\n      (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n    ) {\n      timerActions.setTimerElapsed(timeElapsed);\n      timerActions.startTimer();\n    }\n    if (isCourseOnOnePage) {\n      this.navigate(getQuestionUrl(sectionId, questionId));\n      this.scrollNavigate(questionId);\n      questionActions.markAsOpened(questionId);\n    } else {\n      this.navigate(getQuestionUrl(sectionId, questionId));\n    }\n  };\n\n  navigateToResults = () => {\n    this.navigate(RESULTS_PATH);\n  };\n\n  navigateToIndex = () => {\n    this.navigate(INDEX_PATH);\n  };\n\n  navigateToLearningObjective = (sectionId: string, isCourseOnOnePage: boolean) => {\n    if (isCourseOnOnePage) {\n      this.navigate(getLearningObjectiveUrl(sectionId));\n      this.scrollNavigate(sectionId);\n    } else {\n      this.navigate(getLearningObjectiveUrl(sectionId));\n    }\n  };\n\n  submitAllAnswerOnce = (section: any) => {\n    const { isTimerEnabled, timerActions } = this.props;\n    if (timerActions && isTimerEnabled) {\n      timerActions.setTimerStatus(TimerStatus.STOPPED);\n      timerActions.updateTimerProgress();\n    }\n    this.props.actions.submitAllAnswerOnce(section);\n  };\n\n  navigate = (url: string) => {\n    if (this.props.isAppInLowResolution) {\n      this.toggleTreeOfContentVisibility();\n    }\n    this.props.navigateToUrl(url);\n  };\n\n  scrollNavigate = (id: string) => {\n    if (this.props.isAppInLowResolution) {\n      this.toggleTreeOfContentVisibility();\n    }\n    this.props.scrollToId(id);\n  };\n\n  toggleTreeOfContentVisibility = () => {\n    this.props.actions.toggleTreeOfContentVisibility();\n  };\n\n  render() {\n    const { isExpanded } = this.props;\n    const tocProps = {\n      courseStructure: this.props.courseStructure,\n      activeSectionId: this.props.activeSectionId,\n      activeQuestionId: this.props.activeQuestionId,\n      navigateToIndex: this.navigateToIndex,\n      navigateToResults: this.navigateToResults,\n      navigateToQuestion: this.navigateToQuestion,\n      navigateToLearningObjective: this.navigateToLearningObjective,\n      submitAllAnswerOnce: this.submitAllAnswerOnce,\n      isResultsActive: !this.props.activeSectionId,\n      isExpanded,\n      isLearningObjectiveView: this.props.isLearningObjectiveView,\n      courseProgress: this.props.state.course.score,\n      masteryScore: this.props.masteryScore,\n      isCourseProgress: this.props.isCourseProgress,\n      affectProgressSectionsCount: this.props.affectProgressSectionsCount,\n      questionsForPool: this.props.questionsForPool,\n      isQuestionPool: this.props.isQuestionPool,\n      isCourseOnOnePage: this.props.isCourseOnOnePage,\n      shouldSubmitAllQuestions: this.props.shouldSubmitAllQuestions,\n      affectProgressQuestionsCount: this.props.affectProgressQuestionsCount,\n      affectAnsweredQuestionsCount: this.props.affectAnsweredQuestionsCount,\n      answeredQuestionsProgress: this.props.answeredQuestionsProgress,\n      showSubmitButton: this.props.showSubmitButton,\n      isNextPageResults: this.props.isNextPageResults(),\n      isCoursePassed: this.props.isCoursePassed,\n      isShowContentPagesEnabled: this.props.isShowContentPagesEnabled,\n      hasGuidedReattempt: this.props.hasGuidedReattempt\n    };\n    return (\n      <React.Fragment>\n        <ExpandedToc {...tocProps} />\n        <Tail\n          isExpanded={isExpanded}\n          onClick={this.toggleTreeOfContentVisibility}\n          tabIndex={0}\n          ariaLabel={localize(\n            isExpanded ? '[hamburger aria label expanded]' : '[hamburger aria label collapse]'\n          )}\n        >\n          <TailIcon name=\"hamburger\" size={12} />\n        </Tail>\n        <CollapsedToc {...tocProps} />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  const params = getLocationParams(QUESTION_PATH);\n  const learningObjectiveParams = getLocationParams(LEARNING_OBJECTIVE_PATH);\n\n  return {\n    isExpanded: getTreeOfContentVisibility(state),\n    courseStructure: getCourseStructure(state),\n    isAppInLowResolution: isLowResolution(state),\n    isLearningObjectiveView: isLearningObjectiveView.test(\n      getCurrentLocationHash().replace('#', '')\n    ),\n    activeSectionId: params.sectionId || learningObjectiveParams.sectionId,\n    activeQuestionId: params.questionId,\n    masteryScore: getMasteryScoreValue(state),\n    isCourseProgress: isOverallMasteryScore(state),\n    affectProgressSectionsCount: getAffectProgressSectionsCount(state),\n    questionsForPool: getPoolQuestions(state, getPoolIds(state)),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    shouldSubmitAllQuestions: shouldSubmitAllQuestions(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    affectAnsweredQuestionsCount: getAnsweredAffectProgressQuestionsCount(state),\n    answeredQuestionsProgress: getAnsweredQuestionsProgress(state),\n    showSubmitButton: !isAttemptSubmitted(state),\n    isSectionsPassed: isSectionsPassed(state),\n    isCoursePassed: isPassed(state),\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state),\n    isShowContentPagesEnabled: isShowContentPagesEnabled(state),\n    shouldShowPreviousAnswers: isAnswersFromPreviousAttemptEnabled(state),\n    courseAttempts: getCourseAttempt(state),\n    hasGuidedReattempt: hasGuidedReattempt(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch),\n    questionActions: bindActionCreators(courseQuestionActions, dispatch)\n  };\n}\n\nexport default withRouter(\n  withNavigation(connect(mapStateToProps, mapDispatchToProps)(TreeOfContent))\n);\n","import styled from 'styled-components';\nimport { Text, Icon } from 'components/common';\nimport media from 'components/mixins/media';\nimport {\n  secondaryFont,\n  secondaryFontText,\n  secondaryFontSmallText,\n  bold\n} from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nexport const PageTitle = styled(Text)`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nexport const LearningObjectiveSectionTitle = styled(Text)`\n  margin: 12px 0 32px 0;\n\n  ${media.medium`\n    padding-right: 22px;\n  `}\n`;\n\nexport const LearningObjectiveWrapper = styled.div`\n  color: ${props => props.theme.colors.textColor};\n  padding: 32px 32px 32px 68px;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n`;\n\nexport const LearningObjectiveContent = styled.div`\n  position: relative;\n`;\n\nexport const LearningObjectiveTitle = styled(Text)`\n  ${secondaryFontText};\n  ${bold};\n  margin-bottom: 5px;\n`;\n\nexport const LearningObjectiveText = styled(Text)`\n  ${secondaryFontText};\n  margin-bottom: 16px;\n`;\n\nexport const LearningObjectiveResult = styled(Text)`\n  ${secondaryFontSmallText};\n  font-style: italic;\n  font-weight: normal;\n  opacity: 0.7;\n`;\n\nexport const LearningObjectiveIcon = styled(Icon)`\n  color: ${props => props.theme.colors.mainColor};\n  left: -32px;\n  position: absolute;\n  top: 0;\n`;\n","import React, { Component } from 'react';\nimport NotFound from '../notFound/NotFound';\n\ntype RedirectToProps = {\n  match: { [index: string]: any };\n}\nexport default function withFallbackToNotFound<T>(WrappedComponent: React.ComponentType<T>, predicateForNotFound: any) {\n  return class RedirectTo extends Component<RedirectToProps & T, {}> {\n    render() {\n      if (typeof predicateForNotFound !== 'function') {\n        return <WrappedComponent {...this.props} />;\n      }\n      if (predicateForNotFound(this.props)) {\n        return <NotFound />;\n      }\n\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n}\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { Button, Separator, CourseLogo } from 'components/common';\nimport {\n  getLogo,\n  isAllQuestionsOnOnePage,\n  isMainLogoShown,\n  getTimerEnabled\n} from 'store/settings/selectors';\nimport { BUTTON } from 'constants/components';\nimport Reviewable from 'components/review/Reviewable';\nimport { localize } from 'core/localization';\nimport * as sectionSelectors from 'store/sections/selectors';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { RootAppState } from 'store/types';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport {\n  PageTitle,\n  LearningObjectiveSectionTitle,\n  LearningObjectiveContent,\n  LearningObjectiveWrapper,\n  LearningObjectiveTitle,\n  LearningObjectiveText,\n  LearningObjectiveResult,\n  LearningObjectiveIcon\n} from './LearningObjective.styled';\nimport withFallbackToNotFound from '../../../components/hocs/withFallbackToNotFound';\n\ntype LearningObjectiveProps = {\n  section: { [key: string]: any };\n  navigateToNextPage(): void;\n  logoUrl: string;\n  logoShown: boolean;\n  sectionId: any;\n  scrollToId(id: string): void;\n  isCourseOnOnePage: boolean;\n  timerActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeElapsed: number;\n};\nexport class LearningObjective extends Component<LearningObjectiveProps, {}> {\n  navigateToNextPage = () => {\n    const {\n      navigateToNextPage,\n      isTimerEnabled,\n      timerActions,\n      timeElapsed,\n      timerStatus\n    } = this.props;\n    navigateToNextPage();\n    if (\n      isTimerEnabled &&\n      (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n    ) {\n      timerActions.setTimerElapsed(timeElapsed);\n      timerActions.startTimer();\n    }\n  };\n\n  scrollToNextPage = (id: string) => {\n    const { scrollToId } = this.props;\n    scrollToId(id);\n  };\n\n  render() {\n    const { section, logoUrl, logoShown, isCourseOnOnePage } = this.props;\n    const {\n      affectedProgressCount,\n      learningObjective,\n      title,\n      id,\n      affectedProgressCorrectlyAnsweredQuestionsCount\n    } = section;\n\n    return (\n      <Fragment>\n        {logoShown && !isCourseOnOnePage && <CourseLogo logoUrl={logoUrl} />}\n        <PageTitle>{localize('[section overview]')}</PageTitle>\n        <Reviewable\n          context={{\n            type: REVIEW_COMMENT_TYPES.SECTION,\n            property: REVIEW_COMMENT_PROPERTIES.TITLE,\n            id,\n            title\n          }}\n        >\n          <LearningObjectiveSectionTitle\n            appearance=\"h1\"\n            tabIndex={0}\n            id={SKIP_TO_CONTENT_IDS.LEARNING_OBJECTIVE_PAGE}\n            ignoreFocus={true}\n          >\n            {title}\n          </LearningObjectiveSectionTitle>\n        </Reviewable>\n        <LearningObjectiveWrapper>\n          <LearningObjectiveContent>\n            <LearningObjectiveIcon size={24} name=\"learning-objective\" />\n            <LearningObjectiveTitle appearance={'p'}>\n              {localize('[learning objective]')}\n            </LearningObjectiveTitle>\n            <LearningObjectiveText appearance={'p'}>{learningObjective}</LearningObjectiveText>\n            {!!affectedProgressCount && (\n              <LearningObjectiveResult appearance={'p'}>\n                {localize('[you need to answer X questions out of Y]', {\n                  correctQuestionsCount: affectedProgressCorrectlyAnsweredQuestionsCount,\n                  totalQuestionsCount: affectedProgressCount\n                })}\n              </LearningObjectiveResult>\n            )}\n          </LearningObjectiveContent>\n        </LearningObjectiveWrapper>\n        <Separator margin={48} opacity={0.1} color=\"textColor\" />\n        {!isCourseOnOnePage && (\n          <Button\n            layout={BUTTON.LAYOUT.PRIMARY}\n            onClick={this.navigateToNextPage}\n            tabIndex={0}\n            suffixIcon=\"arrow-down\"\n          >\n            {localize('[start section]')}\n          </Button>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: any) {\n  const isOnePage = isAllQuestionsOnOnePage(state);\n  const { sectionId } = (() => {\n    if (isOnePage) {\n      return ownProps;\n    }\n    return ownProps.match.params;\n  })();\n  const { title, learningObjective } = sectionSelectors.getSection(state, sectionId);\n\n  return {\n    logoUrl: getLogo(state),\n    logoShown: isMainLogoShown(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    section: {\n      id: sectionId,\n      title,\n      learningObjective,\n      affectedProgressCount: sectionSelectors.getAffectProgressQuestionsCountInSection(\n        state,\n        sectionId\n      ),\n      affectedProgressCorrectlyAnsweredQuestionsCount: sectionSelectors.getAffectCorrectlyAnsweredQuestionsCount(\n        state,\n        sectionId\n      )\n    },\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state)\n  };\n}\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nfunction predicateForRedirect(props: any) {\n  return !props.section;\n}\n\nexport default withNavigation(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withFallbackToNotFound(LearningObjective, predicateForRedirect))\n);\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\ntype RocketProps = {\n  theme: { [key: string]: any };\n};\nexport const Rocket = (props: RocketProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"123px\"\n    viewBox=\"0 0 260 123\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    arialabel={`${localize('[aria label rocket]')}`}\n  >\n    <title>Rocket icon</title>\n    <desc>Created with sketchtool.</desc>\n    <defs>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-1\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-2\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <g\n      id=\"styles-simple-course\"\n      stroke=\"none\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n      transform=\"translate(-372.000000, -580.000000)\"\n    >\n      <g id=\"Group-16\" transform=\"translate(372.000000, 581.000000)\">\n        <path\n          d=\"M74.4791667,20.4233129 L20.9852982,20.4233129 C20.9852982,20.4233129 11.6071429,21.4348819 11.6071429,28.8895706 C11.6071429,36.3442592 \n          20.9852982,37.3558282 20.9852982,37.3558282 L52.8125,37.4163015 C52.8125,37.4163015 60.2604167,38.8676599 60.2604167,45.398773 \n          C60.2604167,51.9298861 52.8125,53.8650307 52.8125,53.8650307 L36.3690476,53.8650307 C36.3690476,53.8650307 23.0208333,54.6797948 \n          23.0208333,62.7546012 C23.0208333,70.8294077 36.3690476,72.0674847 36.3690476,72.0674847 L9.47916667,72.0674847 C9.47916667,72.0674847 \n          5.06725961e-16,73.7002629 0,80.4732691 C0,87.2462752 9.47916667,89 9.47916667,89 L217.344853,89 C217.344853,89 229.047619,87.6695881 \n          229.047619,80.4732691 C229.047619,73.27695 217.344853,72.0674847 217.344853,72.0674847 L197.020332,72.0674847 C197.020332,72.0674847 \n          185.152433,71.3602005 184.940476,64.0245399 C184.728519,56.6888793 197.020332,55.3163891 197.020332,55.3163891 L220.606061,54.5 \n          C220.606061,54.5 232.916667,56.3142786 232.916667,46.1244522 C232.916667,35.9346259 221.590909,37.3558282 221.590909,37.3558282 \n          L249.84375,37.4163015 C249.84375,37.4163015 260,36.8060045 260,28.8895706 C260,20.9731366 249.84375,20 249.84375,20 L74.4791667,20.4233129 Z\"\n          id=\"Path-8\"\n          fill={props.theme.colors.textColor}\n          opacity=\"0.0199999996\"\n          filter=\"url(#filter-1)\"\n        />\n        <g\n          id=\"startup\"\n          transform=\"translate(130.500000, 71.500000) scale(-1, 1) rotate(-315.000000) translate(-130.500000, -71.500000) translate(80.000000, 21.000000)\"\n        >\n          <g id=\"Layer_1\" transform=\"translate(-0.000000, 0.000000)\">\n            <path\n              d=\"M51.8696722,47.9219537 L47.922099,47.7701072 L48.0739455,51.7176803 C48.225792,58.2464987 53.6916849,63.7123916 60.2205033,63.8642381 \n              L64.1680764,64.0160846 L64.0162299,60.0685115 C63.8643834,53.5396931 58.3983452,48.0738002 51.8696722,47.9219537 Z\"\n              id=\"Shape\"\n              fill={transparentize(props.theme.colors.textColor, 0.8, { solidColor: true })}\n              fillRule=\"nonzero\"\n              opacity=\"0.600000024\"\n            />\n            <path\n              d=\"M73.1260029,44.4297747 C72.3669157,43.0633015 71.3039902,41.8486748 70.24121,40.7857493 C67.5082636,38.0528028 64.1679311,36.2307901 \n              60.5239057,35.3198564 C53.6915396,33.6496902 46.099941,35.4717029 40.7857493,40.7857493 C35.4715576,46.0997957 33.6496902,53.6913943 \n              35.3198564,60.5239057 C36.2307901,64.0160846 38.0528028,67.5081183 40.7857493,70.2410647 C41.8485295,71.3038449 43.2150027,72.3667704 \n              44.4297747,73.1258576 C36.5344831,73.4295506 28.3356438,70.5447577 22.2623649,64.4714788 C17.4037128,59.6128266 14.6707663,53.6913943 \n              13.7598326,47.4662689 C12.5452059,38.5081971 15.4299988,29.2464322 22.2623649,22.4140661 C29.094731,15.5817 38.5083424,12.6969071 \n              47.3145677,13.9115338 C53.5396931,14.8224675 59.612972,17.5555593 64.3197776,22.4140661 C70.544903,28.3356438 73.4296959,36.5346284 \n              73.1260029,44.4297747 Z\"\n              id=\"Shape\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n              opacity=\"0.600000024\"\n            />\n            <path\n              d=\"M60.0685115,44.5816212 C55.8172453,18.6184848 33.497989,-0.512285575 5.86454101,0.246801632 L0.398648135,0.398648135 \n              L0.246801632,5.86454101 C-0.512285575,33.497989 18.6184848,55.8172453 44.5816212,60.0685115 L60.0685115,44.5816212 Z\"\n              id=\"Shape\"\n              strokeOpacity=\"0.3\"\n              stroke={props.theme.colors.textColor}\n              strokeWidth=\"1.6031746\"\n              fill={props.theme.colors.contentBodyColor}\n              fillRule=\"nonzero\"\n            />\n            <g id=\"Group\" transform=\"translate(0.225005, 0.225005)\" />\n            <path\n              d=\"M44.5816212,60.0685115 C46.099941,60.3722045 47.7701072,60.524051 49.2884269,60.6758975 L60.5239057,49.4404187 \n              C60.3720592,47.7702525 \n              60.2202127,46.2519328 59.9165196,44.7336131 L44.5816212,60.0685115 Z\"\n              id=\"Shape\"\n              fillOpacity=\"0.3\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n              opacity=\"0.300000012\"\n            />\n            <circle\n              id=\"Oval\"\n              fillOpacity=\"0.6\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n              cx=\"25.8475427\"\n              cy=\"25.9124952\"\n              r=\"10.8214286\"\n            />\n            <circle\n              id=\"Oval\"\n              fill={props.theme.colors.contentBodyColor}\n              fillRule=\"nonzero\"\n              cx=\"25.5833715\"\n              cy=\"25.648324\"\n              r=\"8.19883931\"\n            />\n            <path\n              d=\"M20.4404975,21.6551242 C23.3252905,18.7703313 27.8802496,18.7703313 30.7650426,21.6551242 C33.497989,24.3880707 \n              33.6498355,28.7911833 31.0687356,31.6759763 C31.2205821,31.5241298 31.3724286,31.5241298 31.3724286,31.3722833 C34.5609145,28.1837973 \n              34.5609145,23.0215974 31.3724286,19.8331115 C28.1839426,16.6446256 23.0217428,16.6446256 19.8332568,19.8331115 C16.6447709,23.0215974 \n              16.6447709,28.1837973 19.8332568,31.3722833 C19.9851033,31.5241298 20.1369498,31.5241298 20.1369498,31.6759763 C17.7075511,28.7911833 \n              17.7075511,24.3880707 20.4404975,21.6551242 Z\"\n              id=\"Shape\"\n              fillOpacity=\"0.1\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n            />\n          </g>\n        </g>\n        <ellipse\n          id=\"Oval-6-Copy\"\n          fill={props.theme.colors.textColor}\n          opacity=\"0.100000001\"\n          filter=\"url(#filter-2)\"\n          cx=\"130\"\n          cy=\"118.5\"\n          rx=\"26\"\n          ry=\"3.5\"\n        />\n      </g>\n    </g>\n  </Figure>\n);\n\nexport default withTheme(Rocket);\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\ntype SadResultProps = {\n  theme: { [key: string]: any };\n};\nexport const SadResult = (props: SadResultProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"142px\"\n    viewBox=\"0 0 260 142\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    arialabel={`${localize('[aria label failed course]')}`}\n  >\n    <title>Result failed icon</title>\n    <defs>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-1\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-2\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n      <circle id=\"path-3\" cx=\"185\" cy=\"95\" r=\"16\" />\n    </defs>\n    <g\n      id=\"Combo3(msSection,SubmitAll,Lim,NoContent)\"\n      stroke=\"none\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <g\n        id=\"Combo3-09-Failed-All-atempts-has-been-used\"\n        transform=\"translate(-780.000000, -120.000000)\"\n      >\n        <g id=\"Group\" transform=\"translate(780.000000, 120.000000)\">\n          <ellipse\n            id=\"Oval-6\"\n            fill=\"#363E4E\"\n            opacity=\"0.100000001\"\n            filter=\"url(#filter-1)\"\n            cx=\"130\"\n            cy=\"138.5\"\n            rx=\"49\"\n            ry=\"3.5\"\n          />\n          <path\n            d=\"M74.4791667,35.6669996 L20.9852982,35.6669996 C20.9852982,35.6669996 11.6071429,36.6785686 11.6071429,44.1332573 C11.6071429,51.5879459\n            20.9852982,52.5995149 20.9852982,52.5995149 L52.8125,52.6599882 C52.8125,52.6599882 60.2604167,54.1113467 60.2604167,60.6424597\n            C60.2604167,67.1735728 52.8125,69.1087174 52.8125,69.1087174 L36.3690476,69.1087174 C36.3690476,69.1087174 23.0208333,69.9234815\n            23.0208333,77.9982879 C23.0208333,86.0730944 36.3690476,87.3111714 36.3690476,87.3111714 L9.47916667,87.3111714 C9.47916667,87.3111714\n            5.06725961e-16,88.9439496 0,95.7169558 C0,102.489962 9.47916667,104.243687 9.47916667,104.243687 L217.344853,104.243687 C217.344853,104.243687\n            229.047619,102.913275 229.047619,95.7169558 C229.047619,88.5206368 217.344853,87.3111714 217.344853,87.3111714 L197.020332,87.3111714\n            C197.020332,87.3111714 185.152433,86.6038872 184.940476,79.2682266 C184.728519,71.932566 197.020332,70.5600758 197.020332,70.5600758\n            L220.606061,69.7436867 C220.606061,69.7436867 232.916667,71.5579653 232.916667,61.3681389 C232.916667,51.1783126 221.590909,52.5995149\n            221.590909,52.5995149 L249.84375,52.6599882 C249.84375,52.6599882 260,52.0496912 260,44.1332573 C260,36.2168233 249.84375,35.2436867\n            249.84375,35.2436867 L74.4791667,35.6669996 Z\"\n            id=\"Path-8\"\n            fill=\"#363E4E\"\n            opacity=\"0.02\"\n            filter=\"url(#filter-2)\"\n          />\n          <path\n            d=\"M156.585786,9 L176,28.4142136 L176,100 C176,101.932997 175.216498,103.682997 173.949747,104.949747 C172.682997,106.216498\n            170.932997,107 169,107 L169,107 L110,107 C108.067003,107 106.317003,106.216498 105.050253,104.949747 C103.783502,103.682997\n            103,101.932997 103,100 L103,100 L103,16 C103,14.0670034 103.783502,12.3170034 105.050253,11.0502525 C106.317003,9.78350169\n            108.067003,9 110,9 L110,9 L156.585786,9 Z\"\n            id=\"Rectangle\"\n            strokeOpacity=\"0.3\"\n            stroke=\"#363E4E\"\n            strokeWidth=\"2\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(139.500000, 58.000000) rotate(-15.000000) translate(-139.500000, -58.000000) \"\n          />\n          <path\n            d=\"M125.151542,48.6658927 C125.151542,50.5989353 124.256236,52.1658927 123.151816,52.1658927 C122.047121,52.1658927 121.151542,50.5989353\n            121.151542,48.6658927 C121.151542,46.7328501 122.047121,45.1658927 123.151816,45.1658927 C124.256236,45.1658927 125.151542,46.7328501\n            125.151542,48.6658927\"\n            id=\"Fill-38\"\n            fill=\"#363E4E\"\n            opacity=\"0.699999988\"\n            transform=\"translate(123.151542, 48.665893) rotate(-15.000000) translate(-123.151542, -48.665893) \"\n          />\n          <path\n            d=\"M151.231539,41.6777785 C151.231539,43.610821 150.336172,45.1777785 149.231676,45.1777785 C148.126906,45.1777785 147.231539,43.610821\n            147.231539,41.6777785 C147.231539,39.7447359 148.126906,38.1777785 149.231676,38.1777785 C150.336172,38.1777785 151.231539,39.7447359\n            151.231539,41.6777785\"\n            id=\"Fill-40\"\n            fill=\"#363E4E\"\n            opacity=\"0.699999988\"\n            transform=\"translate(149.231539, 41.677778) rotate(-15.000000) translate(-149.231539, -41.677778) \"\n          />\n          <path\n            d=\"M164.13009,80.5984991 C163.710485,80.5984991 163.302337,80.4433032 163.077021,80.1652793 C161.181639,77.8264378 158.455641,75.865109\n            155.194038,74.4927069 C151.835769,73.0799301 147.988199,72.3330817 144.067354,72.3330817 C136.554807,72.3330817 129.644697,75.0310374\n            125.582551,79.5502879 C125.22023,79.9535247 124.468379,80.0705604 123.903655,79.8119574 C123.338692,79.5533543 123.174478,79.0168977\n            123.536799,78.6134906 C125.70237,76.2044616 128.695693,74.1937291 132.192876,72.7990102 C135.80224,71.3593168 139.908303,70.5984991\n            144.067354,70.5984991 C148.422125,70.5984991 152.696459,71.4283117 156.428268,72.9984991 C160.049566,74.5220085 163.076305,76.699862\n            165.180772,79.2966252 C165.516838,79.7112759 165.318492,80.24177 164.737538,80.4816337 C164.545876,80.56085 164.336551,80.5984991\n            164.13009,80.5984991\"\n            id=\"Fill-42\"\n            fill=\"#363E4E\"\n            opacity=\"0.699999988\"\n            transform=\"translate(144.344340, 75.598499) rotate(-15.000000) translate(-144.344340, -75.598499) \"\n          />\n          <path\n            d=\"M145,4 L145,16 C145,20.418278 148.581722,24 153,24 L165,24 L165,24 L145,4 Z\"\n            id=\"Path-6\"\n            fill=\"#363E4E\"\n            opacity=\"0.3\"\n            transform=\"translate(155.000000, 14.000000) rotate(-15.000000) translate(-155.000000, -14.000000) \"\n          />\n          <g id=\"Oval\">\n            <use fill=\"#FFFFFF\" xlinkHref=\"#path-3\" />\n            <use\n              strokeOpacity=\"0.3\"\n              stroke=\"#363E4E\"\n              strokeWidth=\"2\"\n              fillOpacity=\"0.06\"\n              fill=\"#363E4E\"\n              xlinkHref=\"#path-3\"\n            />\n          </g>\n          <path\n            d=\"M190.744882,89.2474981 C191.060742,89.5648032 191.072891,89.8699049 190.781327,90.1628022 L185.970528,94.995606 L190.781327,99.828411\n            C191.072891,100.170124 191.072891,100.48743 190.781327,100.780326 C190.635545,100.926775 190.465467,101 190.271091,101 C190.076716,101\n            189.906637,100.926775 189.760856,100.780326 L185.022947,95.9475223 L180.212148,100.780326 C180.066367,100.926775 179.896288,101 179.701912,101\n            C179.507537,101 179.361754,100.926775 179.264568,100.780326 C178.924409,100.48743 178.924409,100.170124 179.264568,99.828411 L184.002474,94.995606\n            L179.264568,90.1628022 C178.924409,89.8699049 178.912261,89.5648032 179.228122,89.2474981 C179.543982,88.9301931 179.871991,88.9179886\n            180.212148,89.2108858 L185.022947,94.0436909 L189.760856,89.2108858 C190.101012,88.9179886 190.429022,88.9301931 190.744882,89.2474981 Z\"\n            id=\"Shape-Copy-3\"\n            stroke=\"#363E4E\"\n            strokeWidth=\"0.8\"\n            fill=\"#191E28\"\n            fillRule=\"nonzero\"\n            opacity=\"0.699999988\"\n            transform=\"translate(185.000000, 95.000000) rotate(-15.000000) translate(-185.000000, -95.000000) \"\n          />\n        </g>\n      </g>\n    </g>\n  </Figure>\n);\nexport default withTheme(SadResult);\n","import styled from 'styled-components';\nimport { Button, Text } from 'components/common';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { transparentize } from 'utils/color';\n\nexport const ButtonElement = styled(Button)`\n  ${buttonDefaultStyle};\n  flex: 0 0 auto;\n  width: 227px;\n  background-color: ${props => props.theme.colors.mainColor};\n  font-size: 14px;\n  margin-bottom: 24px;\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 auto;\n  margin-bottom: 40px;\n`;\n\nexport const TitleElement = styled(Text)`\n  font-weight: 300;\n  line-height: 1.43;\n  text-align: center;\n  margin-bottom: 48px;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const ContinueLaterWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { Link, CssAnimation } from 'components/common';\nimport { BUTTON, LINK } from 'constants/components';\nimport DescriptionWithBackground from '../descriptionWithBackground';\nimport {\n  DescriptionWrapper,\n  TitleElement,\n  ContinueLaterWrapper,\n  ButtonElement\n} from './StartNewAttempt.styled';\n\ntype StartNewAttemptProps = {\n  closePopup(): void;\n  popupSettings: { [key: string]: any };\n};\n\nexport const StartNewAttempt: React.FunctionComponent<StartNewAttemptProps> = (\n  props: StartNewAttemptProps\n) => {\n  const [restoreAttemptStarted, setRestoreAttemptStarted] = React.useState<boolean>(false);\n\n  const startNewAttemptHandler = async () => {\n    if (!restoreAttemptStarted) {\n      setRestoreAttemptStarted(true);\n      const { newAttempt, navigateToIndex } = props.popupSettings;\n      const { closePopup } = props;\n      await newAttempt();\n      closePopup();\n      navigateToIndex();\n    }\n  };\n\n  const renderDescription = () => (\n    <CssAnimation type={CssAnimation.AnimationType.fadeInDown}>\n      <DescriptionWrapper>\n        <DescriptionWithBackground\n          iconName=\"rounded-info\"\n          iconSize={12}\n          descriptionText={localize('[start new attempt text]')}\n        />\n      </DescriptionWrapper>\n    </CssAnimation>\n  );\n\n  return (\n    <CssAnimation type={CssAnimation.AnimationType.fadeInDown}>\n      <ContinueLaterWrapper>\n        <TitleElement appearance=\"span\" size={35}>\n          {localize('[start new attempt title]')}\n        </TitleElement>\n        {renderDescription()}\n        <ButtonElement layout={BUTTON.LAYOUT.PRIMARY} onClick={startNewAttemptHandler} tabIndex={0}>\n          {localize('[start new attempt]')}\n        </ButtonElement>\n        <Link\n          text={localize('[back to the course]')}\n          layout={LINK.LAYOUT.FORM}\n          onClick={props.closePopup}\n        />\n      </ContinueLaterWrapper>\n    </CssAnimation>\n  );\n};\n\nexport default StartNewAttempt;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { centerAbsoluteElement } from 'components/mixins/placement';\n\ntype CourseProgressProps = {\n  isPassed: boolean;\n};\n\ntype CourseProgressCircleProps = {\n  progress: number;\n  isPassed: boolean;\n};\n\nconst circleSize = '94px';\nconst iconSize = '12px';\nconst halfOfCircleSize = '47px';\n\nexport const CourseProgress = styled.div<CourseProgressProps>`\n  width: ${circleSize};\n  height: ${circleSize};\n  margin: 0 auto 30px;\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 4px;\n    background: ${props => props.theme.colors.textColor};\n    position: absolute;\n    top: -1px;\n    left: 50%;\n  }\n`;\n\nexport const CourseProgressText = styled.div<CourseProgressProps>`\n  ${secondaryFont};\n  position: absolute;\n  ${centerAbsoluteElement};\n  font-size: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n\n  span {\n    font-size: 14px;\n  }\n\n  ${props =>\n    props.isPassed &&\n    css`\n      color: ${props.theme.colors.correctColor};\n    `};\n`;\n\nexport const CourseProgressCircle = styled.div<CourseProgressCircleProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${circleSize};\n  height: ${circleSize};\n\n  border-radius: 50%;\n  padding: 0;\n  list-style: none;\n  border: none;\n\n  > * {\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: calc(-${iconSize} / 2);\n    margin-left: calc(-${iconSize} / 2);\n    width: ${iconSize};\n    height: ${iconSize};\n    transform: rotate(${props => props.progress}deg) translate(0, -${halfOfCircleSize}) rotate(-${props => props.progress}deg);\n  }\n\n  span {\n    display: block;\n    height: ${iconSize};\n    max-width: 100%;\n    border-radius: 50%;\n    transition: 0.2s;\n    background: ${props =>\n      props.isPassed\n        ? props.theme.colors.correctColor\n        : transparentize(props.theme.colors.textColor, 0.5)};\n    padding-top: 3px;\n  }\n`;\n","import styled from 'styled-components';\n\n/* eslint-disable import/prefer-default-export */\n\ntype FigureProps = {\n  arialabel?: string;\n  role: string;\n};\nexport const Figure = styled.svg.attrs((props: FigureProps) => ({\n  role: props.role,\n  'aria-label': props.arialabel\n}))<FigureProps>`\n  max-width: 100%;\n  margin-bottom: -96px;\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Figure } from './Figure.styled';\n\ntype CoursePassedBackgroundProps = {\n  theme: { [key: string]: any };\n};\nexport const CoursePassedBackground = (props: CoursePassedBackgroundProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"122px\"\n    viewBox=\"0 0 260 122\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n  >\n    <defs>\n      <filter\n        id=\"prefix__a\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <g fill=\"none\" fill-rule=\"evenodd\">\n      <path\n        fill={transparentize(props.theme.colors.textColor, 1.0)}\n        d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447 7.983c0 6.53-7.447 8.466-7.447 \n        8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0 53.7 0 60.473C0 67.246 9.48 69 9.48 69h207.865s11.703-1.33 \n        11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336 12.08-8.709 12.08-8.709l23.586-.816s12.31 1.814 \n        12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260 .973 249.844 0 249.844 0L74.479.423z\"\n        filter=\"url(#prefix__a)\"\n        opacity=\".02\"\n        transform=\"translate(0 53)\"\n      />\n      <g fill={transparentize(props.theme.colors.correctColor, 1.0)} fill-rule=\"nonzero\">\n        <path\n          d=\"M44.32 5.16c-.357.365-.52.892-.435 1.409L44.28 9l-2.076-1.148c-.22-.122-.463-.183-.705-.183-.242 0-.484.061-.705.183L38.72 \n          9l.396-2.431c.085-.517-.078-1.044-.435-1.41L37 3.438l2.321-.355c.494-.075.92-.401 1.14-.871L41.502 0l1.037 2.212c.22.47.647.796 \n          1.14.87L46 3.439l-1.68 1.721zM9.395 13.407c-.25.446-.271.997-.056 1.474l1.012 2.246-2.303-.571c-.244-.061-.494-.057-.728.005-.234.063-.452.185-.633.36l-1.709 \n          1.646-.246-2.451c-.052-.521-.346-.988-.786-1.25L1.878 13.64l2.15-.944c.458-.2.785-.625.877-1.137l.43-2.405 1.576 1.868c.334.397.83.601 1.327.546l2.334-.258-1.177 \n          2.098zM72.605 13.407c.25.446.271.997.056 1.474l-1.012 2.246 2.303-.571c.244-.061.494-.057.728.005.234.063.452.185.633.36l1.709 \n          1.646.246-2.451c.052-.521.346-.988.786-1.25l2.068-1.227-2.15-.944c-.458-.2-.785-.625-.877-1.137l-.43-2.405-1.576 \n          1.868c-.334.397-.83.601-1.327.546l-2.334-.258 1.177 2.098z\"\n          transform=\"translate(88 1)\"\n        />\n      </g>\n    </g>\n  </Figure>\n);\nexport default withTheme(CoursePassedBackground);\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Figure } from './Figure.styled';\n\ntype CourseFailedBackgroundProps = {\n  theme: { [key: string]: any };\n};\nexport const CourseFailedBackground = (props: CourseFailedBackgroundProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"75px\"\n    viewBox=\"0 0 260 75\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n  >\n    <defs>\n      <filter\n        id=\"prefix__a\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <path\n      fill={transparentize(props.theme.colors.textColor, 1.0)}\n      fillRule=\"evenodd\"\n      d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447 7.983c0 6.53-7.447 \n      8.466-7.447 8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0 53.7 0 60.473C0 67.246 9.48 69 9.48 \n      69h207.865s11.703-1.33 11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336 12.08-8.709 \n      12.08-8.709l23.586-.816s12.31 1.814 12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260 .973 249.844 0 249.844 0L74.479.423z\"\n      filter=\"url(#prefix__a)\"\n      opacity=\".02\"\n      transform=\"translate(0 6)\"\n    />\n  </Figure>\n);\nexport default withTheme(CourseFailedBackground);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { transparentize } from 'utils/color';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport { getColors } from 'store/settings/selectors';\nimport { Icon } from 'components/common';\nimport * as courseSelectors from 'store/course/selectors';\nimport { CIRCLE_DEGREES, CIRCULAR_PROGRESSBAR } from 'constants/common';\nimport { RootAppState } from 'store/types';\nimport {\n  CourseProgress,\n  CourseProgressText,\n  CourseProgressCircle\n} from './CourseProgressResult.styled';\nimport CoursePassedBackground from './CoursePassedBackground';\nimport CourseFailedBackground from './CourseFailedBackground';\n\ntype CourseProgressResultProps = {\n  masteryScore: number;\n  isPassed?: boolean;\n  score?: number;\n  colors?: { [key: string]: any };\n};\n\nexport const CourseProgressResult = ({\n  isPassed = true,\n  score = 0,\n  masteryScore = 0,\n  colors\n}: CourseProgressResultProps) => {\n  const progress = (masteryScore / 100) * CIRCLE_DEGREES;\n  return (\n    <>\n      {isPassed ? <CoursePassedBackground /> : <CourseFailedBackground />}\n      <CourseProgress isPassed={isPassed}>\n        <CourseProgressText isPassed={isPassed}>\n          {score}\n          <span>%</span>\n        </CourseProgressText>\n        <CircularProgressbar\n          strokeWidth={2}\n          percentage={score}\n          styles={{\n            path: {\n              stroke:\n                colors && (isPassed ? colors.correctColor : transparentize(colors.textColor, 0.3)),\n              strokeLinecap: CIRCULAR_PROGRESSBAR.STROKE_LINECAP,\n              transition: CIRCULAR_PROGRESSBAR.TRANSITION\n            },\n            trail: {\n              stroke: colors && transparentize(colors.textColor, 0.02)\n            }\n          }}\n        />\n        <CourseProgressCircle progress={progress} isPassed={isPassed}>\n          <li>\n            <Icon name=\"ok\" size={6} color=\"buttonTextColor\" />\n          </li>\n        </CourseProgressCircle>\n      </CourseProgress>\n    </>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    isPassed: courseSelectors.isPassed(state),\n    score: courseSelectors.getScore(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CourseProgressResult);\n","import download from 'downloadjs';\n\nexport default {\n  async loadFile(downloadUrl: any, fileName: any) {\n    const response: any = await fetch(`${downloadUrl}`).catch(er => console.error(er));\n    const blob = await response.blob();\n    const isChrome = navigator.userAgent.match('CriOS');\n    const isFirefox = navigator.userAgent.match('FxiOS');\n    // For ios and firefox chrome (Remove when webkit patch with fix is in production)\n    if (!isChrome && !isFirefox) {\n      return download(blob, fileName, blob.type);\n    }\n    const reader = new FileReader();\n    const out = new Blob([blob], { type: blob.type });\n    reader.onload = () => {\n      const win: any = window.open();\n      win.document.write(\n        `<iframe src=\"${reader.result}\" frameborder=\"0\" style=\"display: block; width: 100vw; height: 100vh; max-width: 100%;\" allowfullscreen />`\n      );\n    };\n    return reader.readAsDataURL(out);\n  }\n};\n","import requester from 'core/http/requester';\nimport progressStorage from 'core/progressStorage';\nimport { localize } from 'core/localization';\nimport { CONTENT_TYPES } from 'constants/common';\nimport { IdToUuid } from 'utils/string';\nimport fileLoader from './fileLoader';\n\nclass CertificateLoader {\n  getNewLogoUrl(logoUrl: string) {\n    return new URL(logoUrl, window.location.origin).href;\n  }\n\n  async getCertificateUrl(data: any, learnStorageUrl: any, selectedLanguage: any) {\n    const headers: any = progressStorage.getHeaders({\n      contentType: CONTENT_TYPES.JSON,\n      bearerToken: progressStorage.getToken()\n    });\n    headers['X-UI-Culture'] = selectedLanguage;\n\n    const { courseId, templateId, logoUrl } = data;\n    const logo = this.getNewLogoUrl(logoUrl);\n    const response: any = await requester.get(\n      `${learnStorageUrl}/api/learner/me/courses/${IdToUuid(courseId)}/attempts/last/certificate`,\n      {\n        query: {\n          templateId,\n          logoUrl: logo\n        },\n        headers\n      } as any\n    );\n    if (response.status !== 200) {\n      const error = response.json();\n      console.error(error.message);\n      return false;\n    }\n    const responseData = await response.json();\n    return responseData.url;\n  }\n\n  async downloadCertificate(data: any, learnStorageUrl: any, selectedLanguage: any) {\n    const downloadUrl = await this.getCertificateUrl(data, learnStorageUrl, selectedLanguage);\n    const fileName = `${localize('[certificate file name]')}.pdf`;\n    if (downloadUrl) {\n      return fileLoader.loadFile(downloadUrl, fileName);\n    }\n    return false;\n  }\n}\n\nexport default new CertificateLoader();\n","import styled from 'styled-components';\n\nconst AfterwordContainer = styled.div`\n  margin-top: 56px;\n  text-align: left;\n`;\n\nexport default AfterwordContainer;\n","import * as React from 'react';\nimport Contents from 'components/contents/Contents';\nimport * as courseSelectors from 'store/course/selectors';\nimport { connect } from 'react-redux';\n\nimport AfterwordContainer from './courseAfterword.styled';\nimport { RootAppState } from 'store/types';\n\ntype AfterwordContainerProps = {\n  isPassed: boolean;\n  passedAfterwordsIds: string[];\n  failedAfterwordsIds: string[];\n};\nexport const CourseAfterword = (props: AfterwordContainerProps) => {\n  const { isPassed, passedAfterwordsIds, failedAfterwordsIds } = props;\n  let afterWordsIds = isPassed ? passedAfterwordsIds : failedAfterwordsIds;\n\n  return (\n    <React.Fragment>\n      {afterWordsIds.length > 0 && (\n        <AfterwordContainer>\n          <Contents items={afterWordsIds} linkTabIndex={0} />\n        </AfterwordContainer>\n      )}\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isPassed: courseSelectors.isPassed(state),\n    passedAfterwordsIds: courseSelectors.getPassedAfterwords(state),\n    failedAfterwordsIds: courseSelectors.getFailedAfterwords(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CourseAfterword);\n","import styled from 'styled-components';\nimport { Text, Separator } from 'components/common';\nimport media from 'components/mixins/media';\n\ntype ContainerProps = {\n  logoShown?: boolean\n}\nexport const Container = styled.div<ContainerProps>`\n  text-align: center;\n  margin-top: ${props => (props.logoShown ? '0' : '40px')};\n`;\n\nexport const Figure = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Header = styled(Text)`\n  margin-bottom: 32px;\n\n  ${media.small`\n    margin-bottom: 16px;\n  `};\n`;\n\nexport const StyledText = styled(Text)`\n  font-size: 16px;\n  color: ${props => props.theme.colors.textColor};\n\n  ${media.xlarge`\n  font-size: 16px;\n  `}\n\n  ${media.large`\n  font-size: 14px;\n  `}\n\n  ${media.mobile`\n  font-size: 13px;\n  `}\n`;\n\nexport const ButtonWrapper = styled.div`\n  margin-bottom: 20px;\n  position: relative;\n  & div[role='presentation'] {\n    display: block;\n  }\n  & button {\n    width: 100%;\n    + div {\n      margin-top: 10px;\n    }\n  }\n`;\n\nexport const SeparatorElement = styled(Separator)`\n  margin-top: 80px;\n  margin-bottom: 0;\n\n  ${media.mobile`\n    display: none;\n  `};\n`;\n\nexport const WidthLimiterContainer = styled.div`\n  display: inline-block;\n`;\n\nexport const AfterwordContainer = styled.div`\n  margin-top: 56px;\n`;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { localize } from 'core/localization';\nimport Trophy from 'assets/figures/Trophy';\nimport Rocket from 'assets/figures/Rocket';\nimport SadResult from 'assets/figures/SadResult';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { StatusTooltip, Button, Link, CourseLogo } from 'components/common';\nimport * as courseSelectors from 'store/course/selectors';\nimport * as courseActions from 'store/course/actions';\nimport * as popupActions from 'store/popup/actions';\nimport * as navigationActions from 'store/navigation/actions';\nimport * as sectionActions from 'store/sections/actions';\nimport CloseCoursePopup from 'components/popups/closeCourse';\nimport NpsPopup from 'components/popups/nps';\nimport startNewAttempt from 'components/popups/startNewAttempt';\nimport CourseProgressResult from 'components/common/CourseProgressResult';\nimport { getQuestionUrl } from 'utils/navigation';\nimport {\n  POPUP_ID_NPS_POPUP,\n  POPUP_ID_CLOSE_COURSE,\n  POPUP_ID_START_NEW_ATTEMPT\n} from 'constants/popups';\nimport * as settingSelectors from 'store/settings/selectors';\nimport { isAuthorized, isAnonymous } from 'store/user/selectors';\nimport {\n  getAffectProgressSectionsCount,\n  getSectionsCount,\n  getSectionsPassedCount\n} from 'store/sections/selectors';\nimport certificateLoader from 'core/documentLoaders/certificateLoader';\nimport {\n  hasScoreContentPages,\n  getAffectProgressQuestionsCount,\n  getCorrectlyAffectProgressAnsweredQuestionsCount,\n  getFirstIncorrectOrPendingQuestion,\n  hasReAnswerableQuestions\n} from 'store/questions/selectors';\nimport { getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { BUTTON, TOOLTIP, LINK } from 'constants/components';\nimport CourseAfterword from 'components/common/courseAfterword';\nimport { isLtiInitialized } from 'store/modules/selectors';\nimport { RootAppState } from 'store/types';\nimport RemainingAttemptsBlock from 'components/remainingAttemptsBlock';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport {\n  Container,\n  Figure,\n  Header,\n  StyledText,\n  ButtonWrapper,\n  SeparatorElement,\n  WidthLimiterContainer\n} from './ResultsPage.styled';\nimport * as courseTimerActions from '../../../store/timer/actions';\n\nconst MAX_SCORE = 100;\n\ntype ResultsPageProps = {\n  isPassed?: boolean;\n  isPreviewMode: boolean;\n  isReviewMode: boolean;\n  navigateToIndex(): void;\n  navigateToUrl(url: string): void;\n  navigateToPrevPage(): void;\n  checkHasPrevPage(): any;\n  affectProgressQuestionsCount: number;\n  affectProgressSectionsCount: number;\n  correctlyAnsweredQuestionsCount: number;\n  title: string;\n  isScormMode: boolean;\n  isLti: boolean;\n  courseActions: { [key: string]: any };\n  courseId: string;\n  templateId: string;\n  score: number;\n  logoUrl: string;\n  logoShown: boolean;\n  isCrossDeviceSavingEnabled: boolean;\n  learnStorageUrl: string;\n  selectedLanguage: string;\n  courseHasBeenContinued: boolean;\n  userAuthorized: boolean;\n  isAllowedDownloadCertificate: boolean;\n  certificateDownloaded: boolean;\n  popupActions: { [key: string]: any };\n  isNpsEnabled: boolean;\n  isOverallMasteryScore: boolean;\n  hasScoreContentPages: boolean;\n  masteryScore: number;\n  sectionsPassedCount: number;\n  isInProgress?: boolean;\n  shouldSubmitAllQuestions: boolean;\n  isFailed?: boolean;\n  navigationActions: { [key: string]: any };\n  isAttemptsLimited?: boolean;\n  isAnonymous?: boolean;\n  hasReanswerableQuestions?: boolean;\n  limitedAttemptsNumber: number;\n  attemptsUsed: number;\n  timerStatus: TimerStatus;\n  sectionActions: { [key: string]: any };\n  sectionCount: number;\n  timerActions: { [key: string]: any };\n  questionToNavigate: { [key: string]: any };\n};\n\ntype ResultsPageState = {\n  isCertificateLoading: boolean;\n  showCertificateLoadedError: boolean;\n  npsPopupWasOpened: boolean;\n};\nexport class ResultsPage extends PureComponent<ResultsPageProps, ResultsPageState> {\n  constructor(props: ResultsPageProps) {\n    super(props);\n    this.state = {\n      isCertificateLoading: false,\n      showCertificateLoadedError: false,\n      npsPopupWasOpened: false\n    };\n  }\n\n  continueCourse = () => {\n    const {\n      checkHasPrevPage,\n      navigateToPrevPage,\n      navigateToUrl,\n      navigateToIndex,\n      questionToNavigate,\n      isAttemptsLimited\n    } = this.props;\n\n    if (!isAttemptsLimited && questionToNavigate) {\n      navigateToUrl(getQuestionUrl(questionToNavigate.sectionId, questionToNavigate.id));\n    } else if (checkHasPrevPage()) {\n      navigateToPrevPage();\n    } else {\n      navigateToIndex();\n    }\n  };\n\n  openNpsPopup({ certificateButton = false } = {}) {\n    this.props.popupActions.openPopup({\n      popupId: POPUP_ID_NPS_POPUP,\n      popupAriaLabelKey: '[aria label close nps popup]',\n      component: NpsPopup,\n      fromDownloadCertificateButton: certificateButton,\n      disablePopupClosing: true,\n      disableBottomLine: true\n    });\n    this.setState({ npsPopupWasOpened: true });\n  }\n\n  hasRemainingAttempts = (): boolean => {\n    const { limitedAttemptsNumber, attemptsUsed } = this.props;\n    return limitedAttemptsNumber - attemptsUsed > 0;\n  };\n\n  startNewAttempt = async () => {\n    const { navigateToUrl } = this.props;\n    const urlToNavigate: any = await this.props.courseActions.startNewAttempt();\n    await navigateToUrl(urlToNavigate);\n  };\n\n  openStartNewAttemptPopup = () => {\n    const { navigateToIndex } = this.props;\n    this.props.popupActions.openPopup({\n      popupId: POPUP_ID_START_NEW_ATTEMPT,\n      popupAriaLabelKey: '[aria label start new attempt popup]',\n      component: startNewAttempt,\n      newAttempt: this.props.courseActions.startNewAttempt,\n      navigateToIndex,\n      disablePopupClosing: false,\n      disableBottomLine: true\n    });\n  };\n\n  submitResults = async () => {\n    await this.props.courseActions.finished();\n\n    if (!this.props.isNpsEnabled) {\n      this.props.popupActions.openPopup({\n        popupId: POPUP_ID_CLOSE_COURSE,\n        popupAriaLabelKey: '[aria label close course popup]',\n        component: CloseCoursePopup,\n        disablePopupClosing: true\n      });\n      await this.props.courseActions.finalized();\n    }\n\n    if (this.props.isNpsEnabled) {\n      this.openNpsPopup();\n    }\n  };\n\n  downloadCertificate = async () => {\n    const data = {\n      courseId: this.props.courseId,\n      templateId: this.props.templateId,\n      courseTitle: this.props.title,\n      score: this.props.score,\n      logoUrl: this.props.logoUrl\n    };\n    this.setState({ isCertificateLoading: true });\n\n    const isCertificateDownloaded = await certificateLoader.downloadCertificate(\n      data,\n      this.props.learnStorageUrl,\n      this.props.selectedLanguage\n    );\n    await this.props.courseActions.certificateDownloaded(isCertificateDownloaded);\n    this.setState({\n      isCertificateLoading: false,\n      showCertificateLoadedError: !isCertificateDownloaded\n    });\n\n    if (this.props.isNpsEnabled && !this.state.npsPopupWasOpened) {\n      this.openNpsPopup({ certificateButton: true });\n    }\n  };\n\n  closeCourse = () => {\n    const { isNpsEnabled, userAuthorized } = this.props;\n    this.props.popupActions.openPopup({\n      popupId:\n        isNpsEnabled && !this.state.npsPopupWasOpened ? POPUP_ID_NPS_POPUP : POPUP_ID_CLOSE_COURSE,\n      popupAriaLabelKey:\n        isNpsEnabled && !this.state.npsPopupWasOpened\n          ? '[aria label close nps popup]'\n          : '[aria label close course popup]',\n      component:\n        isNpsEnabled && userAuthorized && !this.state.npsPopupWasOpened\n          ? NpsPopup\n          : CloseCoursePopup,\n      disablePopupClosing: true,\n      disableBottomLine: isNpsEnabled\n    });\n  };\n\n  hidePopover = async () => {\n    this.setState({ showCertificateLoadedError: false });\n  };\n\n  async componentDidMount() {\n    document.title = `${localize('[title for results page]')} | ${this.props.title}`;\n    await this.props.sectionActions.updateProgressUnaffectedSections();\n    const { timerStatus, affectProgressQuestionsCount, timerActions } = this.props;\n    if (timerStatus === TimerStatus.STARTED && affectProgressQuestionsCount === 0) {\n      timerActions.setTimerStatus(TimerStatus.STOPPED);\n      timerActions.updateTimerProgress();\n    }\n  }\n\n  renderSubmitAtOnceButton() {\n    const { isAttemptsLimited, isInProgress, isScormMode, isLti, score } = this.props;\n    return (\n      <>\n        {isAttemptsLimited &&\n          this.hasRemainingAttempts() &&\n          score < 100 &&\n          this.submitAtOnceStartNewAttemptButton()}\n        {!isAttemptsLimited && this.submitAtOnceStartNewAttemptButton()}\n        {!isInProgress && !isScormMode && !isLti && this.renderCloseCourseButton()}\n      </>\n    );\n  }\n\n  renderQuestionSubmitButton() {\n    const {\n      isPassed,\n      isScormMode,\n      isLti,\n      isAttemptsLimited,\n      isPreviewMode,\n      isReviewMode,\n      isInProgress,\n      hasReanswerableQuestions,\n      score,\n      timerStatus\n    } = this.props;\n    const isTimerStopped = timerStatus === TimerStatus.STOPPED;\n    return (\n      <>\n        {isInProgress ||\n        (isAttemptsLimited && score < MAX_SCORE && hasReanswerableQuestions && !isTimerStopped)\n          ? this.renderContinueCourseButton()\n          : ''}\n        {!isScormMode && !isLti && this.renderCloseCourseButton()}\n        {!isAttemptsLimited &&\n          !isPassed &&\n          isPreviewMode &&\n          isReviewMode &&\n          this.submitAtOnceStartNewAttemptButton()}\n        {!isPreviewMode &&\n          !isReviewMode &&\n          !isAttemptsLimited &&\n          isPassed &&\n          this.renderStartNewAttemptButton()}\n      </>\n    );\n  }\n\n  renderDownloadCertificateButton() {\n    const { courseHasBeenContinued, certificateDownloaded } = this.props;\n    return (\n      <ButtonWrapper>\n        <StatusTooltip\n          popoverPosition={'top'}\n          layout={TOOLTIP.INCORRECT}\n          onRequestClose={this.hidePopover}\n          showTooltip={this.state.showCertificateLoadedError}\n          message={localize('[certificate failed load]')}\n          popoverButton={\n            <Button\n              type=\"submit\"\n              layout={courseHasBeenContinued || certificateDownloaded ? 'secondary' : 'primary'}\n              tabIndex={0}\n              onClick={this.downloadCertificate}\n              isLoading={this.state.isCertificateLoading}\n              onBlur={this.hidePopover}\n            >\n              {localize('[download certificate]')}\n            </Button>\n          }\n        />\n      </ButtonWrapper>\n    );\n  }\n\n  renderCloseCourseButton() {\n    return (\n      <ButtonWrapper>\n        <Button\n          layout={'secondary'}\n          tabIndex={0}\n          onClick={this.closeCourse}\n          data-test=\"close-course-button\"\n        >\n          {localize('[close course]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderContinueCourseButton() {\n    return (\n      <ButtonWrapper>\n        <Button tabIndex={0} onClick={this.continueCourse} data-test=\"continue-course-button\">\n          {localize('[continue course]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderStartNewAttemptButton() {\n    return (\n      <Link\n        text={localize('[start new attempt]')}\n        layout={LINK.LAYOUT.FORM}\n        onClick={this.openStartNewAttemptPopup}\n        tabIndex={0}\n      />\n    );\n  }\n\n  submitAtOnceStartNewAttemptButton() {\n    return (\n      <ButtonWrapper>\n        <Button layout={BUTTON.LAYOUT.PRIMARY} tabIndex={0} onClick={this.startNewAttempt}>\n          {localize('[start new attempt]')}\n        </Button>\n        <RemainingAttemptsBlock isResultsPage={true} />\n      </ButtonWrapper>\n    );\n  }\n\n  renderSubmitResultsButton() {\n    const { isPassed } = this.props;\n\n    return (\n      <ButtonWrapper>\n        <Button\n          layout={isPassed ? 'primary' : 'secondary'}\n          tabIndex={0}\n          onClick={this.submitResults}\n        >\n          {localize('[submit results]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderMyCourseButton() {\n    const { learnStorageUrl, navigationActions } = this.props;\n    return (\n      <ButtonWrapper>\n        <Button\n          layout=\"primary\"\n          tabIndex={0}\n          onClick={() => navigationActions.goToUrl(learnStorageUrl)}\n          data-test=\"my-courses-button\"\n        >\n          {localize('[my courses]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderMasteryScoreOverallFigure = () => {\n    const { affectProgressQuestionsCount, masteryScore } = this.props;\n    if (affectProgressQuestionsCount > 0) {\n      return <CourseProgressResult masteryScore={masteryScore} />;\n    }\n    return <Trophy />;\n  };\n\n  mainFigure = () => {\n    const { isPassed, isInProgress, isFailed, isOverallMasteryScore } = this.props;\n    return isOverallMasteryScore ? (\n      <Figure>{this.renderMasteryScoreOverallFigure()}</Figure>\n    ) : (\n      <Figure>\n        {isPassed && <Trophy />}\n        {isInProgress && <Rocket />}\n        {isFailed && <SadResult />}\n      </Figure>\n    );\n  };\n\n  headerText = () => {\n    const { isPassed, isInProgress, isFailed } = this.props;\n    return (\n      <Header appearance=\"h2\" id={SKIP_TO_CONTENT_IDS.RESULT_PAGE} ignoreFocus={true}>\n        {isPassed && localize('[congratulations]')}\n        {isInProgress && localize('[course is not passed yet]')}\n        {isFailed && localize('[course is not passed]')}\n      </Header>\n    );\n  };\n\n  coursePassStatusText = () => {\n    const {\n      shouldSubmitAllQuestions,\n      isOverallMasteryScore,\n      score,\n      affectProgressQuestionsCount\n    } = this.props;\n\n    if (shouldSubmitAllQuestions && isOverallMasteryScore && affectProgressQuestionsCount > 0) {\n      return localize('[you successfully passed the course with a score of x]', { score });\n    }\n    return localize('[you passed the course successfully]');\n  };\n\n  courseStatusText = () => {\n    const { isPassed, isInProgress, isFailed } = this.props;\n    return (\n      <StyledText data-test=\"course-status-message\">\n        {isPassed && this.coursePassStatusText()}\n        {isInProgress && localize('[you have not passed the course yet]')}\n        {isFailed && localize('[you have not passed the course]')}\n      </StyledText>\n    );\n  };\n\n  canNavigateToMyCourses = () => {\n    const { isAnonymous, isFailed, isScormMode, isPreviewMode, isLti } = this.props;\n    return !isAnonymous && isFailed && !isScormMode && !isPreviewMode && !isLti;\n  };\n\n  showRemainingAttemptsText = () => {\n    const { isAttemptsLimited, isFailed } = this.props;\n    return (\n      isAttemptsLimited &&\n      isFailed && (\n        <StyledText data-test=\"no-attempts-remaining-message\">\n          {`${localize('[all attempts has been used]')} `}\n        </StyledText>\n      )\n    );\n  };\n\n  showCourseScoringText = () => {\n    const {\n      isOverallMasteryScore,\n      hasScoreContentPages,\n      affectProgressQuestionsCount,\n      correctlyAnsweredQuestionsCount,\n      sectionsPassedCount,\n      sectionCount\n    } = this.props;\n\n    if (isOverallMasteryScore) {\n      if (!hasScoreContentPages) {\n        return (\n          <StyledText data-test=\"course-score-message\">\n            {localize('[you correctly answered X questions out of Y]', {\n              correctQuestionsCount: correctlyAnsweredQuestionsCount,\n              totalQuestionsCount: affectProgressQuestionsCount\n            })}\n          </StyledText>\n        );\n      }\n      return (\n        <StyledText data-test=\"course-score-message\">\n          {localize('[you correctly completed X items out of Y]', {\n            correctQuestionsCount: correctlyAnsweredQuestionsCount,\n            totalQuestionsCount: affectProgressQuestionsCount\n          })}\n        </StyledText>\n      );\n    }\n    return (\n      <StyledText data-test=\"course-score-message\">\n        {localize('[you completed X out of Y sections]', {\n          correctSectionsCount: sectionsPassedCount,\n          totalSectionsCount: sectionCount\n        })}\n      </StyledText>\n    );\n  };\n\n  render() {\n    const {\n      isPassed,\n      isScormMode,\n      isLti,\n      isAllowedDownloadCertificate,\n      userAuthorized,\n      isCrossDeviceSavingEnabled,\n      affectProgressSectionsCount,\n      logoUrl,\n      logoShown,\n      shouldSubmitAllQuestions\n    } = this.props;\n    return (\n      <Container logoShown={logoShown}>\n        {logoShown && <CourseLogo logoUrl={logoUrl} />}\n        {this.mainFigure()}\n        {this.headerText()}\n        {this.courseStatusText()}\n        &nbsp;\n        {shouldSubmitAllQuestions &&\n          !this.hasRemainingAttempts() &&\n          this.showRemainingAttemptsText()}\n        {!shouldSubmitAllQuestions && this.showRemainingAttemptsText()}\n        {affectProgressSectionsCount > 0 && this.showCourseScoringText()}\n        <Container>\n          <WidthLimiterContainer>\n            {isAllowedDownloadCertificate &&\n              isPassed &&\n              userAuthorized &&\n              isCrossDeviceSavingEnabled &&\n              !isScormMode &&\n              this.renderDownloadCertificateButton()}\n            {!shouldSubmitAllQuestions && this.renderQuestionSubmitButton()}\n            {this.canNavigateToMyCourses() && this.renderMyCourseButton()}\n            {shouldSubmitAllQuestions && this.renderSubmitAtOnceButton()}\n            {(isScormMode || isLti) && this.renderSubmitResultsButton()}\n          </WidthLimiterContainer>\n          <CourseAfterword />\n        </Container>\n        <SeparatorElement />\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isPassed: courseSelectors.isPassed(state),\n    isPreviewMode: settingSelectors.isPreviewMode(state),\n    isReviewMode: settingSelectors.isReviewMode(state),\n    title: courseSelectors.getCourseTitle(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    affectProgressSectionsCount: getAffectProgressSectionsCount(state),\n    correctlyAnsweredQuestionsCount: getCorrectlyAffectProgressAnsweredQuestionsCount(state),\n    isScormMode: settingSelectors.isScormMode(state),\n    isLti: isLtiInitialized(state),\n    courseId: courseSelectors.getCourseId(state),\n    templateId: courseSelectors.getTemplateId(state),\n    score: courseSelectors.getScore(state),\n    logoUrl: settingSelectors.getLogo(state),\n    logoShown: settingSelectors.isMainLogoShown(state),\n    isCrossDeviceSavingEnabled: settingSelectors.isCrossDeviceSavingEnabled(state),\n    learnStorageUrl: settingSelectors.getLearnServiceUrl(state),\n    selectedLanguage: settingSelectors.getSelectedLanguage(state),\n    courseHasBeenContinued: courseSelectors.hasBeenContinued(state),\n    userAuthorized: isAuthorized(state),\n    isAllowedDownloadCertificate: settingSelectors.isAllowedDownloadCertificate(state),\n    certificateDownloaded: courseSelectors.isCertificateDownloaded(state),\n    isNpsEnabled: settingSelectors.isNpsEnabled(state),\n    isOverallMasteryScore: settingSelectors.isOverallMasteryScore(state),\n    hasScoreContentPages: hasScoreContentPages(state),\n    sectionsPassedCount: getSectionsPassedCount(state),\n    isInProgress: courseSelectors.isInProgress(state),\n    isAttemptsLimited: settingSelectors.isAttemptsLimited(state),\n    masteryScore: settingSelectors.getMasteryScoreValue(state),\n    hasReanswerableQuestions: hasReAnswerableQuestions(state),\n    shouldSubmitAllQuestions: settingSelectors.shouldSubmitAllQuestions(state),\n    limitedAttemptsNumber: settingSelectors.getLimitedAttemptsNumber(state),\n    isAnonymous: isAnonymous(state),\n    isFailed: courseSelectors.isFailed(state),\n    attemptsUsed: courseSelectors.getCourseAttempt(state),\n    timerStatus: getTimerStatus(state),\n    sectionCount: getSectionsCount(state),\n    questionToNavigate: getFirstIncorrectOrPendingQuestion(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    courseActions: bindActionCreators(courseActions, dispatch),\n    navigationActions: bindActionCreators(navigationActions, dispatch),\n    popupActions: bindActionCreators(popupActions, dispatch),\n    sectionActions: bindActionCreators(sectionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(ResultsPage));\n","import styled, { css } from 'styled-components';\nimport media from 'components/mixins/media';\nimport { Z_INDEX, TOC } from 'constants/components';\nimport { MEDIA_TABLET, MEDIA_LARGE, MEDIA_XLARGE } from 'constants/screenResolutions';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { transition, pointerOnHover } from 'components/mixins/interactivity';\nimport { PageSidebar, PageContent } from 'components/shell/Layout';\nimport { PageContentChild } from 'components/shell/Layout/Layout.styled';\nimport { bodyBackground } from 'components/mixins/backgrounds';\nimport { transparentize } from 'utils/color';\n\ntype BlockoutProps = {\n  ariaHidden: any;\n  isTreeOfContentExpanded: boolean;\n};\n\nexport const Blockout = styled.div.attrs((props: BlockoutProps) => ({\n  'aria-hidden': props.ariaHidden\n}))<BlockoutProps>`\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: ${Z_INDEX.BLOCKOUT};\n  opacity: 0;\n  background-color: ${props => transparentize(props.theme.colors.contentBodyColor, 0.9)};\n  ${transition('opacity')};\n  ${pointerOnHover()};\n  ${(props: BlockoutProps) =>\n    props.isTreeOfContentExpanded &&\n    css`\n      ${media.tablet`\n      width: 100%;\n      height: 100vh;\n      opacity: 1;\n    `}\n    `};\n`;\n\ntype CourseOverviewSidebarProps = {\n  isTreeOfContentExpanded: boolean;\n  background: any;\n};\n\nexport const CourseOverviewSidebar = styled(PageSidebar)<CourseOverviewSidebarProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ${Z_INDEX.TOC};\n  width: ${TOC.EXPANDED_WIDTH}px;\n  height: 100%;\n  ${transition('left, transform')};\n  ${props => bodyBackground(props.background.body)};\n  ${media.small`\n    position: fixed;\n  `};\n  ${media.tablet`\n    & [data-sidebar-child]{\n      height: 100%;\n    }\n  `};\n  ${props =>\n    props.isTreeOfContentExpanded &&\n    css`\n      @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n        width: auto;\n        right: 30px;\n      }\n    `};\n  ${props =>\n    !props.isTreeOfContentExpanded &&\n    css`\n      left: -${TOC.EXPANDED_WIDTH}px;\n      ${media.xsmall`\n        left: 0;\n        transform: translateX(-100%);\n      `};\n    `};\n`;\n\ntype CourseOverviewContentProps = {\n  background: any;\n  isTreeOfContentExpanded: boolean;\n};\n\nexport const CourseOverviewContent = styled(PageContent)<CourseOverviewContentProps>`\n  position: absolute;\n  top: 0;\n  left: ${TOC.EXPANDED_WIDTH}px;\n  width: calc(100% - ${TOC.EXPANDED_WIDTH}px);\n  height: 100%;\n  ${props => bodyBackground(props.background.body)};\n  ${transition('left, width')};\n  ${props =>\n    !props.isTreeOfContentExpanded &&\n    css`\n      left: 0 !important;\n      width: 100% !important;\n    `};\n  ${media.tablet`\n    width: 100% !important;\n    left: 0 !important;\n  `};\n\n  & ${PageContentChild} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const PageContainer = styled.div`\n  max-height: 100vh;\n  margin: 0 auto;\n`;\n\ntype ContentContainerProps = {\n  logoShown: boolean;\n  isTreeOfContentExpanded: boolean;\n  isCourseOnOnePage?: boolean;\n  dynamicHeight: number;\n  isOnOnePageView: boolean;\n};\n\nexport const ContentContainer = styled.section<ContentContainerProps>`\n  width: ${props => (props.isCourseOnOnePage && props.isOnOnePageView ? `${100}%` : `${880}px`)};\n  height: ${props =>\n    props.isCourseOnOnePage && props.isOnOnePageView ? `${props.dynamicHeight - 1}px` : 'inherit'};\n  padding: ${props => {\n    if (props.isCourseOnOnePage && props.isOnOnePageView) {\n      return '0';\n    }\n    return props.logoShown ? '0 0 120px 0' : '70px 0 120px 0';\n  }};\n  margin-right: auto !important;\n  margin-left: auto !important;\n  position: relative;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: ${MEDIA_XLARGE}px) {\n    width: ${props => (props.isCourseOnOnePage && props.isOnOnePageView ? `${100}%` : `${750}px`)};\n  }\n\n  @media (max-width: ${props =>\n      props.isTreeOfContentExpanded ? MEDIA_LARGE - 40 : MEDIA_TABLET}px) {\n    width: ${props => (props.isCourseOnOnePage && props.isOnOnePageView ? `${100}%` : `${560}px`)};\n  }\n\n  ${media.small`\n    width: 100%;\n  `};\n\n  ${props =>\n    props.logoShown\n      ? css`\n          ${media.small`\n      padding: 0 30px 80px 30px;\n    `}\n        `\n      : css`\n          ${media.small`\n      padding: 50px 30px 80px 30px;\n    `}\n        `}\n`;\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  ${getCustomScrollbars()}\n  overflow-x: hidden;\n  background-color: ${props => props.theme.colors.secondaryColor};\n  -webkit-overflow-scrolling: touch;\n  ${media.small`\n    position: fixed;\n  `};\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport { TweenMax } from 'gsap';\nimport { getChain } from 'store/navigation/selectors';\nimport { history } from 'store';\nimport { RootAppState } from 'store/types';\nimport { isLearningObjectiveView, isQuestionView } from 'components/shell/RouteTransition/viewChecker';\nimport { CourseOverviewContent } from './CourseOverview.styled';\n\n\nexport const COURSE_OVERVIEW_TRANSITION_DURATION = 0.4;\n\nexport const COURSE_OVERVIEW_TRANSITION_TIMEOUT = 1000;\n\ntype CourseOverviewRouteTransitionProps = {\n  children: any;\n  location: { [key: string]: any };\n  isTreeOfContentExpanded: boolean;\n  background: { [key: string]: any };\n  urlsChain: any[];\n  isCourseOnOnePage: boolean;\n};\n\nexport class CourseOverviewRouteTransition extends Component<\n  CourseOverviewRouteTransitionProps,\n  {}\n> {\n  prevUrl: string;\n\n  unlistenHistory: any;\n\n  constructor(props: CourseOverviewRouteTransitionProps) {\n    super(props);\n    this.prevUrl = '';\n    this.unlistenHistory = '';\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    this.prevUrl = location.pathname;\n    this.unlistenHistory = history.listen(listenLocation => {\n      this.prevUrl = listenLocation.pathname;\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlistenHistory();\n  }\n\n  getTransitionKey = (pathname: any) => {\n    if (\n      this.props.isCourseOnOnePage &&\n      (isQuestionView.test(pathname) || isLearningObjectiveView.test(pathname))\n    ) {\n      return 'courseOnOnePage';\n    }\n    return pathname;\n  };\n\n  onEnter = (node: any, isAppearing: any) => {\n    const { location, urlsChain } = this.props;\n    if (isAppearing) {\n      return undefined;\n    }\n    if (urlsChain.indexOf(this.prevUrl) < urlsChain.indexOf(location.pathname)) {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 0, y: 300 },\n        { opacity: 1, y: 0, delay: COURSE_OVERVIEW_TRANSITION_DURATION, clearProps: 'transform' }\n      );\n    } else {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 0, y: -300 },\n        { opacity: 1, y: 0, delay: COURSE_OVERVIEW_TRANSITION_DURATION, clearProps: 'transform' }\n      );\n    }\n    return null;\n  };\n\n  onExit = (node: any) => {\n    const { location, urlsChain } = this.props;\n    if (urlsChain.indexOf(this.prevUrl) < urlsChain.indexOf(location.pathname)) {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 1, y: 0 },\n        { opacity: 0, y: -300, clearProps: 'transform' }\n      );\n    } else {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 1, y: 0 },\n        { opacity: 0, y: 300, clearProps: 'transform' }\n      );\n    }\n  };\n\n  render() {\n    const { children, location, isTreeOfContentExpanded, background } = this.props;\n    return (\n      <TransitionGroup\n        component={CourseOverviewContent}\n        isTreeOfContentExpanded={isTreeOfContentExpanded}\n        background={background}\n      >\n        <Transition\n          key={this.getTransitionKey(location.pathname)}\n          in\n          appear={false}\n          onEnter={this.onEnter}\n          onExit={this.onExit}\n          timeout={COURSE_OVERVIEW_TRANSITION_TIMEOUT}\n        >\n          {children}\n        </Transition>\n      </TransitionGroup>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    urlsChain: getChain(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CourseOverviewRouteTransition);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const toggleAnswerIsSelected = (questionId: string, answerId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_MULTIPLECHOICE_TOGGLE_ANSWER_IS_SELECTED,\n    payload: { questionId, answerId }\n  });\n};\n\nexport const setSingleAnswerSelected = (questionId: string, answerId: string, questionType: string): ThunkResult => dispatch => {\n\n  switch (questionType) {\n    case ActionTypes.QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED:\n      dispatch({\n        type: ActionTypes.QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED,\n        payload: { questionId, answerId }\n      });\n      break;\n    case ActionTypes.SET_SINGLE_ANSWER_SELECTED:\n      dispatch({\n        type: ActionTypes.SET_SINGLE_ANSWER_SELECTED,\n        payload: { questionId, answerId }\n      });\n      break;\n    default:\n      dispatch({\n        type: ActionTypes.QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED,\n        payload: { questionId, answerId }\n      });\n  }\n};\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/multipleChoice/selectors';\nimport { MultipleChoiceItems } from 'components/common';\nimport * as actions from 'store/questions/multipleChoice/actions';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ninterface MultipleChoiceProps {\n  id: string;\n  type: string;\n  isSingleAnswer: boolean;\n  answers?: any[];\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n}\n\nexport class MultipleChoice extends React.Component<MultipleChoiceProps, {}> {\n  static defaultProps = {\n    isSingleAnswer: false,\n    answers: []\n  };\n  selectItem = (id: string, itemId: string, isMultiple: boolean) => {\n    if (isMultiple) {\n      this.props.actions && this.props.actions.toggleAnswerIsSelected(id, itemId);\n    } else {\n      this.props.actions &&\n        this.props.actions.setSingleAnswerSelected(\n          id,\n          itemId,\n          'QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED'\n        );\n    }\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(id);\n    }\n  };\n\n  render() {\n    const { answers = [], isAnswered } = this.props;\n    return (\n      <MultipleChoiceItems\n        items={answers}\n        isMultiple={!this.props.isSingleAnswer}\n        selectItem={this.selectItem}\n        id={this.props.id}\n        ariaDisabled={isAnswered}\n        tabIndex={0}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: MultipleChoiceProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultipleChoice);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/multipleChoice/selectors';\nimport { MultipleChoiceItems } from 'components/common';\nimport * as actions from 'store/questions/multipleChoice/actions';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype SingleChoiceImageProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n};\nexport class SingleChoiceImage extends React.Component<SingleChoiceImageProps, {}> {\n  selectItem = (id: string, itemId: string) => {\n    this.props.actions &&\n      this.props.actions.setSingleAnswerSelected(id, itemId, 'SET_SINGLE_ANSWER_SELECTED');\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(id);\n    }\n  };\n\n  render() {\n    const { answers, isAnswered } = this.props;\n    return (\n      <MultipleChoiceItems\n        items={answers || []}\n        selectItem={this.selectItem}\n        id={this.props.id}\n        imageQuestion\n        ariaDisabled={isAnswered}\n        tabIndex={0}\n        isMultiple={false}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: SingleChoiceImageProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleChoiceImage);\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\n\nexport const QuestionContainer = styled.section.attrs({\n  'data-test': 'question-container'\n})`\n  position: relative;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\ntype QuestionContainerOverlayProps = {\n  isShown: boolean;\n  bodyBackground: any;\n}\nexport const QuestionContainerOverlay = styled.div.attrs(props => ({\n  'data-test': 'question-overlay'\n})) <QuestionContainerOverlayProps>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  display: ${props => (props.isShown ? 'block' : 'none')};\n  background-color: ${props =>\n    transparentize(\n      props.bodyBackground && props.bodyBackground.color ? props.bodyBackground.color : '#fff',\n      0.5\n    )};\n`;\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const statementAnswerIsSelected = (questionId: string, answerId: string, isCorrect: boolean): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_STATEMENT_ANSWER_IS_SELECTED,\n    payload: { questionId, answerId, isCorrect }\n  });\n};\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\n\nexport const SwitchBlock = styled.div`\n  width: auto;\n  display: flex;\n  align-self: flex-start;\n  position: absolute;\n  top: 50%;\n  left: 10px;\n  margin-top: -15px;\n  ${media.mobile`\n    align-self: auto;\n    position: static;\n    margin-top: 0;\n  `};\n`;\n\nexport default SwitchBlock;\n","import * as React from 'react';\nimport { SwitchBlock } from './Switch.styled';\n\ntype SwitchContainerProps = {\n  children: any;\n};\n\nexport const SwitchContainer = (props: SwitchContainerProps) => <SwitchBlock>{props.children}</SwitchBlock>;\n\nexport default SwitchContainer;\n","const aux = (props: any) => props.children;\nexport default aux;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport buttonDefaultStyle from 'components/mixins/normalize';\n\ntype SwitchOptionProps = {\n  role: string;\n  tabIndex: number;\n  selected: any;\n  ariaDisable: boolean;\n  ariaLabel: string;\n  ariaChecked: boolean;\n}\n\nexport const SwitchOption = styled.button.attrs((props: SwitchOptionProps) => ({\n  role: props.role,\n  'aria-disabled': props.ariaDisable,\n  'aria-label': props.ariaLabel,\n  'aria-checked': props.ariaChecked,\n  tabIndex: props.tabIndex\n})) <SwitchOptionProps>`\n  ${buttonDefaultStyle};\n  flex-shrink: 0;\n  align-self: self-start;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 29px;\n  width: 30px;\n  height: 30px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.mainColor\n      : transparentize(props.theme.colors.textColor, 0.06)};\n  border-radius: 50%;\n  cursor: pointer;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    background-color: ${props =>\n    props.selected\n      ? props.theme.colors.buttonTextColor\n      : transparentize(props.theme.colors.textColor, 0.01)};\n    border-radius: 50%;\n  }\n  &:hover,\n  &:focus {\n    &:before {\n      background-color: ${props =>\n    props.selected\n      ? props.theme.colors.buttonTextColor\n      : transparentize(props.theme.colors.textColor, 0.2)};\n    }\n  }\n\n  ${media.mobile`\n    margin-bottom: 16px;\n    margin-right: 0;\n    &:first-of-type {\n      margin-right: 16px;\n    }\n    &:last-of-type {\n      margin-left: 16px;\n      margin-right: 6px;\n    }\n  `};\n`;\n\nexport default SwitchOption;\n","import * as React from 'react';\nimport Aux from '../../../common/helpers/AuxWrapper';\nimport { SwitchOption } from './Option.styled';\n\ntype OptionProps = {\n  onClick?(): void,\n  selected: boolean;\n  ariaRole: string;\n  ariaLabel: string;\n  tabIndex: number;\n  ariaDisable: boolean;\n};\n\nexport const Option = (props: OptionProps) => {\n  const { onClick, selected, ariaRole, ariaLabel, tabIndex, ariaDisable } = props;\n  return (\n    <Aux>\n      <SwitchOption\n        role={ariaRole}\n        ariaLabel={ariaLabel}\n        ariaChecked={selected}\n        onClick={onClick}\n        selected={selected}\n        tabIndex={tabIndex}\n        ariaDisable={ariaDisable}\n      />\n    </Aux>\n  );\n};\n\nexport default Option;\n","import styled from 'styled-components';\n\ntype MobileAnswerSeparatorProps = {\n  margin?: number;\n  height?: number;\n  opacity?: number;\n  color: string;\n};\n\nconst DEFAULT_PROPS = {\n  MARGIN: 32,\n  HEIGHT: 2,\n  OPACITY: 0.08\n}\n\nexport const MobileAnswerSeparator = styled.div<MobileAnswerSeparatorProps>`\n  position: relative;\n  width: 60px;\n  height: ${props => (props.height || DEFAULT_PROPS.HEIGHT) + (props.margin || DEFAULT_PROPS.MARGIN) * 2}px;\n\n  &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: ${props => props.height || DEFAULT_PROPS.HEIGHT}px;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    background-color: ${props =>\n    props.theme.colors[props.color]\n      ? props.theme.colors[props.color]\n      : props.theme.colors.ctaButtonColor};\n    opacity: ${props => (props.opacity ? props.opacity : 0.08)};\n  }\n`;\n\nexport default MobileAnswerSeparator;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Text } from 'components/common';\nimport media from 'components/mixins/media';\nimport { secondaryFont, bold } from 'components/mixins/typography';\nimport Switch from './Switch/Switch.styled';\nimport MobileAnswerSeparator from './MobileAnswerSeparator';\n\ntype AnswerTextProps = {\n  id: string;\n}\nexport const AnswerText = styled(Text) <AnswerTextProps>`\n  width: 100%;\n  line-height: 1.5;\n  padding-left: 138px;\n  white-space: pre-wrap;\n  color: ${props => props.theme.colors.textColor};\n  ${media.mobile`\n    padding-left: 0;\n  `};\n`;\n\nexport const CaptionMobileContainer = styled.div`\n  width: auto;\n  display: flex;\n  align-self: flex-start;\n  ${media.mobile`\n    display: none;\n    align-self: auto;\n  `};\n`;\n\nexport const CaptionWrapper = styled.div`\n  width: auto;\n  padding-right: 6px;\n  min-width: 119px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Caption = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  flex-shrink: 0;\n  align-items: center;\n  align-self: self-start;\n  justify-content: center;\n  width: 50px;\n  height: 24px;\n  margin-right: 7px;\n  margin-bottom: 18px;\n  padding: 2px 3px 4px;\n  background-color: ${props => transparentize(props.theme.colors.ctaButtonColor, 0.5)};\n  border-radius: 5px;\n  ${secondaryFont};\n  font-size: 12px;\n  ${bold};\n  text-align: center;\n  color: ${props => props.theme.colors.buttonTextColor};\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n  &:last-of-type {\n    margin-left: 9px;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -4px;\n    border: 4px solid transparent;\n    border-top: 4px solid ${props => transparentize(props.theme.colors.ctaButtonColor, 0.5)};\n  }\n  ${media.mobile`\n    margin-bottom: 2px;\n  `};\n`;\n\nexport const TextWrapper = styled.span`\n  width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  line-height: normal;\n`;\n\nexport const AnswersList = styled.ul`\n  width: 100%;\n`;\n\ntype CaptionContainerProps = {\n  ariaHidden: boolean;\n}\nexport const CaptionContainer = styled.li.attrs((props: CaptionContainerProps) => ({\n  'aria-hidden': props.ariaHidden\n})) <CaptionContainerProps>`\n  display: flex;\n  align-self: flex-start;\n  width: auto;\n  ${media.mobile`\n    display: none;\n    align-self: auto;\n  `};\n`;\n\ntype AnswerListItemProps = {\n  tabIndex?: number;\n  ariaLabel: string;\n  role: string;\n  key: any;\n}\nexport const AnswerListItem = styled.li.attrs((props: AnswerListItemProps) => ({\n  tabIndex: props.tabIndex || 0,\n  'aria-label': props.ariaLabel,\n  role: props.role\n})) <AnswerListItemProps>`\n  display: flex;\n  align-items: center;\n  min-height: 50px;\n  padding: 10px 0;\n  transition: background-color 0.2s linear;\n  position: relative;\n  & ${Switch} {\n    &:before {\n      opacity: 0;\n      transition: opacity 0.2s linear;\n    }\n  }\n  &:hover,\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.textColor, 0.06)};\n  }\n  &:hover ${Switch}, &:focus ${Switch} {\n    &:before {\n      opacity: 1;\n    }\n  }\n  ${MobileAnswerSeparator} {\n    display: none;\n  }\n  &:last-of-type {\n    ${MobileAnswerSeparator} {\n      display: none;\n    }\n  }\n  ${CaptionMobileContainer} {\n    display: none;\n  }\n  ${media.mobile`\n    flex-direction: column;\n    p {\n      text-align: center;\n    }\n    ${css`{\n      ${MobileAnswerSeparator} {\n        display: block;\n      }\n      ${CaptionMobileContainer} {\n        width: auto;\n        display: flex;\n        margin-bottom: 10px;\n        ${CaptionWrapper} {\n          width: auto;\n          min-width: 119px;\n          padding-right: 6px;\n          display: flex;\n          justify-content: space-between;\n  \n          ${Caption} {\n            &:first-of-type {\n              margin-right: 0;\n            }\n            &:last-of-type {\n              margin-left: calc(30% - 20px);\n              margin-right: calc(22% - 21px);\n            }\n          }\n        }\n      }\n    }`}\n  `};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { localize } from 'core/localization';\nimport { getUserAnswers } from 'store/questions/statementChoice/selectors';\nimport * as actions from 'store/questions/statementChoice/actions';\nimport Switch from './Switch/index';\nimport Option from './Option/index';\nimport MobileAnswerSeparator from './MobileAnswerSeparator';\nimport {\n  AnswersList,\n  AnswerListItem,\n  AnswerText,\n  CaptionContainer,\n  CaptionMobileContainer,\n  CaptionWrapper,\n  Caption,\n  TextWrapper\n} from './Statement.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype StatementChoiceProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n};\n\ntype StatementChoiceState = {\n  answers: Array<any>;\n  isAnswered: boolean;\n};\n\nexport class StatementChoice extends React.Component<StatementChoiceProps, StatementChoiceState> {\n  constructor(props: StatementChoiceProps) {\n    super(props);\n    this.state = {\n      answers: this.props.answers || [],\n      isAnswered: this.props.isAnswered\n    };\n  }\n\n  statementAnswerIsSelected = (answer: any, isTrue: boolean) => {\n    const { id } = this.props;\n    const { answers } = this.state;\n    answers.forEach(a => {\n      if (answer.id === a.id) {\n        answer.userSelected = true;\n        answer.isTrue = isTrue;\n      }\n    });\n    this.props.actions &&\n      this.props.actions.statementAnswerIsSelected(id, answer.id, answer.isTrue);\n    this.setState({ answers });\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(id);\n    }\n  };\n\n  componentDidUpdate(prevProps: StatementChoiceProps) {\n    if (this.props.id !== prevProps.id || this.props.answers !== prevProps.answers) {\n      this.setState({\n        answers: this.props.answers || [],\n        isAnswered: this.props.isAnswered\n      });\n    }\n  }\n\n  render() {\n    const { answers, isAnswered } = this.state;\n    const trueText = localize('[statement question true text]', 'True');\n    const falseText = localize('[statement question false text]', 'False');\n    return (\n      <AnswersList>\n        <CaptionContainer ariaHidden={true}>\n          <CaptionWrapper>\n            <Caption>\n              <TextWrapper title={trueText}>{trueText}</TextWrapper>\n            </Caption>\n            <Caption>\n              <TextWrapper title={falseText}>{falseText}</TextWrapper>\n            </Caption>\n          </CaptionWrapper>\n        </CaptionContainer>\n        {answers.map((answer: any, index: any) => (\n          <AnswerListItem\n            key={index}\n            role=\"radiogroup\"\n            ariaLabel={`answer${index}`}\n            aria-labelledby={`answer${index}`}\n          >\n            <CaptionMobileContainer>\n              <CaptionWrapper>\n                <Caption>\n                  <TextWrapper title={trueText}>{trueText}</TextWrapper>\n                </Caption>\n                <Caption>\n                  <TextWrapper title={falseText}>{falseText}</TextWrapper>\n                </Caption>\n              </CaptionWrapper>\n            </CaptionMobileContainer>\n            <Switch>\n              <Option\n                onClick={\n                  isAnswered ? undefined : () => this.statementAnswerIsSelected(answer, true)\n                }\n                ariaRole=\"radio\"\n                ariaLabel=\"true\"\n                selected={answer.isTrue && answer.userSelected}\n                tabIndex={0}\n                ariaDisable={isAnswered}\n              />\n              <Option\n                onClick={\n                  isAnswered ? undefined : () => this.statementAnswerIsSelected(answer, false)\n                }\n                ariaRole=\"radio\"\n                ariaLabel=\"false\"\n                selected={!answer.isTrue && answer.userSelected}\n                tabIndex={0}\n                ariaDisable={isAnswered}\n              />\n            </Switch>\n            <AnswerText id={`answer${index}`} appearance=\"p\">\n              {answer.text}\n            </AnswerText>\n            <MobileAnswerSeparator opacity={0.1} color=\"textColor\" />\n          </AnswerListItem>\n        ))}\n      </AnswersList>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: StatementChoiceProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatementChoice);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const openQuestionAnswerIsSelected = (\n  questionId: string,\n  answeredText: string\n): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.OPEN_QUESTION_ANSWER_IS_SELECTED,\n    payload: { questionId, answeredText }\n  });\n};\n","import styled from 'styled-components';\nimport * as typography from 'components/mixins/typography';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\n\nexport const EditableContainer = styled.div`\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  margin: auto 0;\n  box-sizing: border-box;\n  position: relative;\n  z-index: 9;\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 40px;\n    border-left: 1px solid ${props => transparentize(props.theme.colors.mainColor, 0.7)};\n    transform: translate(-50%);\n  }\n\n  textarea {\n    ${typography.secondaryFontText};\n    box-sizing: border-box;\n    padding: 0 60px 0 70px;\n    line-height: 39px;\n    ${media.mobile`\n      padding: 0 29px 0 40px\n    `};\n  }\n  ${media.mobile`\n    &:after {\n      left: 30px;\n    }\n  `};\n`;\n\nexport default EditableContainer;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/openQuestion/selectors';\nimport * as actions from 'store/questions/openQuestion/actions';\nimport { localize } from 'core/localization';\nimport EditableTextarea from 'components/common/EditableTextarea';\nimport { RootAppState } from 'store/types';\nimport { EditableContainer } from './OpenQuestion.styled';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype OpenQuestionProps = {\n  id: string;\n  type: string;\n  answers?: { [key: string]: any };\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered?: boolean;\n};\n\ntype OpenQuestionState = {\n  answers: { [key: string]: any };\n};\n\nexport class OpenQuestion extends React.PureComponent<OpenQuestionProps, OpenQuestionState> {\n  constructor(props: OpenQuestionProps) {\n    super(props);\n    this.state = {\n      answers: this.props.answers || {}\n    };\n  }\n\n  onChangeHandler(event: any) {\n    const { answers = {} } = this.props;\n    answers.answeredText = event.target.value;\n    this.setState({\n      answers\n    });\n    if (this.props.allowSubmit) {\n      this.props.actions &&\n        this.props.actions.openQuestionAnswerIsSelected(this.props.id, answers.answeredText);\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  }\n\n  onFocusOutTextArea() {\n    const { answers } = this.state;\n    this.props.actions &&\n      this.props.actions.openQuestionAnswerIsSelected(answers.id, answers.answeredText);\n  }\n\n  render() {\n    const { isAnswered = false, answers = {} } = this.props;\n    return (\n      <EditableContainer>\n        <EditableTextarea\n          placeholder={`${localize('[placeholder textarea]')}`}\n          onResize={() => {}}\n          onBlur={() => this.onFocusOutTextArea()}\n          onChange={(e: any) => this.onChangeHandler(e)}\n          defaultValue={answers.answeredText}\n          disabled={isAnswered}\n          tabIndex={0}\n        />\n      </EditableContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: OpenQuestionProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenQuestion);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const rankingAnswersAreSelected = (answers: any, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_RANKING_ANSWERS_ARE_SELECTED,\n    payload: { answers, questionId }\n  });\n};\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport shuffleAnswerOptions from 'utils/questions';\nimport { getUserAnswers, getUserResponse } from 'store/questions/rankingText/selectors';\nimport * as actions from 'store/questions/rankingText/actions';\nimport { DragDrop } from 'components/common';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\nimport { isRandomizeAnswersEnabled } from 'store/settings/selectors';\n\ntype RankingTextProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  isMultipleList?: boolean;\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  response?: Array<any>;\n  randomizeAnswersEnabled?: boolean;\n  isAnswered: boolean;\n};\n\nexport class RankingText extends React.Component<RankingTextProps, {}> {\n  moveItem(\n    items: any,\n    id: string,\n    action: any,\n    allowSubmit: boolean,\n    questionAction: any,\n    initialLoading = false\n  ) {\n    action.rankingAnswersAreSelected(items, id);\n    if (allowSubmit && !initialLoading) {\n      questionAction && questionAction.answerBeforeSubmit(id);\n    }\n  }\n\n  getElements() {\n    const { answers = [], response = [], randomizeAnswersEnabled } = this.props;\n    if (!response.length) {\n      if (randomizeAnswersEnabled) {\n        return answers;\n      }\n      return shuffleAnswerOptions(answers);\n    }\n    return response;\n  }\n\n  render() {\n    const listsOfItems = [{ id: this.props.id, items: this.getElements() }];\n    return (\n      <DragDrop\n        allowSubmit={this.props.allowSubmit}\n        moveItem={this.moveItem}\n        questionActions={this.props.questionActions}\n        actions={this.props.actions}\n        id={this.props.id}\n        isMultipleList={false}\n        listsOfItems={listsOfItems}\n        isAnswered={this.props.isAnswered}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: RankingTextProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id),\n    response: getUserResponse(state, ownProps.id),\n    randomizeAnswersEnabled: isRandomizeAnswersEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RankingText);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const scenarioBranchtrackData = (score: number, isFinished: boolean, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_SCENARIO_BRANCHTRACK_DATA,\n    payload: { score, isFinished, questionId }\n  });\n};\n","class BranchtrackProvider {\n  public static instances: { [key: string]: any };\n  private static messageProvider: string;\n  private static eventOrigin: string;\n  private static supportedMessageTypes: { [key: string]: any };\n  constructor() {\n    BranchtrackProvider.instances = {};\n    BranchtrackProvider.messageProvider = 'branchtrack';\n    BranchtrackProvider.eventOrigin = 'https://www.branchtrack.com';\n    BranchtrackProvider.supportedMessageTypes = {\n      // first time init\n      init: 'branchtrack:player:init',\n      // start of playing, t.i. before first scene appear, including on restart\n      start: 'branchtrack:player:start',\n      // new scene shown\n      scene: 'branchtrack:player:scene',\n      // user hit the choice\n      choice: 'branchtrack:player:choice',\n      // user reached last scene\n      finish: 'branchtrack:player:finish',\n      // user finished success\n      success: 'branchtrack:player:finish:success'\n    };\n  }\n\n  public createInstance(projectId: string) {\n    if (!projectId) {\n      return;\n    }\n    if (this.isEmpty(BranchtrackProvider.instances)) {\n      this.subscribeMessageEvent();\n    }\n\n    const branchtrack = new BranchtrackInstance(projectId);\n\n    BranchtrackProvider.instances[projectId] = branchtrack;\n    return branchtrack;\n  }\n\n  // TODO: need to clarify\n\n  public destroyInstance(instance: any) {\n    if (typeof BranchtrackProvider.instances[instance.projectId] !== 'undefined') {\n      delete BranchtrackProvider.instances[instance.projectId];\n    }\n\n    if (this.isEmpty(BranchtrackProvider.instances)) {\n      this.unsubscribeMessageEvent();\n    }\n  }\n\n  private subscribeMessageEvent() {\n    window.addEventListener('message', this.messageEventHadler);\n  }\n\n  private unsubscribeMessageEvent() {\n    window.removeEventListener('message', this.messageEventHadler);\n  }\n\n  private messageEventHadler(event: any) {\n    let data = null;\n\n    try {\n      if (event.origin === BranchtrackProvider.eventOrigin) {\n        data = JSON.parse(event.data);\n\n        if (data.provider !== BranchtrackProvider.messageProvider) {\n          return;\n        }\n        const messageDataType = data.type;\n        const projectId =\n          messageDataType !== BranchtrackProvider.supportedMessageTypes.success ? data.details.project.token : '';\n        const branchtrackInstance = BranchtrackProvider.instances[projectId];\n        if (typeof branchtrackInstance === 'undefined' || branchtrackInstance === null) {\n          return;\n        }\n        if (messageDataType === BranchtrackProvider.supportedMessageTypes.scene) {\n          if (typeof data.details.playlog.score === 'number' && data.details.playlog.score > 0) {\n            branchtrackInstance.score = data.details.playlog.score;\n          } else if (typeof data.details.scene.score === 'number' && data.details.scene.score > 0) {\n            branchtrackInstance.score = data.details.scene.score;\n          }\n        }\n        if (messageDataType === BranchtrackProvider.supportedMessageTypes.finish) {\n          branchtrackInstance.isFinished = true;\n        }\n      }\n    } catch (err) {\n      return false;\n    }\n  }\n\n  private isEmpty(obj: any) {\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nclass BranchtrackInstance {\n  projectId: string;\n  score: number;\n  isFinished: boolean;\n\n  constructor(projectId: string) {\n    this.projectId = projectId;\n    this.score = 0;\n    this.isFinished = false;\n  }\n}\n\nexport default new BranchtrackProvider();\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\n\nexport const ScenarioIframeSection = styled.div`\n  width: 100%;\n  & > iframe {\n    width: 100%;\n  }\n`;\nexport const ScenarioResults = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  & > p {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.6)};\n    font-size: 18px;\n    font-weight: bold;\n    margin-left: 15px;\n  }\n`;\n\nexport const IconContainer = styled.div`\n  width: 29px;\n  height: 29px;\n  border: 2px solid ${props => transparentize(props.theme.colors.textColor, 0.6)};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & > .icon {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.6)};\n    font-size: 13px;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getEmbedCode, getProjectId, getUserAnswers } from 'store/questions/scenario/selectors';\nimport * as actions from 'store/questions/scenario/actions';\nimport Text from 'components/common/Text';\nimport Icon from 'components/common/Icon';\nimport { localize } from 'core/localization';\nimport BranchtrackProvider from './BranchTrackProvider/branchtrackProviderPlugin';\nimport { ScenarioIframeSection, ScenarioResults, IconContainer } from './Scenario.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype ScenarioProps = {\n  actions?: { [key: string]: any };\n  answers?: { [key: string]: any };\n  embedCode?: any;\n  questionId?: string;\n  projectId?: string;\n  isAnsweredCorrectly?: boolean;\n  isAnswered: boolean;\n  id: string;\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  type: string;\n};\n\nexport class Scenario extends React.Component<ScenarioProps, {}> {\n  question: any;\n  instance: any;\n  refFrameScenario: any;\n  instanceId: string;\n  embedCode: any;\n  score: number;\n  branchtrack: any;\n\n  constructor(props: ScenarioProps) {\n    super(props);\n    this.question = null;\n    this.instance = null;\n    this.refFrameScenario = React.createRef();\n    this.instanceId = props.projectId || '';\n    this.embedCode = props.embedCode;\n    this.score = this.getScoreBranchtrack();\n    this.branchtrack = BranchtrackProvider;\n  }\n\n  getEmbedHtml() {\n    return { __html: this.embedCode };\n  }\n\n  resetInstace() {\n    if (this.instance) {\n      this.instance.score = 0;\n      this.instance.isFinished = false;\n    }\n  }\n\n  branchTrackEventHandler = () => {\n    const { answers = {} } = this.props;\n    if (this.instance) {\n      answers.score = this.instance.score;\n      answers.isFinished = this.instance.isFinished;\n      this.props.actions &&\n        this.props.actions.scenarioBranchtrackData(\n          answers.score,\n          answers.isFinished,\n          this.props.questionId\n        );\n    }\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  };\n\n  initBranchtrack() {\n    if (this.instanceId) {\n      this.instance = this.branchtrack.createInstance(this.instanceId);\n      this.props.answers && (this.props.answers.isFinished = this.instance.isFinished);\n    }\n  }\n\n  getScoreBranchtrack() {\n    if (this.instance) {\n      return this.instance.score;\n    }\n\n    return 0;\n  }\n\n  componentDidMount() {\n    this.initBranchtrack();\n    if (this.refFrameScenario.current) {\n      this.refFrameScenario.current.getElementsByTagName('iframe')[0].setAttribute('tabIndex', 1);\n    }\n    window.addEventListener('message', this.branchTrackEventHandler);\n  }\n\n  componentDidUpdate() {\n    if (!this.props.isAnsweredCorrectly && this.props.isAnswered) {\n      this.resetInstace();\n    }\n  }\n\n  componentWillUnmount() {\n    this.branchtrack.destroyInstance(this.instance);\n    window.removeEventListener('message', this.branchTrackEventHandler);\n  }\n\n  render() {\n    return !this.props.isAnsweredCorrectly && !this.props.isAnswered ? (\n      <ScenarioIframeSection\n        ref={this.refFrameScenario}\n        dangerouslySetInnerHTML={this.getEmbedHtml()}\n      />\n    ) : (\n      <ScenarioResults>\n        <IconContainer>\n          <Icon name=\"info\" />\n        </IconContainer>\n        <Text appearance=\"p\">{localize('[scenario submitted]')}</Text>\n      </ScenarioResults>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ScenarioProps) {\n  return {\n    embedCode: getEmbedCode(state, ownProps.id),\n    projectId: getProjectId(state, ownProps.id),\n    answers: getUserAnswers(state, ownProps.id),\n    questionId: ownProps.id\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scenario);\n","import {ActionTypes} from './types';\nimport { ThunkResult } from '../../types';\n\nexport const fillInTheBlankAnswer = (questionId: string, data: any): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.FILL_IN_THE_BLANK_ANSWER,\n    payload: { questionId, data }\n  });\n};\n","import styled from 'styled-components';\nimport * as typography from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\nexport const AnswerContentWrapper = styled.div`\n  ${typography.secondaryFontText};\n  color: ${props => props.theme.colors.textColor};\n  padding: 0;\n\n  .dropdown > div {\n    display: flex !important;\n  }\n\n  a {\n    ${typography.links}\n  }\n\n  h1 {\n    ${typography.mainFontH1};\n  }\n  h2 {\n    ${typography.mainFontH2};\n  }\n  h3 {\n    ${typography.mainFontH3};\n  }\n  h4 {\n    ${typography.mainFontH4};\n  }\n\n  mark {\n    ${typography.highlighted};\n    font-weight: inherit;\n  }\n\n  cite {\n    display: block;\n    margin: 54px 0 54px 30px;\n    padding-left: 30px;\n    border-left: 2px solid ${props => props.theme.colors.mainColor};\n    ${typography.quote};\n    ${media.mobile`\n      margin: 44px 0;\n      padding-left: 0;\n      border-left: 0;\n      text-align: center;\n      &:before{\n        content: '';\n        display: block;\n        width: 25%;\n        height: 2px;\n        margin: 0 auto 20px;\n        background-color: ${(props: any) => props.theme.colors.mainColor};\n      }\n    `};\n  }\n\n  ol {\n    list-style-position: inside;\n    list-style-type: decimal;\n  }\n\n  ul {\n    list-style-position: inside;\n    list-style-type: disc;\n  }\n\n  b {\n    font-weight: bolder;\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  u {\n    text-decoration: underline;\n  }\n\n  sub {\n    vertical-align: sub;\n    font-size: smaller;\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  sup {\n    vertical-align: super;\n    font-size: smaller;\n  }\n\n  p {\n    cite {\n      img {\n        &[align='left'],\n        &[style*='float: left'],\n        &[style*='float:left'],\n        &[align='right'],\n        &[style*='float: right'],\n        &[style*='float:right'] {\n          margin: auto 15px;\n        }\n      }\n    }\n\n    img {\n      display: block;\n      max-width: 100%;\n      height: auto !important;\n      margin: 15px auto;\n\n      &[align='left'],\n      &[style*='float: left'],\n      &[style*='float:left'],\n      &[align='right'],\n      &[style*='float: right'],\n      &[style*='float:right'] {\n        margin: 15px;\n        max-width: 60%;\n      }\n\n      ${media.xsmall`\n        &[align='left'],\n        &[align='right'],\n        &[style*='float'] {\n          margin: 15px auto;\n          max-width: 100%;\n        }\n      `}\n    }\n  }\n\n  .fib-table-wrapper {\n    display: block;\n    overflow: auto;\n    text-align: center;\n  }\n\n  table {\n    ${typography.mainFont};\n    table-layout: fixed;\n    margin: 15px auto;\n    border: none;\n    border-collapse: collapse;\n    text-align: left;\n    display: inline-table;\n    line-height: normal;\n    vertical-align: top;\n\n    &[align='center'] {\n      margin: 15px auto;\n    }\n\n    input {\n      min-width: 0;\n      max-width: 100%;\n    }\n\n    caption {\n      margin-bottom: 16px;\n      ${typography.mainFontH4};\n    }\n\n    thead {\n      tr {\n        th {\n          padding: 13px 15px 11px;\n          background-color: ${props => props.theme.colors.mainColor};\n          color: ${props => props.theme.colors.contentBodyColor};\n        }\n      }\n    }\n    tbody {\n      tr {\n        td,\n        th {\n          padding: 21px 15px 21px;\n          border-bottom: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.08)};\n          white-space: normal;\n          word-break: break-word;\n          overflow: hidden;\n        }\n\n        th {\n          background-color: ${props => props.theme.colors.mainColor};\n          color: ${props => props.theme.colors.contentBodyColor};\n        }\n      }\n    }\n  }\n`;\n\nexport const AnswerContainer = styled.div``;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/fillInTheBlank/selectors';\nimport * as actions from 'store/questions/fillInTheBlank/actions';\nimport Parser from 'html-react-parser';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport { localize } from 'core/localization';\nimport TextInput from '../../common/TextInput';\nimport DropdownInput from '../../common/DropdownInput';\nimport { AnswerContainer, AnswerContentWrapper } from './FillInTheBlank.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\nimport { FILL_IN_THE_BLANK } from 'constants/questionTypes';\n\ntype FillInTheBlankProps = {\n  id: string;\n  type: string;\n  answerGroups?: { [key: string]: any };\n  actions?: { [key: string]: any };\n  children?: any;\n  questionContent?: any;\n  state?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n};\n\ntype FillInTheBlankState = {\n  answerGroups: any;\n};\n\nexport class FillInTheBlank extends React.Component<FillInTheBlankProps, FillInTheBlankState> {\n  constructor(props: FillInTheBlankProps) {\n    super(props);\n    this.state = {\n      answerGroups: props.answerGroups\n    };\n  }\n\n  componentDidMount() {\n    const { answerGroups } = this.state;\n    this.props.actions &&\n      this.props.actions.fillInTheBlankAnswer(answerGroups.id, answerGroups.userAnswers);\n    this.wrappTables();\n    this.addTabIndexToLinks();\n  }\n\n  componentDidUpdate(prevProps: FillInTheBlankProps) {\n    if (prevProps.id !== this.props.id || prevProps.answerGroups !== this.props.answerGroups) {\n      this.setState({\n        answerGroups: this.props.answerGroups\n      });\n    }\n    this.wrappTables();\n    this.addTabIndexToLinks();\n  }\n\n  addTabIndexToLinks = () => {\n    const links: any = document.querySelectorAll('div>a');\n    for (const link of links) {\n      link.tabIndex = 0;\n    }\n  };\n\n  wrappTables = () => {\n    const el: any = document.querySelectorAll('div>table');\n    for (let i = 0; i < el.length; i++) {\n      const wrapper = document.createElement('figure');\n      el[i].parentNode.insertBefore(wrapper, el[i]);\n      wrapper.setAttribute('class', 'fib-table-wrapper');\n      wrapper.appendChild(el[i]);\n    }\n  };\n\n  onSelectChange(name: string, option: any) {\n    const { answerGroups } = this.state;\n    answerGroups.userAnswers = { ...answerGroups.userAnswers, [name]: option.value };\n    this.props.actions &&\n      this.props.actions.fillInTheBlankAnswer(answerGroups.id, answerGroups.userAnswers);\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  }\n\n  onInputFocusOut(event: any) {\n    const { answerGroups } = this.state;\n    answerGroups.userAnswers = {\n      ...answerGroups.userAnswers,\n      [event.target.name]:\n        typeof event.target.value === 'string' || event.target.value instanceof String\n          ? event.target.value.trim()\n          : event.target.value\n    };\n    this.props.actions &&\n      this.props.actions.fillInTheBlankAnswer(answerGroups.id, answerGroups.userAnswers);\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  }\n\n  render() {\n    const { answerGroups } = this.state;\n    const { isAnswered } = this.props;\n\n    const parseSelect = {\n      replace: (data: { attribs: any; children: any }) => {\n        const { attribs, children } = data;\n        if (attribs) {\n          const dataId = attribs['data-group-id'];\n          const answerValue = answerGroups.userAnswers[dataId];\n\n          if (attribs.class === 'blankSelect') {\n            return (\n              <DropdownInput\n                popoverPosition={'bottom'}\n                key={dataId}\n                name={dataId}\n                onChange={(event: any) => this.onSelectChange(dataId, event)}\n                value={answerValue}\n                placeholder={`${localize('[placeholder dropdown]')}`}\n                answeredPlaceholder={`${localize('[label your choice is]')}`}\n                data={domToReact(children, parseSelect).map((option: any) => ({\n                  value: option.props.value || ''\n                }))}\n                disabled={isAnswered}\n                questionType={FILL_IN_THE_BLANK}\n              >\n                {domToReact(children, parseSelect)}\n              </DropdownInput>\n            );\n          }\n          if (attribs.class === 'blankInput') {\n            return (\n              <TextInput\n                tabIndex={0}\n                key={dataId}\n                placeholder={`${localize('[placeholder text input]')}`}\n                name={dataId}\n                onBlur={(event: any) => this.onInputFocusOut(event)}\n                value={answerValue}\n                disabled={isAnswered}\n              />\n            );\n          }\n        }\n\n        return false;\n      }\n    };\n\n    if (!answerGroups.questionContent) {\n      answerGroups.questionContent = {\n        value: ''\n      };\n    }\n\n    if (!answerGroups.questionContent.value) {\n      answerGroups.questionContent.value = '';\n    }\n\n    return (\n      <AnswerContainer>\n        <AnswerContentWrapper>\n          {Parser(answerGroups.questionContent.value, parseSelect) || null}\n        </AnswerContentWrapper>\n      </AnswerContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: FillInTheBlankProps) {\n  return {\n    answerGroups: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FillInTheBlank);\n","import { IMAGE_DEFAULT_DOMAIN } from 'constants/common';\nimport { getImageNameByUrl } from 'utils/image';\nimport requester from './requester';\n\nconst getImage = async (relativeUrl: any) =>\n  requester.get(`${relativeUrl}`, { mode: 'no-cors', noCache: true });\n\nconst getImageCheckUrl = (imageUrl: any) => {\n  const imageName = getImageNameByUrl(imageUrl);\n  const imageFolderUrl = imageUrl.substring(0, imageUrl.indexOf('image/') + 6);\n\n  return imageFolderUrl.indexOf(IMAGE_DEFAULT_DOMAIN) !== -1\n    ? `${imageFolderUrl}exist/${imageName}`\n    : imageUrl;\n};\n\nexport default {\n  async isImageExists(imageUrl: any) {\n    const requestUrl = getImageCheckUrl(imageUrl);\n    const response = await getImage(requestUrl);\n    if (response.status === 404) {\n      return false;\n    }\n    return true;\n  }\n};\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const dragAndDropAnswersAreSelected = (\n  answers: any,\n  questionId: string\n): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_DRAG_AND_DROP_ANSWERS_ARE_SELECTED,\n    payload: { answers, questionId }\n  });\n};\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\ntype DragDropMobileWrapperProps = {\n  isImageLoaded: boolean;\n  isImageNotFound: boolean;\n}\nexport const DragDropMobileWrapper = styled.div<DragDropMobileWrapperProps>`\n  height: ${props => (props.isImageLoaded ? 'auto' : '182px')};\n  background: ${props =>\n    props.isImageNotFound || !props.isImageLoaded\n      ? transparentize(props.theme.colors.textColor, 0.02)\n      : 'transparent'};\n  padding: ${props => (props.isImageNotFound ? '16px 0' : '0')};\n\n  img {\n    display: block;\n    opacity: ${props => (props.isImageLoaded ? '1' : '0')};\n    max-width: 100%;\n    margin: ${props => (props.isImageNotFound ? '0 auto' : '0')};\n  }\n\n  ${media.xlarge`\n    overflow-x: auto;\n    -webkit-overflow-scrolling: auto;\n    position: relative;\n    display: block;\n    width: 100%;\n\n    img {\n      max-width: none;\n    }\n  `};\n`;\n\ntype DragDropMobileProps = {\n  position: any;\n  isImageLoaded: boolean;\n}\nexport const DragDropMobile = styled.div<DragDropMobileProps>`\n  ${props =>\n    props.position\n      ? css`\n          position: absolute;\n          top: ${props.position.y}px;\n          left: ${props.position.x}px;\n          transition: 0.3s;\n          transform: ${!props.isImageLoaded ? 'scale(0)' : ''};\n          opacity: ${!props.isImageLoaded ? '0.8' : '1'};\n        `\n      : css``};\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { NO_SELECTED_ID } from 'constants/common';\nimport DropdownInput from 'components/common/DropdownInput';\nimport CircleLoader from 'components/common/CircleLoader';\nimport { DragDropMobileWrapper, DragDropMobile } from './DragAndDropText.styles';\n\ntype DragAndDropMobileProps = {\n  id: string;\n  background?: any;\n  moveItem(arg1: any, arg2: any, arg3: any, arg4: boolean, arg5: any): void;\n  listsOfItems: any[];\n  dropspots?: any[];\n  response?: any[];\n  actions?: { [key: string]: any };\n  setPositionDependingImageScale?(): void;\n  handleImageLoaded(options1: any, options2: any): void;\n  allowSubmit: boolean;\n  questionActions?: { [key: string]: any };\n  isImageLoaded: boolean;\n  isImageNotFound: boolean;\n  retries?: number;\n  isAnswered: boolean;\n};\n\ntype DragAndDropMobileState = {\n  listsOfItems: any[];\n  retries: number;\n  isAnswered: boolean;\n};\n\nexport class DragAndDropMobile extends React.Component<\n  DragAndDropMobileProps,\n  DragAndDropMobileState\n> {\n  imageRefs: any;\n  constructor(props: DragAndDropMobileProps) {\n    super(props);\n    this.imageRefs = React.createRef();\n    this.state = {\n      listsOfItems: props.listsOfItems,\n      retries: props.retries || 0,\n      isAnswered: props.isAnswered || false\n    };\n  }\n\n  static getDerivedStateFromProps(\n    nextProps: DragAndDropMobileProps,\n    prevState: DragAndDropMobileState\n  ) {\n    if (nextProps.retries !== prevState.retries) {\n      return {\n        retries: nextProps.retries,\n        listsOfItems: nextProps.listsOfItems\n      };\n    }\n    if (nextProps.isAnswered !== prevState.isAnswered) {\n      return {\n        isAnswered: nextProps.isAnswered,\n        listsOfItems: nextProps.listsOfItems\n      };\n    }\n    return null;\n  }\n\n  onSelectElement = (value: any, element: any, listsOfItems: any) => {\n    let droppableElement: any = [];\n    let destination: any = [];\n    if (element.current) {\n      return;\n    }\n    listsOfItems.forEach((list: any, index: any) => {\n      if (list.id === value) {\n        destination = index;\n      }\n    });\n\n    if (element.selected === undefined) {\n      if (listsOfItems[destination].items.length) {\n        listsOfItems[0].items.push(listsOfItems[destination].items[0]);\n      }\n      listsOfItems[0].items.forEach((item: any, index: any) => {\n        if (item.id === element.id) {\n          droppableElement = listsOfItems[0].items.splice(index, 1);\n        }\n      });\n    } else {\n      listsOfItems.forEach((item: any, index: any) => {\n        if (item.id === value && item.items.length) {\n          listsOfItems[0].items.push(listsOfItems[index].items[0]);\n        }\n        if (item.selectedDropSpotId === element.id) {\n          droppableElement = listsOfItems[index].items.splice(0, 1);\n        }\n      });\n      if (element.selected === '') {\n        listsOfItems[0].items.forEach((item: any, index: any) => {\n          if (item.id === element.id) {\n            droppableElement = listsOfItems[0].items.splice(index, 1);\n          }\n        });\n      }\n    }\n\n    listsOfItems[destination].items = droppableElement;\n    this.setState({ listsOfItems });\n    this.props.moveItem(\n      this.state.listsOfItems,\n      this.props.id,\n      this.props.actions,\n      this.props.allowSubmit,\n      this.props.questionActions\n    );\n  };\n\n  render() {\n    const { dropspots = [], background = '', isImageLoaded, isImageNotFound } = this.props;\n    const { listsOfItems } = this.state;\n    const originalDropspots = dropspots.map(dropspot => ({\n      id: dropspot.id,\n      text: dropspot.text,\n      x: dropspot.x,\n      y: dropspot.y,\n      selectedDropSpotId: ''\n    }));\n    const listsOfItemsMobile = Array.from(listsOfItems);\n    listsOfItemsMobile.forEach(element => {\n      if (element.items.length && element.id !== NO_SELECTED_ID) {\n        originalDropspots.forEach(item => {\n          if (item.text === element.items[0].text && item.id === element.items[0].id) {\n            item.selectedDropSpotId = item.id;\n          }\n        });\n        element.selected = element.items[0].text;\n        element.selectedDropSpotId = element.items[0].id;\n        element.isDropDisabled = true;\n      } else {\n        element.selected = '';\n        element.selectedDropSpotId = '';\n        element.isDropDisabled = false;\n      }\n    });\n\n    return (\n      <DragDropMobileWrapper isImageLoaded={isImageLoaded} isImageNotFound={isImageNotFound}>\n        {!isImageNotFound &&\n          listsOfItemsMobile.map(\n            item =>\n              item.id !== NO_SELECTED_ID && (\n                <DragDropMobile\n                  key={item.id}\n                  position={item.position}\n                  isImageLoaded={isImageLoaded}\n                >\n                  <DropdownInput\n                    popoverPosition={'right'}\n                    isMatching\n                    key={item.id}\n                    name={item.id}\n                    onChange={(event: any) => this.onSelectElement(item.id, event, listsOfItems)}\n                    value={''}\n                    placeholder={''}\n                    answeredPlaceholder={''}\n                    matchingAnswer={item.selected}\n                    data={originalDropspots.map(\n                      option =>\n                        option.id !== NO_SELECTED_ID && {\n                          value: option.text,\n                          id: option.id,\n                          selected: option.selectedDropSpotId,\n                          current: item.selected.length\n                            ? item.selectedDropSpotId === option.selectedDropSpotId\n                            : false\n                        }\n                    )}\n                  />\n                </DragDropMobile>\n              )\n          )}\n        {background && !isImageLoaded && <CircleLoader />}\n        <img\n          src={background}\n          ref={this.imageRefs}\n          onLoad={() =>\n            this.props.handleImageLoaded(this.imageRefs.current, this.state.listsOfItems)\n          }\n          alt={localize('[drag and drop question image]')}\n        />\n      </DragDropMobileWrapper>\n    );\n  }\n}\n\nexport default DragAndDropMobile;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isTouchScreenDevice } from 'utils/window';\nimport imageLoader from 'core/http/imageLoader';\nimport { isAnswersFromPreviousAttemptEnabled } from 'store/settings/selectors';\nimport * as dragAndDropActions from 'store/questions/dragAndDropText/actions';\nimport DragDrop from 'components/common/DragDrop';\nimport { NO_SELECTED_ID } from 'constants/common';\nimport {\n  getUserAnswers,\n  getBackground,\n  getUserResponse\n} from 'store/questions/dragAndDropText/selectors';\nimport { getQuestionRetries } from 'store/questions/selectors';\nimport { RootAppState } from 'store/types';\nimport DragAndDropMobile from './DragAndDropMobile';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype DragAndDropTextProps = {\n  id: string;\n  background?: string;\n  isMultipleList?: boolean;\n  dropspots?: any[];\n  response?: any[];\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  type: string;\n  shouldShowPreviousAnswers?: boolean;\n  retries?: number;\n  isAnswered: boolean;\n};\n\ntype DragAndDropTextState = {\n  isImageLoaded: boolean;\n  isImageNotFound: boolean;\n  listsOfItems: any[];\n};\n\nexport class DragAndDropText extends React.Component<DragAndDropTextProps, DragAndDropTextState> {\n  constructor(props: DragAndDropTextProps) {\n    super(props);\n    this.state = {\n      isImageLoaded: false,\n      isImageNotFound: false,\n      listsOfItems: []\n    };\n  }\n\n  getPositionDependingImageScale = (image: any, originalListPosition: any, listsOfItems: any) => {\n    const scale = image.width / image.naturalWidth;\n    listsOfItems.forEach((list: any, index: any) => {\n      if (list.position) {\n        if (isTouchScreenDevice()) {\n          listsOfItems[index].position.y = Math.round(originalListPosition[list.id].y * scale);\n          listsOfItems[index].position.x = Math.round(originalListPosition[list.id].x * scale);\n        } else {\n          listsOfItems[index].position.y = Math.round(\n            ((originalListPosition[list.id].y * scale) / image.height) * 100\n          );\n          listsOfItems[index].position.x = Math.round(\n            ((originalListPosition[list.id].x * scale) / image.width) * 100\n          );\n        }\n      }\n    });\n    return listsOfItems;\n  };\n\n  setPositionDependingImageScale = (\n    image?: any,\n    originalListPosition?: any,\n    listsOfItems?: any\n  ) => {\n    if (image !== null && image !== undefined) {\n      this.setState({\n        listsOfItems: this.getPositionDependingImageScale(image, originalListPosition, listsOfItems)\n      });\n    }\n  };\n\n  async changeImageState(imageUrl: any) {\n    const isImageExists = await imageLoader.isImageExists(imageUrl);\n    let imageNotFound = false;\n    if (!isImageExists) imageNotFound = true;\n    this.setState({\n      isImageNotFound: imageNotFound,\n      isImageLoaded: true\n    });\n  }\n\n  handleImageLoaded = (img: any, listsOfItems: any) => {\n    const { dropspots = [] } = this.props;\n    const originalListPosition: any[] = [];\n    dropspots.forEach(item => {\n      originalListPosition[item.id] = { y: item.y, x: item.x };\n    });\n    this.setPositionDependingImageScale(img, originalListPosition, listsOfItems);\n    window.addEventListener('resize', () =>\n      this.setPositionDependingImageScale(img, originalListPosition, listsOfItems)\n    );\n    this.changeImageState(this.props.background);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.setPositionDependingImageScale());\n  }\n\n  moveItem(\n    items: any,\n    id: string,\n    action: any,\n    allowSubmit: boolean,\n    questionAction: any,\n    initialLoading = false\n  ) {\n    action.dragAndDropAnswersAreSelected(items, id);\n    if (allowSubmit && !initialLoading) {\n      questionAction && questionAction.answerBeforeSubmit(id);\n    }\n  }\n\n  render() {\n    const {\n      background,\n      dropspots = [],\n      response = [],\n      id,\n      actions,\n      shouldShowPreviousAnswers,\n      isAnswered,\n      retries = 0\n    } = this.props;\n    const { isImageLoaded, isImageNotFound } = this.state;\n    let listsOfItems = [\n      {\n        id: NO_SELECTED_ID,\n        items: dropspots,\n        isDropDisabled: false\n      }\n    ];\n    if (response.length) {\n      listsOfItems = response;\n    } else {\n      dropspots.forEach(element => {\n        const list = {\n          id: element.id,\n          items: [],\n          position: { y: element.y, x: element.x },\n          isDropDisabled: false\n        };\n        listsOfItems.push(list);\n      });\n    }\n\n    const props = {\n      moveItem: this.moveItem,\n      allowSubmit: this.props.allowSubmit,\n      questionActions: this.props.questionActions,\n      actions,\n      background,\n      id,\n      listsOfItems: cloneDeep(listsOfItems),\n      setPositionDependingImageScale: this.setPositionDependingImageScale,\n      getPositionDependingImageScale: this.getPositionDependingImageScale,\n      handleImageLoaded: this.handleImageLoaded,\n      isImageLoaded,\n      isImageNotFound,\n      isAnswered,\n      ...(!shouldShowPreviousAnswers && { retries })\n    };\n    return (\n      <div>\n        {!isTouchScreenDevice() ? (\n          <DragDrop {...props} dropspots={dropspots} isMultipleList={true} />\n        ) : (\n          <DragAndDropMobile {...props} dropspots={dropspots} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: DragAndDropTextProps) {\n  return {\n    dropspots: getUserAnswers(state, ownProps.id),\n    background: getBackground(state, ownProps.id),\n    response: getUserResponse(state, ownProps.id),\n    shouldShowPreviousAnswers: isAnswersFromPreviousAttemptEnabled(state),\n    retries: getQuestionRetries(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(dragAndDropActions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDropText);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const matchingAnswersAreSelected = (answers: any, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_MATCHING_ANSWERS_ARE_SELECTED,\n    payload: { answers, questionId }\n  });\n};\n","import styled from 'styled-components';\nimport * as typography from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\nexport const TextMatchingItem = styled.div.attrs({\n  'data-test': 'text-matching-item'\n})`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  margin-bottom: 10px;\n  ${typography.secondaryFontText};\n  color: ${props => props.theme.colors.textColor};\n\n  ${media.small`\n    margin-bottom: 48px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  `};\n`;\n\nexport const TextMatchingItemKey = styled.div`\n  width: calc(50% - 50px);\n  padding: 3px 15px 5px;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.06)};\n\n  ${media.small`\n    width: calc(100% - 44px);\n    margin-bottom: 8px;\n  `};\n`;\n\ntype TextMatchingItemSelectedProps = {\n  shownSelectedValue: any;\n}\n\nexport const TextMatchingItemSelected = styled.div.attrs(props => ({\n  'data-test': 'item-selected'\n})) <TextMatchingItemSelectedProps>`\n  width: calc(50% - 50px);\n  z-index: 1;\n  background: ${props =>\n    props.shownSelectedValue\n      ? transparentize(props.theme.colors.textColor, 0.06)\n      : transparentize(props.theme.colors.textColor, 0.02)};\n\n  ${media.small`\n    width: calc(100% - 44px);\n    margin-bottom: 8px;\n  `};\n`;\n\nexport const DropdownInputWrapper = styled.div.attrs({\n  'data-test': 'dropdown-input-wrapper'\n})`\n  width: 100px;\n  display: flex;\n  justify-content: center;\n\n  ${media.small`\n    width: 44px;\n  `};\n`;\n\nexport const DropdownInputContainer = styled.div`\n  .dropdown-button {\n    width: 40px;\n    height: 40px;\n    min-height: 40px;\n\n    ${media.small`\n      width: 32px;\n      height: 32px;\n      min-height: 32px;\n    `};\n  }\n\n  .chosen-value {\n    display: none;\n  }\n\n  .downshift-dropdown {\n    max-width: 325px;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers, getUserResponse } from 'store/questions/textMatching/selectors';\nimport * as actions from 'store/questions/textMatching/actions';\nimport shuffle from 'lodash.shuffle';\nimport cloneDeep from 'lodash.clonedeep';\nimport { localize } from 'core/localization';\nimport { DropdownInput } from '../../common';\nimport {\n  TextMatchingItem,\n  TextMatchingItemKey,\n  TextMatchingItemSelected,\n  DropdownInputWrapper,\n  DropdownInputContainer\n} from './TextMatching.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\nimport { isAnswersFromPreviousAttemptEnabled } from 'store/settings/selectors';\n\ntype TextMatchingProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  response?: Array<any>;\n  isAnswered: boolean;\n  shouldShowPreviousAnswers?: boolean;\n};\n\ntype TextMatchingState = {\n  answers: Array<any>;\n  shuffleAnswersKey: Array<any>;\n  isAnswered: boolean;\n};\n\nexport class TextMatching extends React.Component<TextMatchingProps, TextMatchingState> {\n  constructor(props: TextMatchingProps) {\n    super(props);\n    const { response = [], answers = [], isAnswered = false } = props;\n    this.state = {\n      answers: cloneDeep(response.length ? this.getOptionsWithAnswerKeys() : answers),\n      shuffleAnswersKey: shuffle(response.length ? response : answers),\n      isAnswered\n    };\n\n  }\n\n  static getDerivedStateFromProps(nextProps: TextMatchingProps, prevState: TextMatchingState) {\n    const { shouldShowPreviousAnswers } = nextProps;\n    if (nextProps.isAnswered !== prevState.isAnswered) {\n      if (!shouldShowPreviousAnswers) {\n        return {\n          isAnswered: nextProps.isAnswered,\n          answers: nextProps.answers,\n          shuffleAnswersKey: nextProps.answers\n        };\n      }\n      return {\n        isAnswered: nextProps.isAnswered\n      };\n    }\n    return null;\n  }\n\n  getResponseOptionById = (id: string) => {\n    const { response = [] } = this.props;\n    return response.find(option => option.id === id);\n  };\n\n  getOptionsWithAnswerKeys = () => {\n    const { answers = [] } = this.props;\n    return answers.map(answer => ({\n      ...answer,\n      ...{ selectedKey: this.getResponseOptionById(answer.id)?.selectedKey || '' },\n      ...{ shownSelectedValue: this.getResponseOptionById(answer.id)?.shownSelectedValue || '' }\n    }));\n  };\n\n  markItemInList = (list: any, selectedKey: any, option: any) => {\n    let newList: Array<any> = Array.from(list);\n    newList.forEach((item: any, index: any) => {\n      if (item.selectedKey === selectedKey) {\n        newList[index].selectedKey = '';\n      }\n\n      if (item.id === option.id) {\n        newList[index].selectedKey = selectedKey;\n      }\n\n      if (item.shownSelectedId === option.id) {\n        newList[index].shownSelectedValue = '';\n        newList[index].shownSelectedId = '';\n      }\n\n      if (item.key === selectedKey) {\n        newList[index].shownSelectedValue = option.value;\n        newList[index].shownSelectedId = option.id;\n      }\n    });\n    return newList;\n  };\n\n  onSelectMatching(selectedKey: any, option: any) {\n    const { answers, shuffleAnswersKey } = this.state;\n    const { id } = this.props;\n    if (option) {\n      this.setState({\n        answers: this.markItemInList(answers, selectedKey, option),\n        shuffleAnswersKey: this.markItemInList(shuffleAnswersKey, selectedKey, option)\n      });\n      this.props.actions && this.props.actions.matchingAnswersAreSelected(answers, id);\n\n      if (this.props.allowSubmit) {\n        this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n      }\n      const activeElem = document.activeElement as HTMLElement;\n      if (activeElem) {\n        activeElem.blur();\n      }\n    }\n  }\n\n  isAnyValueSelected() {\n    const { answers } = this.state;\n    return answers\n      .map(answer => answer && answer.selectedKey && answer.selectedKey.length)\n      .some(value => value);\n  }\n\n  componentDidUpdate(previousProps: TextMatchingProps, previousState: TextMatchingState) {\n    if (previousState.isAnswered !== this.state.isAnswered && this.props.response?.length) {\n      this.setState({\n        answers: cloneDeep(this.getOptionsWithAnswerKeys()),\n        shuffleAnswersKey: shuffle(this.props.response)\n      });\n    }\n  }\n\n  renderDropdownInput(data: any) {\n    const {\n      index,\n      item,\n      inputData,\n      position = 'right',\n      placeholder,\n      buttonAnimation = '',\n      isMatchingOption = false\n    } = data;\n    return (\n      <DropdownInput\n        popoverPosition={position}\n        isMatching\n        isMatchingOption={isMatchingOption}\n        key={item.id + index}\n        name={item.id + index}\n        onChange={(event: any) => this.onSelectMatching(item.key, event)}\n        value={''}\n        placeholder={placeholder}\n        answeredPlaceholder={`${localize('[label your choice is]')}`}\n        matchingAnswer={item.shownSelectedValue}\n        data={inputData}\n        disabled={false}\n        buttonAnimation={buttonAnimation}\n      >\n        {' '}\n      </DropdownInput>\n    );\n  }\n\n  render() {\n    const { answers, shuffleAnswersKey } = this.state;\n    return (\n      <div data-test=\"text-matching\">\n        {answers.map((item, index) => {\n          const mapAnswersToOptions = () =>\n            shuffleAnswersKey.map(option => ({\n              value: option.value || '',\n              selected: option.selectedKey,\n              current: option.selectedKey === item.key,\n              id: option.id\n            }));\n\n          const buttonAnimation = index === 0 && !this.isAnyValueSelected() ? 'pulse' : '';\n          const placeholders = {\n            plus: `${localize('[placeholder dropdown for]')} ${item.key}`,\n            matchingOption: `${localize('[click on the plus to define the match]')}`\n          };\n\n          return (\n            <TextMatchingItem key={item.id}>\n              <TextMatchingItemKey>{item.key}</TextMatchingItemKey>\n              <DropdownInputWrapper>\n                <DropdownInputContainer>\n                  {this.renderDropdownInput({\n                    index,\n                    item,\n                    inputData: mapAnswersToOptions(),\n                    placeholder: placeholders.plus,\n                    buttonAnimation\n                  })}\n                </DropdownInputContainer>\n              </DropdownInputWrapper>\n              <TextMatchingItemSelected shownSelectedValue={item.shownSelectedValue}>\n                {this.renderDropdownInput({\n                  index,\n                  item,\n                  inputData: mapAnswersToOptions(),\n                  position: 'bottom',\n                  placeholder: placeholders.matchingOption,\n                  isMatchingOption: true\n                })}\n              </TextMatchingItemSelected>\n            </TextMatchingItem>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: TextMatchingProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id),\n    response: getUserResponse(state, ownProps.id),\n    shouldShowPreviousAnswers: isAnswersFromPreviousAttemptEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextMatching);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const hotspotQuestionAnswer = (data: any, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.HOTSPOT_QUESTION_ANSWER,\n    payload: { data, questionId }\n  });\n};\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport Icon from 'components/common/Icon';\nimport { defaultBoxShadowColor } from 'constants/common';\n\nexport const Wrapper = styled.div.attrs({\n  'data-test': 'hotspot-on-image-wrapper'\n})`\n  width: 100%;\n  max-width: 100%;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  padding: 0;\n`;\n\ntype ImageSpotsWrapper = {\n  isImageNotFound: boolean;\n  isImageLoading: boolean;\n}\nexport const ImageSpotsWrapper = styled.div<ImageSpotsWrapper>`\n  position: relative;\n  width: 100%;\n  max-width: 100%;\n  display: inline-block;\n  vertical-align: bottom;\n  pointer-events: ${props => (props.isImageNotFound ? 'none' : 'auto')};\n\n  height: ${props => (props.isImageLoading ? '182px' : 'auto')};\n  overflow: ${props => (props.isImageLoading ? 'hidden' : 'auto')};\n  background: ${props =>\n    props.isImageNotFound || props.isImageLoading\n      ? transparentize(props.theme.colors.textColor, 0.02)\n      : 'transparent'};\n  padding: ${props => (props.isImageNotFound ? '16px 0' : '0')};\n`;\n\ntype ImageProps = {\n  isImageNotFound: boolean;\n  src: string;\n  alt: string;\n  tabIndex: number;\n  role: string;\n  onLoad: any;\n  onClick: any;\n  style: any;\n}\nexport const Image = styled.img.attrs(props => ({\n  'data-test': 'hotspot-image'\n})) <ImageProps>`\n  display: block;\n  outline: none;\n  margin: ${props => (props.isImageNotFound ? '0 auto' : '0')};\n`;\n\nexport const CloseIcon = styled(Icon)`\n  position: absolute;\n  top: -10px;\n  right: -8px;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  opacity: 0;\n  cursor: pointer;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.6)};\n  background-color: ${props => transparentize(props.theme.colors.contentBodyColor, 0.9)};\n  box-shadow: 0 1px 3px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n\n  &:before {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const Spot = styled.div`\n  position: relative;\n  width: 30px;\n  height: 30px;\n  display: block;\n  cursor: pointer;\n  animation: pulse 1.5s infinite;\n  background-color: ${props => transparentize(props.theme.colors.contentBodyColor, 0.1)};\n  box-shadow: 0 2px 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n  border-radius: 50%;\n  outline: none;\n  overflow: hidden;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    width: 50%;\n    right: 0px;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      ${props => props.theme.colors.mainColor} 0%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 100%\n    );\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    width: 50%;\n    left: 0px;\n    bottom: 0;\n    background: linear-gradient(\n      to top,\n      ${props => props.theme.colors.mainColor} 0%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 100%\n    );\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 ${props => transparentize(props.theme.colors.contentBodyColor, 0.5)};\n    }\n    50% {\n      box-shadow: 0 0 0 6px ${props => transparentize(props.theme.colors.contentBodyColor, 0.3)};\n    }\n    100% {\n      box-shadow: 0 0 0 8px ${props => transparentize(props.theme.colors.contentBodyColor, 0.05)};\n    }\n  }\n`;\n\ntype SpotWrapperProps = {\n  top: number;\n  left: number;\n}\n\nexport const SpotWrapper = styled.div.attrs(props => ({\n  'data-test': 'spot-wrapper'\n})) <SpotWrapperProps>`\n  display: block;\n  position: absolute;\n  top: ${props => props.top}px;\n  left: ${props => props.left}px;\n  transform: translate(-50%, -50%);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    ${Spot} {\n      animation: none;\n    }\n\n    ${CloseIcon} {\n      opacity: 1;\n\n      &:hover {\n        color: ${props => transparentize(props.theme.colors.textColor, 0.9)};\n        background-color: ${props => props.theme.colors.contentBodyColor};\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/hotspot/selectors';\nimport * as actions from 'store/questions/hotspot/actions';\nimport CircleLoader from 'components/common/CircleLoader';\nimport imageLoader from 'core/http/imageLoader';\nimport { localize } from 'core/localization';\nimport { Wrapper, Image, ImageSpotsWrapper, Spot, SpotWrapper, CloseIcon } from './Hotspot.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype HotspotProps = {\n  id: string;\n  type: string;\n  answers?: { [key: string]: any };\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered?: boolean;\n};\n\ntype HotspotState = {\n  answers: { [key: string]: any };\n  isImageLoading: boolean;\n  markers: any;\n  isImageNotFound: boolean;\n};\n\nexport class Hotspot extends PureComponent<HotspotProps, HotspotState> {\n  constructor(props: HotspotProps) {\n    super(props);\n    const { answers = [] } = props;\n    this.state = {\n      answers,\n      isImageLoading: true,\n      markers: answers.markers,\n      isImageNotFound: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: HotspotProps, prevState: HotspotProps) {\n    if (\n      prevState.answers !== nextProps.answers &&\n      nextProps.answers &&\n      !nextProps.answers.markers.length\n    ) {\n      return {\n        answers: nextProps.answers,\n        markers: []\n      };\n    }\n    if (\n      prevState.answers !== nextProps.answers &&\n      nextProps.answers &&\n      nextProps.answers.markers.length\n    ) {\n      return {\n        answers: nextProps.answers,\n        markers: [...nextProps.answers.markers]\n      };\n    }\n    return null;\n  }\n\n  getCoordinates = (event: any) => {\n    if (event.target.tagName !== 'IMG') {\n      return;\n    }\n    const rect = event.target.getBoundingClientRect();\n    const x = Math.round(event.clientX - rect.left);\n    const y = Math.round(event.clientY - rect.top);\n    const { id } = this.state.answers;\n    this.setState({\n      markers: this.addMarker({ x, y })\n    });\n    this.props.actions && this.props.actions.hotspotQuestionAnswer(this.addMarker({ x, y }), id);\n\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  };\n\n  addMarker = (marker: any) => {\n    const { markers } = this.state;\n    const { isMultiple } = this.state.answers;\n    let newMarkers = Array.from(markers);\n    if (!isMultiple) {\n      newMarkers = [marker];\n    } else {\n      newMarkers.push(marker);\n    }\n    return newMarkers;\n  };\n\n  removeMarker = (index: any) => {\n    const { id } = this.props;\n    const { markers } = this.state;\n    const newMarkers = Array.from(markers);\n    newMarkers.splice(index, 1);\n    this.setState({\n      markers: newMarkers\n    });\n    this.props.actions && this.props.actions.hotspotQuestionAnswer(newMarkers, id);\n\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  };\n\n  async changeImageState(imageUrl: any) {\n    const isImageExists = await imageLoader.isImageExists(imageUrl);\n    let imageNotFound = false;\n    if (!isImageExists) {\n      imageNotFound = true;\n    }\n    this.setState({\n      isImageNotFound: imageNotFound,\n      isImageLoading: false\n    });\n  }\n\n  render() {\n    const { background } = this.state.answers;\n    const { isImageLoading, markers, isImageNotFound } = this.state;\n    return (\n      <Wrapper>\n        {background ? (\n          <ImageSpotsWrapper isImageLoading={isImageLoading} isImageNotFound={isImageNotFound}>\n            {isImageLoading && <CircleLoader />}\n            <Image\n              isImageNotFound={isImageNotFound}\n              src={background}\n              alt={localize('[hotspot content image alt]')}\n              tabIndex={0}\n              role=\"img\"\n              onLoad={() => this.changeImageState(background)}\n              onClick={!isImageNotFound ? this.getCoordinates : null}\n              style={isImageLoading ? { opacity: '0' } : null}\n            />\n\n            {markers.map((marker: any, index: any) => (\n              <SpotWrapper\n                key={index}\n                tabIndex={0}\n                role=\"banner\"\n                top={marker.y}\n                left={marker.x}\n                onClick={() => this.removeMarker(index)}\n              >\n                <Spot />\n                <CloseIcon size={4} name=\"close-popup\" />\n              </SpotWrapper>\n            ))}\n          </ImageSpotsWrapper>\n        ) : null}\n      </Wrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: HotspotProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hotspot);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  SINGLE_CHOICE,\n  MULTIPLE_CHOICE,\n  SINGLE_CHOICE_IMAGE,\n  STATEMENT_CHOICE,\n  OPEN_QUESTION,\n  RANKING_TEXT,\n  SCENARIO,\n  FILL_IN_THE_BLANK,\n  DRAG_AND_DROP_TEXT,\n  TEXT_MATCHING,\n  HOTSPOT\n} from 'constants/questionTypes';\nimport { isRandomizedOptionsLoaded } from 'store/course/selectors';\nimport { isRandomizeAnswersEnabled } from 'store/settings/selectors';\nimport { RootAppState } from 'store/types';\nimport MultipleChoice from './MultipleChoice';\nimport SingleChoiceImage from './SingleChoiceImage';\nimport { QuestionContainer, QuestionContainerOverlay } from './Question.styled';\nimport StatementChoice from './Statement';\nimport OpenQuestion from './OpenQuestion';\nimport RankingText from './RankingText';\nimport Scenario from './Scenario';\nimport FillInTheBlank from './FillInTheBlank';\nimport DragAndDropText from './DragAndDropText';\nimport TextMatching from './TextMatching';\nimport Hotspot from './Hotspot';\n\ntype QuestionProps = {\n  id: string;\n  type: string;\n  isAnswered: boolean;\n  allowSubmit?: boolean;\n  bodyBackground: { [key: string]: any };\n  hasRandomizedOptionsLoaded?: boolean;\n  randomizeAnswersEnabled?: boolean;\n};\n\nexport class Question extends React.PureComponent<QuestionProps, {}> {\n  render() {\n    const {\n      id,\n      type,\n      isAnswered,\n      bodyBackground,\n      allowSubmit = false,\n      randomizeAnswersEnabled,\n      hasRandomizedOptionsLoaded\n    } = this.props;\n    return (\n      <QuestionContainer>\n        {randomizeAnswersEnabled &&\n          hasRandomizedOptionsLoaded &&\n          renderQuestion(id, type, isAnswered, allowSubmit)}\n        {!randomizeAnswersEnabled && renderQuestion(id, type, isAnswered, allowSubmit)}\n        <QuestionContainerOverlay isShown={isAnswered} bodyBackground={bodyBackground} />\n      </QuestionContainer>\n    );\n  }\n}\n\nfunction renderQuestion(id: string, type: string, isAnswered: boolean, allowSubmit: boolean) {\n  switch (type) {\n    case SINGLE_CHOICE:\n      return (\n        <MultipleChoice\n          id={id}\n          allowSubmit={allowSubmit}\n          type={type}\n          isSingleAnswer\n          isAnswered={isAnswered}\n        />\n      );\n    case SINGLE_CHOICE_IMAGE:\n      return (\n        <SingleChoiceImage id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case MULTIPLE_CHOICE:\n      return (\n        <MultipleChoice id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case STATEMENT_CHOICE:\n      return (\n        <StatementChoice id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case OPEN_QUESTION:\n      return <OpenQuestion id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case RANKING_TEXT:\n      return <RankingText id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case SCENARIO:\n      return <Scenario id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case FILL_IN_THE_BLANK:\n      return (\n        <FillInTheBlank id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case DRAG_AND_DROP_TEXT:\n      return (\n        <DragAndDropText id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case TEXT_MATCHING:\n      return <TextMatching id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case HOTSPOT:\n      return <Hotspot id={id} allowSubmit={allowSubmit} type={type} />;\n    default:\n      return null;\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    randomizeAnswersEnabled: isRandomizeAnswersEnabled(state),\n    hasRandomizedOptionsLoaded: isRandomizedOptionsLoaded(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n","import React from 'react';\nimport styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\n\nexport const Container = styled.div`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  ${media.mobile`\n    font-size: 12px;\n  `}\n`;\n\ntype PageCounterProps = {\n  index: number;\n  total: number;\n  isCourseOnOnePage: boolean;\n  questionType: string;\n};\n\nexport const PageCounter = ({\n  index,\n  total,\n  isCourseOnOnePage,\n  questionType\n}: PageCounterProps) => (\n  <Container>\n    {!isCourseOnOnePage &&\n      localize('[page counter caption]', { index, total }, `${index} out of ${total}`)}\n    {isCourseOnOnePage &&\n      questionType !== INFORMATION_CONTENT &&\n      localize('[question pool counter caption]', { index, total })}\n    {isCourseOnOnePage && questionType === INFORMATION_CONTENT && localize('[content page title]')}\n  </Container>\n);\n\nexport default PageCounter;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nconst containerMobileStyleBlock = `font-size: 12px;`;\n\nexport const Container = styled.div.attrs({\n  'data-test': 'question-pool-pagination'\n})`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  ${media.mobile} ${containerMobileStyleBlock}\n`;\n","import React from 'react';\nimport { localize } from 'core/localization';\nimport { Container } from './PoolCounter.styled';\n\ntype PoolCounterProps = {\n  index: number;\n  total: number;\n};\n\nexport const PoolCounter = ({ index, total }: PoolCounterProps) => (\n  <Container>\n    {localize('[question pool counter caption]', { index, total }, `${index} out of ${total}`)}\n  </Container>\n);\n\nexport default PoolCounter;\n","import PropTypes from 'prop-types';\n\n/* eslint-disable import/prefer-default-export */\nexport const createContainer = (typeName: any) => {\n  const Container = (props: any) => props.children;\n  Container.propTypes = { children: PropTypes.element.isRequired };\n  Container.typeName = typeName;\n  return Container;\n};\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\ntype ContainerProps = {\n  ariaLabel: string;\n  role: string;\n};\nexport const Container = styled.div.attrs((props: ContainerProps) => ({\n  'aria-label': props.ariaLabel,\n  'data-test': 'content-container',\n  role: props.role\n}))<ContainerProps>`\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  padding: 24px 0px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const IconContainer = styled.div`\n  margin: 0 20px 0 40px;\n  text-align: center;\n  ${media.xsmall`\n    margin-left: 16px;\n    text-align: left;\n  `};\n  & .icon {\n    line-height: inherit;\n  }\n`;\n\nexport const Body = styled.div`\n  margin: 32px 40px 0;\n  ${media.xsmall`\n    margin: 0 16px;\n  `};\n`;\n\nexport const ContentLoaderContainer = styled.div`\n  display: flex;\n  flex: 1;\n  margin-bottom: 20px;\n`;\n\nexport const ContentContainer = styled.div.attrs(props => ({\n  tabIndex: props.tabIndex\n}))`\n  &:focus {\n    outline: none;\n  }\n`;\n","import * as React from 'react';\nimport { createContainer } from 'components/common/helpers/containerComponentCreator';\n\nimport { Container, ContentContainer, IconContainer, Header, Body } from './ContentBlock.styled';\n\ntype ContentBlockProps = {\n  role: string;\n  tabIndex?: number;\n  ariaLabel?: string;\n  contentRef?(): void;\n  children: any[];\n  isCorrect?: boolean;\n  isLoading?: boolean;\n  value?: string;\n  title?: string;\n};\n\nexport const ContentBlock = ({ contentRef, children, role, tabIndex, ariaLabel }: ContentBlockProps) => {\n  const { Icon, Content, Title } = getChildrenObject(children);\n  children.forEach((child: React.ReactChildren) => {\n    validationChildren(child)\n  })\n  return (\n    <Container ariaLabel={ariaLabel || ''} role={role} tabIndex={tabIndex} ref={contentRef}>\n      <Header>\n        <IconContainer>{Icon}</IconContainer>\n        {Title}\n      </Header>\n      {Content && (\n        <Body>\n          <ContentContainer tabIndex={tabIndex}>{Content}</ContentContainer>\n        </Body>\n      )}\n    </Container>\n  );\n};\n\nconst typeNames = {\n  icon: 'icon',\n  title: 'title',\n  content: 'content'\n};\nContentBlock.Icon = createContainer(typeNames.icon);\nContentBlock.Title = createContainer(typeNames.title);\nContentBlock.Content = createContainer(typeNames.content);\n\nfunction validationChildren(children: any) {\n  const childrenObj = getChildrenObject(children);\n\n  if (!childrenObj.Icon) {\n    return new Error(`ContentBlock: Invalid Prop children, must contain ContentBlock.Icon`);\n  }\n  if (!childrenObj.Title) {\n    return new Error(`Page: Invalid Prop children, must contain ContentBlock.Title`);\n  }\n}\n\nfunction getChildrenObject(children: any[]) {\n  return React.Children.toArray(children).reduce((acc: any, child: any) => {\n    switch (child.type.typeName) {\n      case typeNames.icon: {\n        acc.Icon = child;\n        break;\n      }\n      case typeNames.content: {\n        acc.Content = child;\n        break;\n      }\n      case typeNames.title: {\n        acc.Title = child;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return acc;\n  }, {});\n}\n\nexport default ContentBlock;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { localize } from 'core/localization';\nimport { ShapedIcon, Collapse, Delay, Text } from 'components/common';\nimport { ICON, SIZES } from 'constants/components';\nimport Contents from 'components/contents/Contents';\nimport ContentBlock from 'components/contents/ContentBlock';\nimport { OPEN_QUESTION } from 'constants/questionTypes';\nimport {\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  getQuestionResponse\n} from 'store/questions/selectors';\nimport * as questionActions from 'store/questions/actions';\nimport { RootAppState } from 'store/types';\nimport { NAVIGATION_ITEM_ICON_NAMES } from 'constants/common';\n\ntype FeedbackProps = {\n  actions?: { [key: string]: any };\n  question: { [key: string]: any };\n  delay: number;\n  duration?: number;\n  animate: boolean;\n  onShown?(): void;\n  onHidden?(): void;\n  isAnswered?: boolean;\n  isAnsweredCorrectly?: boolean;\n  questionResponse?: Array<any>;\n  questionPageRef?: any;\n};\n\nexport class Feedback extends React.PureComponent<FeedbackProps, {}> {\n  refFeedback: any;\n\n  constructor(props: FeedbackProps) {\n    super(props);\n    this.refFeedback = React.createRef();\n  }\n\n  static defaultProps = {\n    delay: 0,\n    duration: 200,\n    animate: true\n  };\n\n  onShown = () => {\n    const { onShown, animate } = this.props;\n    if (onShown && this.refFeedback.current) {\n      onShown();\n      this.refFeedback.current.focus();\n    }\n    if (animate) {\n      this.props.actions &&\n        this.props.actions.animateFeedback({\n          questionId: this.props.question.id,\n          isAnimating: false\n        });\n    }\n  };\n\n  onHidden = () => {\n    const { onHidden, animate, questionPageRef } = this.props;\n    if (onHidden) onHidden();\n    if (animate) {\n      this.props.actions &&\n        this.props.actions.animateFeedback({\n          questionId: this.props.question.id,\n          isAnimating: false\n        });\n    }\n    questionPageRef && questionPageRef.current && questionPageRef.current.focus();\n  };\n\n  render() {\n    const { animate, delay, isAnswered } = this.props;\n\n    if (!animate) {\n      this.onShown();\n      return this.renderContent();\n    }\n\n    return (\n      <Delay wait={delay}>\n        <Collapse\n          delayOpacityTransition={true}\n          isExpanded={isAnswered}\n          onExpanded={this.onShown}\n          onCollapsed={this.onHidden}\n          scrollIntoView={true}\n        >\n          {this.renderContent()}\n        </Collapse>\n      </Delay>\n    );\n  }\n\n  renderContent = () => {\n    const { isAnsweredCorrectly, question } = this.props;\n    const { isSurvey, isPreviousAnswerCorrect } = this.props.question;\n    const isOpenQuestionType = question.type === OPEN_QUESTION;\n    const isCorrect = isSurvey || isAnsweredCorrectly || isPreviousAnswerCorrect;\n    const items = this.feedbackContentItems();\n    return (\n      <ContentBlock\n        role=\"dialog\"\n        tabIndex={0}\n        ariaLabel={getTitle(isCorrect, isSurvey, isOpenQuestionType)}\n        contentRef={this.refFeedback}\n      >\n        <ContentBlock.Icon>\n          <ShapedIcon\n            name={isCorrect ? NAVIGATION_ITEM_ICON_NAMES.OK : NAVIGATION_ITEM_ICON_NAMES.CLOSE}\n            color={'buttonTextColor'}\n            shapeColor={isCorrect ? 'correctColor' : 'incorrectColor'}\n            size={SIZES.LARGE}\n            shape={ICON.SHAPES.ROUND_FULL_COLOR}\n          />\n        </ContentBlock.Icon>\n        <ContentBlock.Title>\n          <Text appearance=\"h4\" data-test=\"feedback-info-title\">\n            {getTitle(isCorrect, isSurvey, isOpenQuestionType)}\n          </Text>\n        </ContentBlock.Title>\n        {items.length > 0 && (\n          <ContentBlock.Content>\n            <Contents items={items} />\n          </ContentBlock.Content>\n        )}\n      </ContentBlock>\n    );\n  };\n\n  feedbackContentItems() {\n    const {\n      isAnsweredCorrectly,\n      correctFeedback,\n      incorrectFeedback,\n      isGeneralFeedback,\n      answers,\n      isSurvey,\n      isPreviousAnswerCorrect\n    } = this.props.question;\n    const { questionResponse = [] } = this.props;\n    if (isGeneralFeedback !== undefined && !isGeneralFeedback) {\n      let items: any[] = [];\n      questionResponse.forEach(item => {\n        const currentAnswer = answers.find((answer: any) => answer.id === item);\n        if (currentAnswer.explanationBlocks) {\n          currentAnswer.explanationBlocks.forEach((block: any) => items.push(block.id));\n        }\n      });\n      return items;\n    }\n    if (isSurvey) {\n      return correctFeedback;\n    }\n    return isAnsweredCorrectly || isPreviousAnswerCorrect ? correctFeedback : incorrectFeedback;\n  }\n}\n\nfunction getTitle(isCorrect: boolean, isSurvey: boolean, isOpenQuestionType: boolean) {\n  if (isOpenQuestionType) {\n    return isCorrect\n      ? localize('[your answer has been stored]')\n      : localize('[your answer is empty and was not stored]');\n  }\n\n  return localize(\n    isSurvey ? '[your answer has been stored]' : isCorrect ? '[thats correct]' : '[thats incorrect]'\n  );\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(questionActions, dispatch) };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: FeedbackProps) {\n  const questionId = ownProps.question.id;\n  return {\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    questionResponse: getQuestionResponse(state, questionId)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import styled, { css } from 'styled-components';\nimport {\n  Button as ButtonComponent,\n  Separator as SeparatorComponent,\n  Text\n} from 'components/common';\n\ntype ControlContainerProps = {\n  visible?: boolean\n}\nexport const ControlContainer = styled.div.attrs(props => ({\n  tabIndex: props.tabIndex\n}))<ControlContainerProps>`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  &:focus {\n    outline: none;\n  }\n  &.hideHint {\n    transform: translate(0, 100%);\n  }\n  ${props =>\n    props.visible &&\n    css`\n      visibility: visible;\n    `};\n  ${props =>\n    props.visible &&\n    css`\n      visibility: hidden;\n      opacity: 0;\n    `};\n`;\n\nexport const Button = styled(ButtonComponent)`\n  flex-shrink: 0;\n`;\n\nexport const ButtonSeparator = styled(SeparatorComponent)`\n  margin: 0;\n`;\n\nexport const TitleText = styled(Text)`\n  font-weight: 600;\n`;\n\nexport const ContainerHint = styled.div.attrs({\n  'data-test': 'hint-container'\n})`\n  position: relative;\n  padding-bottom: 69px;\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport ContentBlock from 'components/contents/ContentBlock';\nimport Contents from 'components/contents/Contents';\nimport { Icon, Separator, Collapse } from 'components/common';\nimport { ControlContainer, Button, ButtonSeparator, TitleText, ContainerHint } from './Hint.styled';\nimport { RECALCULATE_LOCATION_TIME_MS } from '../../../constants/common';\n\ntype HintProps = {\n  items: Array<string>;\n  shouldRecalculateScrollLocation(reCalculate?: boolean): any;\n  isCourseOnOnePage?: boolean;\n};\n\ntype HintState = {\n  isExpanded: boolean;\n};\n\nexport class Hint extends React.PureComponent<HintProps, HintState> {\n  constructor(props: HintProps) {\n    super(props);\n    this.state = { isExpanded: false };\n  }\n\n  componentDidUpdate(prevProps: HintProps) {\n    if (prevProps.items !== this.props.items) {\n      this.setState({ isExpanded: false });\n    }\n\n    if (this.props.isCourseOnOnePage) {\n      this.recalculateScrollLocation();\n    }\n  }\n\n  componentWillUnmount = () => {\n    if (this.props.isCourseOnOnePage) {\n      clearTimeout(this.recalculateScrollLocation());\n    }\n  };\n\n  recalculateScrollLocation = () =>\n    setTimeout(() => {\n      this.props.shouldRecalculateScrollLocation(true);\n    }, RECALCULATE_LOCATION_TIME_MS);\n\n  toggleIsExpanded = () => {\n    this.setState(prevState => ({ isExpanded: !prevState.isExpanded }));\n  };\n\n  render() {\n    const { items } = this.props;\n    const { isExpanded } = this.state;\n    return (\n      <ContainerHint>\n        <ControlContainer>\n          <ButtonSeparator opacity={0.1} color=\"textColor\" />\n          <Button\n            tabIndex={1}\n            layout=\"secondary\"\n            onClick={this.toggleIsExpanded}\n            textTransform=\"uppercase\"\n            size=\"small\"\n            aria-expanded={isExpanded}\n          >\n            {localize(isExpanded ? '[hide hint]' : '[show hint]')}\n          </Button>\n          <ButtonSeparator opacity={0.1} color=\"textColor\" />\n        </ControlContainer>\n        <Collapse\n          isExpanded={isExpanded}\n          scrollIntoView={true}\n          duration={300}\n          opacityDuration=\"500\"\n        >\n          <Separator margin={32} opacity={0.1} color=\"textColor\" />\n          <ContentBlock title=\"Hint\" role=\"status\">\n            <ContentBlock.Icon>\n              <Icon name=\"hint\" color=\"mainColor\" size={22} />\n            </ContentBlock.Icon>\n            <ContentBlock.Title>\n              <TitleText>{localize('[hint]')}</TitleText>\n            </ContentBlock.Title>\n            <ContentBlock.Content>\n              <Contents items={items} />\n            </ContentBlock.Content>\n          </ContentBlock>\n        </Collapse>\n      </ContainerHint>\n    );\n  }\n}\nexport default Hint;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { defaultBoxShadowColor } from 'constants/common';\n\nexport const Container = styled.div`\n  display: inline-block;\n  width: inherit;\n  height: 84px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  box-shadow: 0 2px 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n  padding: 0 15px 8px 15px;\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n  ${media.small`\n    width: 100%;\n    padding-bottom: 0;\n  `};\n`;\n\nexport const IframeElement = styled.iframe.attrs((props: any) => ({\n  allow: props.allow,\n  audioid: props.audioid\n}))`\n  height: 65px;\n  width: 100%;\n  border: none;\n`;\n","import * as React from 'react';\nimport { withTheme } from 'styled-components';\nimport { getStyles } from 'utils/element';\nimport { getDOMNode, getAttributesNodeElement } from 'utils/dom';\nimport { addQueryStringParameter } from 'utils/window';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Container, IframeElement } from './VoiceOver.styled';\n\ntype VoiceOverProps = {\n  embedCode: string;\n  theme: { [key: string]: any };\n  tabIndex: number;\n  isCourseOnOnePage: boolean;\n};\n\nconst disableAutoPlay = (src: string) => {\n  const clonedUrl = cloneDeep(src);\n  const url = new URL(clonedUrl);\n  const urlParams = url.searchParams;\n  urlParams.set('autoplay', '0');\n  url.search = urlParams.toString();\n  return url.toString();\n};\n\nexport class VoiceOver extends React.PureComponent<VoiceOverProps, {}> {\n  static defaultProps = {\n    tabIndex: 0\n  };\n\n  getIframeSrcWithStyleVariable(src: string) {\n    return addQueryStringParameter(\n      src,\n      'style_variables',\n      encodeURIComponent(getStyles(this.props.theme))\n    );\n  }\n\n  renderIframeElement() {\n    const { isCourseOnOnePage, tabIndex } = this.props;\n    const iframeNode = getDOMNode(this.props.embedCode);\n    const attrName = getAttributesNodeElement(iframeNode);\n    const iframeAttr: { [key: string]: any } = {};\n\n    attrName.forEach(name => {\n      iframeAttr[name] = iframeNode.attributes[name].nodeValue;\n    });\n\n    iframeAttr.tabIndex = tabIndex;\n    iframeAttr.src = this.getIframeSrcWithStyleVariable(iframeAttr.src);\n\n    if (isCourseOnOnePage) {\n      iframeAttr.src = disableAutoPlay(iframeAttr.src);\n    }\n\n    return <IframeElement {...iframeAttr} />;\n  }\n\n  render() {\n    return <Container>{this.renderIframeElement()}</Container>;\n  }\n}\n\nexport default withTheme(VoiceOver);\n","\nexport function getDOMNode(embedCode: string):any {\n  const nodeElement = new DOMParser().parseFromString(embedCode, 'text/html');\n  return nodeElement.body.firstChild;\n}\n\nexport function getAttributesNodeElement(elem: any) {\n  const attributes = elem.attributes; // eslint-disable-line\n  const length = attributes.length; // eslint-disable-line\n\n  const result = new Array(length);\n  for (let i = 0; i < length; i++) {\n    result[i] = attributes[i].name;\n  }\n  return result;\n}\n","import styled from 'styled-components';\nimport { transition } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { Text } from 'components/common';\n\ntype ActionButtonsContainerProps = {\n  isHidden: boolean;\n};\n\ntype SubmitOnceButtonWrapperProps = {\n  shouldAddAdditionalMargin?: boolean;\n};\n\nexport const ActionButtonsContainer = styled.div<ActionButtonsContainerProps>`\n  ${transition('opacity', '0.2s')};\n  opacity: ${props => (props.isHidden ? 0 : 1)};\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: baseline;\n\n  & > button {\n    margin-bottom: 8px;\n    margin-right: 24px;\n  }\n\n  & > .tooltip {\n    bottom: 105%;\n    left: 0;\n  }\n`;\n\ntype NavButtonsBlockProps = {\n  tabIndex: number;\n};\nexport const NavButtonsBlock = styled.div.attrs((props: NavButtonsBlockProps) => ({\n  tabIndex: props.tabIndex\n}))<NavButtonsBlockProps>`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 49px;\n  width: 100%;\n  & > button {\n    margin: 0 24px 20px 0;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const SurveyHint = styled.p`\n  ${secondaryFont};\n  font-size: 12px;\n  line-height: 24px;\n  margin-bottom: 8px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  align-self: center;\n\n  & + div {\n    width: 100%;\n  }\n`;\n\ntype RemainingAttemptsReminderTextProps = {\n  ariaLabel: string;\n  tabIndex: number;\n  role: string;\n};\nexport const RemainingAttemptsReminderText = styled(Text).attrs(\n  (props: RemainingAttemptsReminderTextProps) => ({\n    tabIndex: props.tabIndex,\n    role: props.role,\n    'aria-label': props.ariaLabel\n  })\n)<RemainingAttemptsReminderTextProps>`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const RemainingAttemptsReminder = styled.div`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n`;\n\nexport const SubmitOnceButtonWrapper = styled.div<SubmitOnceButtonWrapperProps>`\n  margin-top: ${props => (props.shouldAddAdditionalMargin ? '49px' : '0')};\n`;\n\nexport const SubmitOnceButtonMobileWrapper = styled.div`\n  display: none;\n  @media (max-width: 767px) {\n    display: block;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { localize } from 'core/localization';\nimport * as questionActions from 'store/questions/actions';\nimport { BUTTON, TOOLTIP } from 'constants/components';\nimport { INFORMATION_CONTENT, SCENARIO } from 'constants/questionTypes';\nimport { Button, CssAnimation, StatusTooltip } from 'components/common';\nimport {\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  isFeedbackAnimating,\n  getAffectProgressQuestionsCount\n} from 'store/questions/selectors';\nimport {\n  isQuestionPoolEnabled,\n  isAttemptsLimited,\n  getLimitedAttemptsNumber,\n  getTimerEnabled\n} from 'store/settings/selectors';\nimport { getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { RootAppState } from 'store/types.js';\nimport {\n  ActionButtonsContainer,\n  NavButtonsBlock,\n  SurveyHint\n} from './ActionsBlock.styled';\nimport RemainingAttemptsBlock from 'components/remainingAttemptsBlock';\n\ntype ActionBlocksState = {\n  isJustSubmitted: boolean;\n  showTooltip: boolean;\n  isInformationContent: any;\n  canGoNext: boolean;\n};\n\nexport type ActionBlocksProps = {\n  actions?: { [key: string]: any };\n  question: { [key: string]: any };\n  goToNextPage(): void;\n  isNextPageResults: boolean;\n  feedbackAnimated?: boolean;\n  questionCountInSection: number;\n  questionIndex: number;\n  isQuestionPool?: boolean;\n  scrollToId?(id?: string): void;\n  currentScrollLocationId?: any;\n  isLastBlock?: any;\n  isCourseOnOnePage?: boolean;\n  isLimitedAttempts?: boolean;\n  limitedAttemptsNumber?: number;\n  timerStatus?: TimerStatus;\n  timerActions?: { [key: string]: any };\n  isTimerEnabled?: boolean;\n  affectProgressQuestionsCount?: number;\n};\nexport class ActionBlocks<T extends ActionBlocksProps> extends React.Component<\n  T,\n  ActionBlocksState\n> {\n  constructor(props: T) {\n    super(props);\n    this.state = {\n      isJustSubmitted: false,\n      showTooltip: false,\n      isInformationContent: this.props.question.type === INFORMATION_CONTENT,\n      canGoNext: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canGoNext: this.canGoToNextQuestion()\n    });\n  }\n\n  componentDidUpdate(prevProps: ActionBlocksProps) {\n    if (prevProps.question.id !== this.props.question.id) {\n      this.setState({ isJustSubmitted: false });\n    }\n  }\n\n  render() {\n    const { isJustSubmitted, isInformationContent } = this.state;\n    const { question, feedbackAnimated = false, limitedAttemptsNumber = 0 } = this.props;\n    const { isSurvey } = question;\n    const canGoNext = this.canGoToNextQuestion();\n    const remainingAttempts = this.getRemainingAttempts();\n    const isAttemptAllowed = this.isAttemptAllowed();\n    let remainingAttemptsText =  `${localize('[remaining attempts]')} ${remainingAttempts}`;\n\n    if (remainingAttempts === 1 && limitedAttemptsNumber > 1) {\n      remainingAttemptsText = localize('[only this attempt left]');\n    }\n\n    if (limitedAttemptsNumber === 1) {\n      remainingAttemptsText = localize('[one attempt to complete question]');\n    }\n\n    return (\n      <ActionButtonsContainer isHidden={feedbackAnimated}>\n        {!isInformationContent && (!question.isAnswered || feedbackAnimated) && (\n          <React.Fragment>\n            {question.type === SCENARIO ? (\n              <StatusTooltip\n                popoverPosition={'top'}\n                layout={TOOLTIP.INCORRECT}\n                onRequestClose={this.hidePopover}\n                showTooltip={this.state.showTooltip}\n                message={localize('[scenario tooltip text]')}\n                popoverButton={\n                  <Button tabIndex={0} onClick={this.submit} onBlur={this.hidePopover}>\n                    {localize('[submit]')}\n                  </Button>\n                }\n              />\n            ) : (\n              <React.Fragment>\n                <Button tabIndex={0} onClick={this.submit}>\n                  {localize('[submit]')}\n                </Button>\n                {isSurvey && !canGoNext && (\n                  <SurveyHint>{localize('[survey question hint]')}</SurveyHint>\n                )}\n              </React.Fragment>\n            )}\n            {isAttemptAllowed && !feedbackAnimated && (\n              <RemainingAttemptsBlock isResultsPage={false} text={remainingAttemptsText} isQuestionPage={true} remainingQuestionAttempt={remainingAttempts}/>\n            )}\n          </React.Fragment>\n        )}\n        {!feedbackAnimated &&\n          (isJustSubmitted ? (\n            <CssAnimation type={CssAnimation.AnimationType.slideInDown}>\n              {this.renderNavButtonsBlock()}\n            </CssAnimation>\n          ) : (\n            this.renderNavButtonsBlock()\n          ))}\n      </ActionButtonsContainer>\n    );\n  }\n\n  nextButtonLayout() {\n    const { question } = this.props;\n    const { isAnsweredCorrectly, isSurvey } = question;\n    const isInformationContent = question.type === INFORMATION_CONTENT;\n    return isInformationContent || isAnsweredCorrectly || isSurvey\n      ? BUTTON.LAYOUT.PRIMARY\n      : BUTTON.LAYOUT.SECONDARY;\n  }\n\n  renderNavButtonsBlock() {\n    const {\n      question,\n      questionIndex,\n      questionCountInSection,\n      isCourseOnOnePage,\n      isNextPageResults\n    } = this.props;\n    const { isAnsweredCorrectly, isSurvey } = question;\n    const isLastPageInSection = questionIndex + 1 === questionCountInSection;\n    const isInformationContent = question.type === INFORMATION_CONTENT;\n    const canGoNext = this.canGoToNextQuestion();\n\n    return (\n      <NavButtonsBlock tabIndex={-1}>\n        {this.canTryAgainQuestion() && (\n          <Button tabIndex={0} onClick={this.tryAgain}>\n            {localize('[try again]')}\n          </Button>\n        )}\n        {!isCourseOnOnePage &&\n          canGoNext &&\n          this.renderNextButton(\n            isInformationContent,\n            isAnsweredCorrectly,\n            isSurvey,\n            isLastPageInSection\n          )}\n\n        {isCourseOnOnePage &&\n          isNextPageResults &&\n          this.renderNextButton(\n            isInformationContent,\n            isAnsweredCorrectly,\n            isSurvey,\n            isLastPageInSection\n          )}\n      </NavButtonsBlock>\n    );\n  }\n\n  renderNextButton(\n    isInformationContent: boolean,\n    isAnsweredCorrectly: boolean,\n    isSurvey: boolean,\n    isLastPageInSection: boolean\n  ) {\n    const {\n      timerActions,\n      isTimerEnabled,\n      isNextPageResults,\n      affectProgressQuestionsCount\n    } = this.props;\n    const goToNextPage = () => {\n      if (\n        timerActions &&\n        isTimerEnabled &&\n        isNextPageResults &&\n        affectProgressQuestionsCount <= 0\n      ) {\n        timerActions.setTimerStatus(TimerStatus.STOPPED);\n        timerActions.updateTimerProgress();\n      }\n      const { goToNextPage } = this.props;\n      goToNextPage();\n    };\n\n    return (\n      <Button\n        data-test=\"button-next\"\n        layout={this.nextButtonLayout()}\n        onClick={goToNextPage}\n        tabIndex={0}\n        suffixIcon=\"arrow-down\"\n      >\n        {this.getNextNavigationText(isLastPageInSection)}\n      </Button>\n    );\n  }\n\n  hidePopover = async () => {\n    this.setState({ showTooltip: false });\n  };\n\n  submit = () => {\n    const { question } = this.props;\n    if (question.type === SCENARIO) {\n      if (question.response.isFinished) {\n        this.props.actions && this.props.actions.answer(question.id);\n        this.props.actions &&\n          this.props.actions.animateFeedback({\n            questionId: question.id,\n            isAnimating: true\n          });\n        this.setState({ isJustSubmitted: true, showTooltip: false });\n      } else {\n        this.setState({ showTooltip: true });\n      }\n    } else {\n      this.props.actions && this.props.actions.answer(question.id);\n      this.props.actions &&\n        this.props.actions.animateFeedback({\n          questionId: question.id,\n          isAnimating: true\n        });\n      this.setState({\n        isJustSubmitted: true,\n        canGoNext: this.canGoToNextQuestion()\n      });\n    }\n  };\n\n  getNextNavigationText = (isLastPageInSection: boolean) => {\n    const { isNextPageResults, isQuestionPool } = this.props;\n    if (isNextPageResults) {\n      return localize('[go to results]');\n    }\n    if (isQuestionPool) {\n      return localize('[next]');\n    }\n    return localize(isLastPageInSection ? '[next section]' : '[next]');\n  };\n\n  canGoToNextQuestion() {\n    return this.props.question.type === INFORMATION_CONTENT ? true : this.props.question.isAnswered;\n  }\n\n  canTryAgainQuestion() {\n    const { question, isLimitedAttempts, timerStatus } = this.props;\n    const isAttemptAllowed = this.isAttemptAllowed() || !isLimitedAttempts;\n    const isTimerStopped = timerStatus === TimerStatus.STOPPED;\n\n    return (\n      isAttemptAllowed &&\n      question.type !== INFORMATION_CONTENT &&\n      question.isAnswered &&\n      !question.isAnsweredCorrectly &&\n      !question.isSurvey &&\n      !isTimerStopped\n    );\n  }\n\n  isAttemptAllowed() {\n    const { question, isLimitedAttempts, limitedAttemptsNumber = 0 } = this.props;\n    const remainingAttempts = this.getRemainingAttempts();\n    return (\n      isLimitedAttempts &&\n      !question.isSurvey &&\n      !question.isAnsweredCorrectly &&\n      remainingAttempts > 0 &&\n      (remainingAttempts < limitedAttemptsNumber || (limitedAttemptsNumber === 1))\n    );\n  }\n\n  getRemainingAttempts() {\n    const { question, isLimitedAttempts, limitedAttemptsNumber } = this.props;\n    return isLimitedAttempts && limitedAttemptsNumber\n      ? (limitedAttemptsNumber as number) - question.attemptNumber\n      : 0;\n  }\n\n  tryAgain = () => {\n    const { question } = this.props;\n    this.props.actions && this.props.actions.resetProgress(question);\n    this.props.actions && this.props.actions.updateRetries(question.id);\n    this.setState({ isJustSubmitted: false });\n    this.props.actions &&\n      this.props.actions.animateFeedback({ questionId: question.id, isAnimating: true });\n  };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ActionBlocksProps) {\n  const questionId = ownProps.question.id;\n  return {\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    feedbackAnimated: isFeedbackAnimating(state, questionId),\n    isLimitedAttempts: isAttemptsLimited(state),\n    limitedAttemptsNumber: getLimitedAttemptsNumber(state),\n    timerStatus: getTimerStatus(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isTimerEnabled: getTimerEnabled(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(questionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionBlocks);\n","import styled from 'styled-components';\nimport { Text } from 'components/common';\nimport media from 'components/mixins/media';\n\nexport const QuestionTitleWrapper = styled.div`\n  & > .reviewable-container {\n    height: auto;\n  }\n  outline: none;\n`;\n\nexport const QuestionTitle = styled(Text).attrs({\n  'data-test': 'question-title'\n})`\n  margin: 12px 0 32px;\n\n  ${media.medium`\n    padding-right: 22px;\n  `}\n`;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport {\n  getSection,\n  getQuestionIndex,\n  getQuestionCount,\n  sectionExists\n} from 'store/sections/selectors';\nimport {\n  getBackground,\n  getLogo,\n  isMainLogoShown,\n  isShowLearningHintsEnabled,\n  isQuestionPoolEnabled,\n  getQuestionPoolSize,\n  isAllQuestionsOnOnePage\n} from 'store/settings/selectors';\nimport { Separator, CourseLogo } from 'components/common';\nimport Contents from 'components/contents/Contents';\nimport withFallbackToNotFound from 'components/hocs/withFallbackToNotFound';\nimport withNavigation from 'components/hocs/withNavigation';\nimport Question from 'components/questions/Question';\nimport Reviewable from 'components/review/Reviewable';\nimport { localize } from 'core/localization';\nimport * as questionActions from 'store/questions/actions';\nimport {\n  getQuestion,\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  questionExists,\n  getQuestionResponse\n} from 'store/questions/selectors';\nimport PageCounter from 'components/question/PageCounter';\nimport PoolCounter from 'components/question/PoolCounter';\nimport Feedback from 'components/question/Feedback';\nimport Hint from 'components/question/Hint';\nimport VoiceOver from 'components/question/VoiceOver';\nimport { getCourseTitle, getCourseQuestionIndex } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport ActionBlock from './actionsBlock/ActionsBlock';\nimport { QuestionTitle, QuestionTitleWrapper } from './QuestionPage.styled';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\n\nexport type QuestionPageProps = {\n  section: { [key: string]: any };\n  question: { [key: string]: any };\n  actions: { [key: string]: any };\n  navigateToNextPage(): void;\n  isNextPageResults(): boolean;\n  questionIndex: number;\n  questionCountInSection: number;\n  bodyBackground: { [key: string]: any };\n  logoUrl: string;\n  logoShown: boolean;\n  title: string;\n  questionResponse: any[];\n  isQuestionPool: boolean;\n  questionPoolSize: number;\n  courseQuestionIndex: number;\n  sectionId: any;\n  questionId: any;\n  currentScrollLocationId: any;\n  scrollToId(id: string): void;\n  isLastBlock: any;\n  isCourseOnOnePage: boolean;\n  onePageQuestionIndex: number;\n  questionCountInOnePage: number;\n  showLearningHints: boolean;\n  shouldRecalculateScrollLocation(reCalculate: boolean): any;\n};\n\nexport type QuestionPageState = {\n  showTooltip: boolean;\n  feedbackContentList: any[];\n};\nexport class QuestionPage<T extends QuestionPageProps> extends Component<T, QuestionPageState> {\n  questionPageRef: any;\n  constructor(props: T) {\n    super(props);\n    this.state = {\n      showTooltip: false,\n      feedbackContentList: []\n    };\n    this.questionPageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (!this.props.isCourseOnOnePage) {\n      this.props.actions.markAsOpened(this.props.question.id);\n      this.setTitlePage();\n    }\n    this.props.actions.loadFeedback(this.props.question.id);\n  }\n\n  componentDidUpdate(prevProps: QuestionPageProps) {\n    if (prevProps.question.id !== this.props.question.id) {\n      this.props.actions.loadFeedback(this.props.question.id);\n    }\n    if (this.props.isCourseOnOnePage) {\n      this.props.shouldRecalculateScrollLocation(true);\n    }\n  }\n\n  hidePopover = async () => {\n    this.setState({ showTooltip: false });\n  };\n\n  getNextNavigationText = (isLastPageInSection: boolean) => {\n    const { isNextPageResults } = this.props;\n    if (isNextPageResults()) {\n      return localize('[go to results]');\n    }\n    return localize(isLastPageInSection ? '[next section]' : '[next]');\n  };\n\n  setTitlePage = () => {\n    const { question } = this.props;\n    const isInformationContent = question.type === INFORMATION_CONTENT;\n    if (isInformationContent) {\n      document.title = `${localize('[content page title]')} | ${this.props.title}`;\n    } else {\n      document.title = `${localize('[questions page title]')} | ${this.props.title}`;\n    }\n  };\n\n  render() {\n    const {\n      question,\n      questionIndex,\n      questionCountInSection,\n      bodyBackground,\n      logoUrl,\n      logoShown,\n      isQuestionPool,\n      questionPoolSize,\n      courseQuestionIndex,\n      currentScrollLocationId,\n      isLastBlock,\n      isCourseOnOnePage,\n      onePageQuestionIndex,\n      questionCountInOnePage\n    } = this.props;\n    const questionType = question.type === INFORMATION_CONTENT ? INFORMATION_CONTENT : 'question';\n\n    return (\n      <Fragment>\n        {logoShown && !isCourseOnOnePage && <CourseLogo logoUrl={logoUrl} />}\n        {isQuestionPool && <PoolCounter index={courseQuestionIndex + 1} total={questionPoolSize} />}\n        {!isQuestionPool && (\n          <PageCounter\n            index={isCourseOnOnePage ? onePageQuestionIndex + 1 : questionIndex + 1}\n            total={isCourseOnOnePage ? questionCountInOnePage : questionCountInSection}\n            isCourseOnOnePage={isCourseOnOnePage}\n            questionType={questionType}\n          />\n        )}\n        <QuestionTitleWrapper\n          ref={this.questionPageRef}\n          tabIndex={0}\n          id={SKIP_TO_CONTENT_IDS.QUESTION_PAGE}\n        >\n          <Reviewable context={{ type: questionType, id: question.id, title: question.title }}>\n            <QuestionTitle appearance=\"h1\">{question.title}</QuestionTitle>\n          </Reviewable>\n        </QuestionTitleWrapper>\n        {this.renderInstructions()}\n        <Question\n          id={question.id}\n          type={question.type}\n          isAnswered={question.isAnswered}\n          bodyBackground={bodyBackground}\n        />\n        {this.renderInformationContentOrHints()}\n        {this.renderFeedback()}\n        <ActionBlock\n          question={question}\n          goToNextPage={this.navigateToNextPage}\n          isNextPageResults={isCourseOnOnePage ? isLastBlock : this.props.isNextPageResults()}\n          questionCountInSection={questionCountInSection}\n          questionIndex={questionIndex}\n          scrollToId={this.props.scrollToId}\n          currentScrollLocationId={currentScrollLocationId}\n          isLastBlock={isLastBlock}\n          isCourseOnOnePage={isCourseOnOnePage}\n        />\n        {this.renderVoiceOver()}\n      </Fragment>\n    );\n  }\n\n  navigateToNextPage = () => {\n    const { navigateToNextPage } = this.props;\n    navigateToNextPage();\n  };\n\n  getQuestionIndex = () => {\n    const {\n      questionIndex,\n      isCourseOnOnePage,\n      isQuestionPool,\n      courseQuestionIndex,\n      onePageQuestionIndex\n    } = this.props;\n\n    if (isCourseOnOnePage) {\n      return onePageQuestionIndex + 1;\n    }\n\n    if (isQuestionPool) {\n      return courseQuestionIndex + 1;\n    }\n\n    return questionIndex + 1;\n  };\n\n  getTotalQuestionCount = () => {\n    const {\n      questionCountInSection,\n      isCourseOnOnePage,\n      questionCountInOnePage,\n      isQuestionPool,\n      questionPoolSize\n    } = this.props;\n\n    if (isCourseOnOnePage) {\n      return questionCountInOnePage;\n    }\n\n    if (isQuestionPool) {\n      return questionPoolSize;\n    }\n\n    return questionCountInSection;\n  };\n\n  renderQuestionHeader = () => {\n    const { question, logoUrl, logoShown, isCourseOnOnePage } = this.props;\n\n    const questionType = question.type === INFORMATION_CONTENT ? INFORMATION_CONTENT : 'question';\n    return (\n      <React.Fragment>\n        {logoShown && !isCourseOnOnePage && <CourseLogo logoUrl={logoUrl} />}\n        <PageCounter\n          index={this.getQuestionIndex()}\n          total={this.getTotalQuestionCount()}\n          isCourseOnOnePage={isCourseOnOnePage}\n          questionType={questionType}\n        />\n        <QuestionTitleWrapper tabIndex={0} id={SKIP_TO_CONTENT_IDS.QUESTION_PAGE}>\n          <Reviewable context={{ type: questionType, id: question.id, title: question.title }}>\n            <QuestionTitle appearance=\"h1\">{question.title}</QuestionTitle>\n          </Reviewable>\n        </QuestionTitleWrapper>\n        {this.renderInstructions()}\n      </React.Fragment>\n    );\n  };\n\n  renderInformationContentOrHints() {\n    const { question, showLearningHints } = this.props;\n    if (\n      question.hints.length === 0 ||\n      (!showLearningHints && question.type !== INFORMATION_CONTENT)\n    ) {\n      return <Separator margin={32} opacity={0.1} color=\"textColor\" />;\n    }\n    if (question.type === INFORMATION_CONTENT) {\n      return <Contents items={question.hints} />;\n    }\n    return (\n      <Reviewable\n        context={{\n          type: REVIEW_COMMENT_TYPES.QUESTION,\n          property: REVIEW_COMMENT_PROPERTIES.LEARNING_CONTENT,\n          id: question.id,\n          title: question.title\n        }}\n      >\n        <Hint\n          items={question.hints}\n          shouldRecalculateScrollLocation={this.props.shouldRecalculateScrollLocation}\n          isCourseOnOnePage={this.props.isCourseOnOnePage}\n        />\n      </Reviewable>\n    );\n  }\n\n  renderFeedback() {\n    const { question } = this.props;\n    if (question.type === INFORMATION_CONTENT) {\n      return null;\n    }\n\n    return (\n      <Feedback\n        question={question}\n        animate={true}\n        delay={200}\n        questionPageRef={this.questionPageRef}\n      />\n    );\n  }\n\n  renderInstructions() {\n    const { question } = this.props;\n    const { instructions, type } = question;\n    return (\n      <React.Fragment>\n        {instructions.length > 0 && <Contents items={instructions} />}\n        {type !== INFORMATION_CONTENT && instructions.length !== 0 && (\n          <Separator opacity={0.1} color=\"textColor\" />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderVoiceOver() {\n    const { question, isCourseOnOnePage } = this.props;\n    return (\n      !!question.voiceOver && (\n        <Reviewable\n          isVoiceOver={true}\n          isCourseOnOnePage={isCourseOnOnePage}\n          context={{\n            type: REVIEW_COMMENT_TYPES.INFORMATION_CONTENT,\n            property: REVIEW_COMMENT_PROPERTIES.VOICE_OVER,\n            id: question.id,\n            title: question.title\n          }}\n        >\n          <VoiceOver\n            tabIndex={0}\n            embedCode={question.voiceOver}\n            isCourseOnOnePage={isCourseOnOnePage}\n          />\n        </Reviewable>\n      )\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: any) {\n  const isOnePage = isAllQuestionsOnOnePage(state);\n  const { sectionId, questionId } = (() => {\n    if (isOnePage) {\n      return ownProps;\n    }\n    return ownProps.match.params;\n  })();\n\n  return {\n    logoUrl: getLogo(state),\n    logoShown: isMainLogoShown(state),\n    section: getSection(state, sectionId),\n    questionIndex: getQuestionIndex(state, sectionId, questionId),\n    questionCountInSection: getQuestionCount(state, sectionId),\n    question: getQuestion(state, questionId),\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    bodyBackground: getBackground(state).body,\n    title: getCourseTitle(state),\n    sectionExists: sectionExists(state, sectionId),\n    questionExists: questionExists(state, questionId),\n    questionResponse: getQuestionResponse(state, questionId),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    courseQuestionIndex: getCourseQuestionIndex(state, questionId),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    showLearningHints: isShowLearningHintsEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(questionActions, dispatch) };\n}\n\nfunction predicateForRedirect(props: any) {\n  return !props.sectionExists || !props.questionExists;\n}\n\nexport default withNavigation(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withFallbackToNotFound(QuestionPage, predicateForRedirect))\n);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { TimerStatus } from 'constants/timer';\nimport {\n  getTimerEnabled,\n  isQuestionPoolEnabled,\n  getQuestionPoolSize\n} from 'store/settings/selectors';\nimport { RootAppState } from '../../../../store/types.js';\nimport {\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  isFeedbackAnimating,\n  isAllAffectedQuestionsAnswered\n} from '../../../../store/questions/selectors';\nimport { RESULTS_PATH } from '../../../../constants/navigation';\nimport { localize } from '../../../../core/localization';\nimport * as questionActions from '../../../../store/questions/actions';\nimport { BUTTON, TOOLTIP } from '../../../../constants/components';\nimport { INFORMATION_CONTENT, SCENARIO } from '../../../../constants/questionTypes';\nimport { Button, StatusTooltip } from '../../../../components/common';\nimport { isAttemptSubmitted } from '../../../../store/course/selectors';\nimport { ActionBlocks, ActionBlocksProps } from './ActionsBlock';\nimport SubmitOnceButton from '../../../../components/submitOnce';\nimport {\n  ActionButtonsContainer,\n  SurveyHint,\n  SubmitOnceButtonWrapper,\n  NavButtonsBlock,\n  SubmitOnceButtonMobileWrapper\n} from './ActionsBlock.styled';\n\ninterface ActionsBlockSubmitOnceProps extends ActionBlocksProps {\n  overallNumberOfQuestions: number;\n  courseQuestionIndex: number;\n  isEveryAffectedQuestionsAnswered?: boolean;\n  showSubmitButton?: boolean;\n  isCourseSubmitted?: boolean;\n  isLastPage?: boolean;\n  navigateToUrl(url: string): void;\n  questionPoolSize?: number;\n  isQuestionPool?: boolean;\n  timerActions?: { [key: string]: any };\n  isTimerEnabled?: boolean;\n}\n\nexport class ActionsBlockSubmitOnce extends ActionBlocks<ActionsBlockSubmitOnceProps> {\n  constructor(props: ActionsBlockSubmitOnceProps) {\n    super(props);\n    this.state = {\n      isJustSubmitted: false,\n      showTooltip: false,\n      isInformationContent: this.props.question.type === INFORMATION_CONTENT,\n      canGoNext: false\n    };\n  }\n\n  render() {\n    const { isInformationContent } = this.state;\n    const {\n      question,\n      isCourseSubmitted,\n      courseQuestionIndex,\n      overallNumberOfQuestions,\n      isCourseOnOnePage\n    } = this.props;\n    const { isSurvey } = question;\n    const isLastPage = courseQuestionIndex + 1 === overallNumberOfQuestions;\n    return (\n      <ActionButtonsContainer isHidden={false}>\n        {!isCourseSubmitted && !isInformationContent && (\n          <React.Fragment>\n            {question.type === SCENARIO ? (\n              <StatusTooltip\n                popoverPosition={'top'}\n                layout={TOOLTIP.INCORRECT}\n                showTooltip={this.state.showTooltip}\n                message={localize('[scenario tooltip text]')}\n                popoverButton={\n                  <Button\n                    tabIndex={0}\n                    onClick={this.next}\n                    onBlur={this.hidePopover}\n                    data-test=\"button-next\"\n                    layout={this.questionNextButtonLayout()}\n                  >\n                    {localize('[next]')}\n                  </Button>\n                }\n              />\n            ) : (\n              !isLastPage &&\n              !isCourseOnOnePage && (\n                <React.Fragment>\n                  <Button\n                    tabIndex={0}\n                    onClick={this.next}\n                    data-test=\"button-next\"\n                    layout={this.questionNextButtonLayout()}\n                  >\n                    {localize('[next]')}\n                  </Button>\n                  {isSurvey && <SurveyHint>{localize('[survey question hint]')}</SurveyHint>}\n                </React.Fragment>\n              )\n            )}\n          </React.Fragment>\n        )}\n        {!isLastPage &&\n          !isCourseSubmitted &&\n          isInformationContent &&\n          !isCourseOnOnePage &&\n          this.renderNavButtonsBlock()}\n        {isCourseSubmitted && this.renderNavButtonsBlock()}\n        {this.renderSubmitAtOnceButtonWrapper()}\n      </ActionButtonsContainer>\n    );\n  }\n\n  questionNextButtonLayout() {\n    const {\n      question: { isAnswered },\n      isEveryAffectedQuestionsAnswered\n    } = this.props;\n    if (isEveryAffectedQuestionsAnswered) {\n      return BUTTON.LAYOUT.SECONDARY;\n    }\n    if (isAnswered) {\n      return BUTTON.LAYOUT.PRIMARY;\n    }\n    return BUTTON.LAYOUT.SECONDARY;\n  }\n\n  canTryAgainQuestion() {\n    const { question, isCourseSubmitted } = this.props;\n\n    return (\n      question.type !== INFORMATION_CONTENT &&\n      isCourseSubmitted &&\n      question.isAnswered &&\n      !question.isAnsweredCorrectly &&\n      !question.isSurvey\n    );\n  }\n\n  renderSubmitAtOnceButtonWrapper() {\n    const {\n      showSubmitButton,\n      courseQuestionIndex,\n      isEveryAffectedQuestionsAnswered,\n      isCourseOnOnePage,\n      overallNumberOfQuestions,\n      question\n    } = this.props;\n    const isLastQuestion = courseQuestionIndex + 1 === overallNumberOfQuestions;\n    const shouldAddAdditionalMargin = isLastQuestion && question.type === INFORMATION_CONTENT;\n\n    const isActive =\n      isLastQuestion ||\n      (isCourseOnOnePage\n        ? isEveryAffectedQuestionsAnswered && isLastQuestion\n        : isEveryAffectedQuestionsAnswered);\n\n    return (\n      isActive &&\n      showSubmitButton && (\n        <SubmitOnceButtonMobileWrapper>\n          <SubmitOnceButtonWrapper\n            className=\"submit-button-wrapper\"\n            data-test=\"submit-button-wrapper\"\n            shouldAddAdditionalMargin={shouldAddAdditionalMargin}\n          >\n            <SubmitOnceButton\n              onClick={this.submitAllAnswers}\n              isActive={isActive && showSubmitButton}\n              tabIndex={0}\n            />\n          </SubmitOnceButtonWrapper>\n        </SubmitOnceButtonMobileWrapper>\n      )\n    );\n  }\n\n  nextButtonLayout() {\n    const { isCourseSubmitted, isEveryAffectedQuestionsAnswered } = this.props;\n    return isCourseSubmitted || isEveryAffectedQuestionsAnswered\n      ? BUTTON.LAYOUT.SECONDARY\n      : BUTTON.LAYOUT.PRIMARY;\n  }\n\n  renderNavButtonsBlock() {\n    const {\n      questionIndex,\n      questionCountInSection,\n      goToNextPage,\n      isQuestionPool,\n      questionPoolSize,\n      isCourseOnOnePage\n    } = this.props;\n    const isLastPageInSection =\n      questionIndex + 1 === (isQuestionPool ? questionPoolSize : questionCountInSection);\n    const canGoNext = this.canGoToNextQuestion();\n    return (\n      !isCourseOnOnePage &&\n      canGoNext && (\n        <NavButtonsBlock tabIndex={-1}>\n          <Button\n            data-test=\"button-next\"\n            layout={this.nextButtonLayout()}\n            onClick={goToNextPage}\n            tabIndex={0}\n            suffixIcon=\"arrow-down\"\n          >\n            {this.getNextNavigationText(isLastPageInSection)}\n          </Button>\n        </NavButtonsBlock>\n      )\n    );\n  }\n\n  next = () => {\n    const { question, goToNextPage, courseQuestionIndex, overallNumberOfQuestions } = this.props;\n\n    const isLastPage = courseQuestionIndex + 1 === overallNumberOfQuestions;\n\n    if (isLastPage) {\n      this.props.actions && this.props.actions.submitAllAtOnce();\n      goToNextPage();\n    } else {\n      this.props.actions && this.props.actions.answerBeforeSubmit(question.id);\n      this.setState({\n        canGoNext: true\n      });\n      goToNextPage();\n    }\n  };\n\n  submitAllAnswers = () => {\n    const { isTimerEnabled, actions, timerActions, navigateToUrl } = this.props;\n    if (timerActions && isTimerEnabled) {\n      timerActions.setTimerStatus(TimerStatus.STOPPED);\n      timerActions.updateTimerProgress();\n    }\n    if (actions !== undefined) {\n      actions.submitAllAtOnce();\n    }\n    navigateToUrl(RESULTS_PATH);\n  };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ActionsBlockSubmitOnceProps) {\n  const questionId = ownProps.question.id;\n  return {\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    feedbackAnimated: isFeedbackAnimating(state, questionId),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    showSubmitButton: !isAttemptSubmitted(state),\n    isEveryAffectedQuestionsAnswered: isAllAffectedQuestionsAnswered(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isTimerEnabled: getTimerEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(questionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionsBlockSubmitOnce);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport {\n  getSection,\n  getQuestionIndex,\n  getQuestionCount,\n  getCourseQuestionCount,\n  sectionExists\n} from 'store/sections/selectors';\n\nimport {\n  getBackground,\n  getLogo,\n  isMainLogoShown,\n  isAllQuestionsOnOnePage,\n  isShowLearningHintsEnabled,\n  isQuestionPoolEnabled,\n  getQuestionPoolSize\n} from 'store/settings/selectors';\nimport withFallbackToNotFound from 'components/hocs/withFallbackToNotFound';\nimport withNavigation from 'components/hocs/withNavigation';\nimport Question from 'components/questions/Question';\nimport * as questionActions from 'store/questions/actions';\nimport {\n  getQuestion,\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  questionExists,\n  getQuestionResponse\n} from 'store/questions/selectors';\nimport Feedback from 'components/question/Feedback';\nimport { getCourseTitle, isAttemptSubmitted, getCourseQuestionIndex } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport { hasGuidedReattempt } from 'store/common/selectors';\nimport { QuestionPage, QuestionPageProps } from './QuestionPage';\nimport ActionsBlockSubmitOnce from './actionsBlock/ActionsBlockSubmitOnce';\n\ninterface QuestionPagePropsSubmitOnce extends QuestionPageProps {\n  courseQuestionIndex: number;\n  overallNumberOfQuestions: number;\n  isCourseSubmitted?: boolean;\n  navigateToUrl(url: string): void;\n  hasGuidedReattempt: boolean;\n}\n\nexport class QuestionPageSubmitOnce extends QuestionPage<QuestionPagePropsSubmitOnce> {\n  constructor(props: QuestionPagePropsSubmitOnce) {\n    super(props);\n    this.state = {\n      showTooltip: false,\n      feedbackContentList: []\n    };\n  }\n\n  render() {\n    const {\n      question,\n      questionIndex,\n      courseQuestionIndex,\n      questionCountInSection,\n      overallNumberOfQuestions,\n      bodyBackground,\n      isCourseSubmitted,\n      navigateToUrl,\n      isCourseOnOnePage,\n      isLastBlock,\n      hasGuidedReattempt\n    } = this.props;\n\n    return (\n      <Fragment>\n        {this.renderQuestionHeader()}\n        <Question\n          id={question.id}\n          type={question.type}\n          allowSubmit={true}\n          isAnswered={\n            (isCourseSubmitted && question.isAnswered) ||\n            (hasGuidedReattempt && !isCourseSubmitted && question.isPreviousAnswerCorrect)\n          }\n          bodyBackground={bodyBackground}\n        />\n        {this.renderInformationContentOrHints()}\n        {this.renderFeedback()}\n        <ActionsBlockSubmitOnce\n          navigateToUrl={navigateToUrl}\n          question={question}\n          goToNextPage={this.navigateToNextPage}\n          isNextPageResults={isCourseOnOnePage ? isLastBlock : this.props.isNextPageResults()}\n          questionCountInSection={questionCountInSection}\n          overallNumberOfQuestions={overallNumberOfQuestions}\n          questionIndex={questionIndex}\n          courseQuestionIndex={courseQuestionIndex}\n          isCourseOnOnePage={isCourseOnOnePage}\n        />\n\n        {this.renderVoiceOver()}\n      </Fragment>\n    );\n  }\n\n  canGoToNextQuestion() {\n    const { question, isCourseSubmitted } = this.props;\n    if (question.type === INFORMATION_CONTENT) {\n      return true;\n    } else if (isCourseSubmitted) {\n      return question.isAnswered;\n    } else {\n      return false;\n    }\n  }\n\n  renderFeedback() {\n    const { question, isCourseSubmitted, hasGuidedReattempt } = this.props;\n    const isVisible = () => {\n      if (!isCourseSubmitted) {\n        return hasGuidedReattempt && question.isPreviousAnswerCorrect;\n      }\n      return true;\n    };\n    if (question.type === INFORMATION_CONTENT || !isVisible()) {\n      return <></>;\n    }\n\n    return <Feedback question={question} animate={true} delay={200} />;\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: any) {\n  const isOnePage = isAllQuestionsOnOnePage(state);\n  const { sectionId, questionId } = (() => {\n    if (isOnePage) {\n      return ownProps;\n    }\n    return ownProps.match.params;\n  })();\n  return {\n    logoUrl: getLogo(state),\n    logoShown: isMainLogoShown(state),\n    section: getSection(state, sectionId),\n    courseQuestionIndex: getCourseQuestionIndex(state, questionId),\n    questionIndex: getQuestionIndex(state, sectionId, questionId),\n    questionCountInSection: getQuestionCount(state, sectionId),\n    overallNumberOfQuestions: getCourseQuestionCount(state),\n    question: getQuestion(state, questionId),\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    bodyBackground: getBackground(state).body,\n    title: getCourseTitle(state),\n    sectionExists: sectionExists(state, sectionId),\n    questionExists: questionExists(state, questionId),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    questionResponse: getQuestionResponse(state, questionId),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    showLearningHints: isShowLearningHintsEnabled(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    hasGuidedReattempt: hasGuidedReattempt(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(questionActions, dispatch) };\n}\n\nfunction predicateForRedirect(props: any) {\n  return !props.sectionExists || !props.questionExists;\n}\n\nexport default withNavigation(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withFallbackToNotFound(QuestionPageSubmitOnce, predicateForRedirect))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RootAppState } from '../../../../store/types';\nimport { shouldSubmitAllQuestions } from '../../../../store/settings/selectors';\nimport QuestionPage from '../../question/QuestionPage';\nimport QuestionPageSubmitOnce from '../../question/QuestionPageSubmitOnce';\n\ntype SinglePageCourseProps = {\n  isSubmitAtOnce: boolean;\n};\n\nexport class DefaultLayout extends Component<SinglePageCourseProps, {}> {\n  render() {\n    const { isSubmitAtOnce } = this.props;\n    if (isSubmitAtOnce) {\n      return <QuestionPageSubmitOnce {...this.props} />;\n    }\n    return <QuestionPage {...this.props} />;\n  }\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isSubmitAtOnce: shouldSubmitAllQuestions(state)\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import styled, { css } from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { TOC } from 'constants/components';\nimport { MEDIA_SMALL } from 'constants/screenResolutions';\n\nexport const BLOCK_MARGIN_OFFSET = 80;\n\ntype CourseLogoProps = {\n  altText: string;\n  logoUrl: string;\n};\n\nexport const CourseLogo = styled.img.attrs((props: CourseLogoProps) => ({\n  alt: props.altText,\n  src: props.logoUrl\n}))<CourseLogoProps>`\n  padding-top: 90px;\n  max-width: 200px;\n  margin-bottom: 0;\n`;\n\ntype StickyContainerProps = {\n  background: any;\n};\n\ntype QuestionBlockProps = {\n  isFirstElement: boolean;\n};\n\ntype ProgressProps = {\n  progress: number;\n};\n\ntype StickyHeadProps = {\n  isExpanded: boolean;\n};\n\nexport const StickyContainer = styled.div.attrs({\n  'data-test': 'sticky-container'\n})<StickyContainerProps>`\n  ${props =>\n    !props.background &&\n    css`\n      background: white;\n    `};\n  overflow-x: hidden;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll !important;\n  position: relative;\n  ${getCustomScrollbars()};\n`;\n\nexport const StickyHead = styled.div.attrs({\n  'data-test': 'sticky-header'\n})<StickyHeadProps>`\n  background: white;\n  z-index: 11;\n  transition: left 1s linear;\n  position: fixed;\n  width: ${props => (props.isExpanded ? `calc(100% - ${TOC.EXPANDED_WIDTH}px)` : '100%')};\n\n  @media (max-width: ${MEDIA_SMALL}px) {\n    left: 0;\n    top: 0;\n    padding: 0 30px;\n\n    > div:first-of-type {\n      padding: 0 0 0 15px;\n    }\n  }\n`;\n\nexport const StickyBody = styled.div.attrs(() => ({\n  'data-test': 'sticky-body'\n}))`\n  width: 100%;\n  font-size: 15px;\n  margin: 0 auto;\n  padding: 0 10%;\n  ${media.small`\n    padding: 0;\n  `};\n`;\n\nexport const SectionTitle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 10%;\n  ${media.small`\n    padding: 0;\n  `};\n`;\n\nexport const SectionNumber = styled.div.attrs(() => ({\n  'data-test': 'section-number'\n}))`\n  font-weight: bold;\n  font-size: 12px;\n  font-family: Qanelas-Soft, PT Serif, Serif;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  line-height: 1em;\n  padding: 15px 0 7px;\n`;\n\nexport const SectionName = styled.div.attrs(() => ({\n  'data-test': 'section-name'\n}))`\n  font-weight: bold;\n  font-size: 18px;\n  font-family: Qanelas-Soft, PT Serif, Serif;\n  color: ${props => transparentize(props.theme.colors.textColor, 1)};\n  line-height: 1.56em;\n  padding: 0 0 12px;\n`;\n\nexport const ProgressContainer = styled.div.attrs({\n  'data-test': 'progress-bar-container'\n})`\n  width: 100%;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.08)};\n`;\n\nexport const Progress = styled.div.attrs({\n  'data-test': 'progress-bar'\n})<ProgressProps>`\n  height: 2px;\n  background: ${props => transparentize(props.theme.colors.mainColor, 1)};\n  width: ${props => (props.progress ? props.progress : 0)}%;\n`;\n\nexport const LearningObjectiveBlock = styled.div`\n  width: 100%;\n  font-size: 15px;\n  margin: 20px 0 31px 0;\n`;\n\nexport const QuestionBlock = styled.div<QuestionBlockProps>`\n  width: 100%;\n  font-size: 15px;\n  padding-top: ${props => (props.isFirstElement ? `90px` : `0px`)};\n  margin: 20px 0 ${BLOCK_MARGIN_OFFSET}px 0;\n`;\n\nexport const SectionSeparator = styled.div.attrs({\n  'data-test': 'section-separator'\n})`\n  margin: 80px 0 32px;\n`;\n\nexport const SectionCounter = styled.div`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  ${media.mobile`\n    font-size: 12px;\n  `}\n`;\n\nexport const SectionHeader = styled.div`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  font-size: 32px;\n  margin: 15px 0 0;\n  font-weight: 900;\n  line-height: 44.8px;\n  ${media.medium`\n    padding-right: 22px;\n  `}\n`;\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { RootAppState } from 'store/types';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { getTreeOfContentVisibility } from 'store/treeOfContent/selectors';\nimport {\n  getSections,\n  getNonInfoContentQuestions,\n  getAffectProgressQuestionsCountInSection,\n  getAnsweredAffectProgressQuestionsCountInSection,\n  getSectionIndex,\n  getSection,\n  isLearningObjective\n} from 'store/sections/selectors';\nimport { localize } from 'core/localization';\nimport * as settingSelectors from 'store/settings/selectors';\nimport * as questionActions from 'store/questions/actions';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { Separator } from 'components/common';\nimport { getQuestionUrl, getLearningObjectiveUrl } from 'utils/navigation';\nimport { getCourseTitle, getPoolIds } from 'store/course/selectors';\nimport { getElementIDInViewPort } from 'store/navigation/selectors';\nimport { getSectionId, getPoolQuestions } from 'store/questions/selectors';\nimport debounce from 'lodash.debounce';\nimport { DEBOUNCE_SCROLL_WAIT_TIME_MS, SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport {\n  isLearningObjectiveView,\n  isQuestionView\n} from 'components/shell/RouteTransition/viewChecker';\nimport { getCurrentLocationHash } from 'utils/window';\nimport QuestionPage from '../../question/QuestionPage';\nimport QuestionPageSubmitOnce from '../../question/QuestionPageSubmitOnce';\nimport LearningObjective from '../../learningObjective/LearningObjective';\n\nimport {\n  StickyContainer,\n  StickyHead,\n  SectionTitle,\n  SectionNumber,\n  SectionName,\n  StickyBody,\n  LearningObjectiveBlock,\n  QuestionBlock,\n  CourseLogo,\n  ProgressContainer,\n  Progress,\n  SectionCounter,\n  SectionHeader,\n  SectionSeparator,\n  BLOCK_MARGIN_OFFSET\n} from './OnePageCourse.styled';\n\ntype OnePageCourseProps = {\n  sectionId: any;\n  questionId: any;\n  sections: any[];\n  isCourseOnOnePage: boolean;\n  isOverallMasteryScore: boolean;\n  shouldSubmitAllQuestions: boolean;\n  getSectionById(id: string): string;\n  scrollToId(id: string, offset?: number): void;\n  elementIdInViewport: string;\n  score: number;\n  navigateToUrl(url: string, isReplace: boolean): void;\n  logoShown: boolean;\n  logoUrl: string;\n  affectProgressQuestionsCountInSection(sectionId: string): number;\n  answeredAffectProgressQuestionsCountInSection(sectionId: string): number;\n  match: { [key: string]: any };\n  history: { [key: string]: any };\n  location: { [key: string]: any };\n  sectionIndex(sectionId: string): number;\n  section(sectionId: string): { [key: string]: any };\n  isExpanded: boolean;\n  actions: { [key: string]: any };\n  title: string;\n  isLearningObjective(sectionId: string): boolean;\n  timerActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeElapsed: number;\n  isQuestionPool: boolean;\n  questionsForPool: any[];\n  isShowContentPagesEnabled: boolean;\n};\n\ntype LocationMap = {\n  [key: string]: string;\n};\n\nconst calculateLocationMap = (props: any) => {\n  const locationMap: { [x: string]: string } = {};\n  const populateLocationMap = (id: string) => {\n    const elementEndPosition =\n      (document.getElementById(`block-end-${id}`)?.offsetTop || 0) - BLOCK_MARGIN_OFFSET;\n    locationMap[elementEndPosition.toString()] = id;\n    return locationMap;\n  };\n\n  if (!props.isQuestionPool) {\n    props.sections.forEach((section: any) => {\n      if (section.learningObjective && props.isShowContentPagesEnabled) {\n        populateLocationMap(section.id);\n      }\n\n      section.questions.forEach((questionId: string) => {\n        populateLocationMap(questionId);\n      });\n    });\n\n    return locationMap;\n  }\n\n  props.questionsForPool.forEach((question: any) => {\n    populateLocationMap(question.id);\n  });\n\n  return locationMap;\n};\n\nconst Header = (props: {\n  match: { [key: string]: any };\n  sectionIndex(sectionId: string): number;\n  section(sectionId: string): { [key: string]: any };\n}) => {\n  const { match, sectionIndex, section } = props;\n  const { sectionId } = match.params;\n  return (\n    <SectionTitle>\n      <SectionNumber>Section {sectionIndex(sectionId) + 1}</SectionNumber>\n      <SectionName>{section(sectionId).title}</SectionName>\n    </SectionTitle>\n  );\n};\n\nconst ProgressBar = (props: {\n  match: { [key: string]: any };\n  affectProgressQuestionsCountInSection(sectionId: string): number;\n  answeredAffectProgressQuestionsCountInSection(sectionId: string): number;\n}) => {\n  const {\n    match,\n    answeredAffectProgressQuestionsCountInSection,\n    affectProgressQuestionsCountInSection\n  } = props;\n  const { sectionId } = match.params;\n  const answeredQuestionsCount = answeredAffectProgressQuestionsCountInSection(sectionId);\n  const allQuestionsCount = affectProgressQuestionsCountInSection(sectionId);\n  const progress = (answeredQuestionsCount / allQuestionsCount) * 100;\n  return (\n    <ProgressContainer>\n      <Progress progress={progress} />\n    </ProgressContainer>\n  );\n};\n\nconst SectionBreaker = (props: { sections: any[]; section: any; index: number }) => (\n  <SectionSeparator>\n    <SectionCounter>\n      {localize('[section x of y]', { index: props.index + 1, total: props.sections.length })}\n    </SectionCounter>\n    <SectionHeader>{props.section.title}</SectionHeader>\n    <Separator margin={48} opacity={0.1} color=\"textColor\" />\n  </SectionSeparator>\n);\n\nconst renderLearningObjective = (section: any, isQuestionPool: boolean) =>\n  section.learningObjective &&\n  !isQuestionPool && (\n    <LearningObjectiveBlock key={section.id} id={section.id}>\n      <LearningObjective className=\"LearningObjective\" sectionId={section.id} />\n      <div id={`block-end-${section.id}`} />\n    </LearningObjectiveBlock>\n  );\n\nconst getFirstElementId = (sections: any) => {\n  const [firstSection] = sections;\n  if (firstSection.learningObjective) {\n    return firstSection.id;\n  }\n  return firstSection.questions[0];\n};\n\nconst getLearningObjectiveTitlePosition = (id: string) => {\n  const learningObjectiveDiv = document.getElementById(id);\n  if (!learningObjectiveDiv) {\n    return 0;\n  }\n  const learningObjectiveTitle = learningObjectiveDiv.querySelectorAll('div')[0];\n  return learningObjectiveTitle\n    ? learningObjectiveTitle.offsetTop + learningObjectiveTitle.scrollHeight / 2\n    : 0;\n};\n\nconst getQuestionIndex = (\n  questionId: string,\n  sectionIndex: number,\n  props: { sections: any[]; questionsForPool: any[]; isQuestionPool: boolean }\n) => {\n  if (props.isQuestionPool) {\n    return props.questionsForPool.map(question => question.id).indexOf(questionId);\n  }\n  return props.sections[sectionIndex].nonInfoContentQuestions.indexOf(questionId);\n};\n\nconst getQuestionCount = (\n  sectionIndex: number,\n  props: { sections: any[]; questionsForPool: any[]; isQuestionPool: boolean }\n) => {\n  if (props.isQuestionPool) {\n    return props.questionsForPool.length;\n  }\n  return props.sections[sectionIndex].nonInfoContentQuestions.length;\n};\n\nconst questionProps = (\n  questionId: string,\n  sectionId: string,\n  index: number,\n  shouldRecalculateScrollLocation: any,\n  props: any\n) => {\n  const onePageIndex: any[] = [];\n  const { isQuestionPool, questionsForPool, sections } = props;\n  let theLastID: string;\n  if (isQuestionPool && questionsForPool.length) {\n    theLastID = questionsForPool[questionsForPool.length - 1].id;\n  } else {\n    sections.forEach((section: any) => {\n      if (section.learningObjective) {\n        onePageIndex.push(section.id);\n      }\n      section.questions.forEach((innerElement: any) => {\n        onePageIndex.push(innerElement);\n      });\n    });\n    theLastID = onePageIndex[onePageIndex.length - 1];\n    onePageIndex.shift();\n  }\n  return {\n    sectionId,\n    questionId,\n    currentScrollLocationId: questionId,\n    isLastBlock: questionId === theLastID,\n    onePageQuestionIndex: getQuestionIndex(questionId, index, props),\n    questionCountInOnePage: getQuestionCount(index, props),\n    shouldRecalculateScrollLocation,\n    match: props.match,\n    location: props.location,\n    history: props.history\n  };\n};\n\nconst renderQuestionBlock = (\n  props: any,\n  setShouldRecalculateScrollLocation: any,\n  questionId: string,\n  questionIndex: number,\n  section: any,\n  sectionIndex?: number\n) => {\n  const isFirstElement = props.isQuestionPool\n    ? questionIndex === 0 && !props.logoShown\n    : questionIndex === 0 &&\n      sectionIndex === 0 &&\n      !section.learningObjective &&\n      !props.logoShown &&\n      !props.isOverallMasteryScore;\n\n  return (\n    <QuestionBlock key={questionId} isFirstElement={isFirstElement} id={questionId}>\n      <div className=\"question-block\">\n        {props.shouldSubmitAllQuestions ? (\n          <QuestionPageSubmitOnce\n            {...questionProps(\n              questionId,\n              section.id,\n              sectionIndex || 0,\n              setShouldRecalculateScrollLocation,\n              props\n            )}\n          />\n        ) : (\n          <QuestionPage\n            {...questionProps(\n              questionId,\n              section.id,\n              sectionIndex || 0,\n              setShouldRecalculateScrollLocation,\n              props\n            )}\n          />\n        )}\n\n        <div id={`block-end-${questionId}`} />\n      </div>\n    </QuestionBlock>\n  );\n};\n\nexport const OnePageCourse = (props: OnePageCourseProps) => {\n  const [locationMap, setLocationMap] = useState<LocationMap>({});\n  const [shouldRecalculateScrollLocation, setShouldRecalculateScrollLocation] = useState(false);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [learningObjectiveQuestion, setLearningObjectiveQuestion] = useState(false);\n  const elementInViewportRef = useRef(\n    props.elementIdInViewport || getFirstElementId(props.sections)\n  );\n\n  const getActiveSectionID = (elementId: string) => {\n    if (props.isLearningObjective(elementId)) {\n      return elementId;\n    }\n    return props.getSectionById(elementId);\n  };\n  useEffect(() => {\n    document.title = `${localize('[course]')} | ${props.title}`;\n  });\n\n  useEffect(() => {\n    if (props.elementIdInViewport !== '') {\n      const isFirstSection =\n        props.sectionIndex(getActiveSectionID(props.elementIdInViewport)) === 0;\n      const getOffsetValue = () => (isFirstSection && props.logoShown ? 300 : 100);\n      props.scrollToId(props.elementIdInViewport, getOffsetValue());\n    }\n    const newLocationMap = calculateLocationMap(props);\n    setLocationMap(newLocationMap);\n    if (props.elementIdInViewport && props.elementIdInViewport !== elementInViewportRef.current) {\n      elementInViewportRef.current = props.elementIdInViewport;\n    }\n  }, [props.elementIdInViewport]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const newLocationMap = calculateLocationMap(props);\n    setLocationMap(newLocationMap);\n    setShouldRecalculateScrollLocation(false);\n  }, [shouldRecalculateScrollLocation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const navigateToUrl = useCallback(\n    debounce((url: string) => {\n      const currentPathname = getCurrentLocationHash().replace('#', '');\n      if (isQuestionView.test(currentPathname) || isLearningObjectiveView.test(currentPathname)) {\n        props.navigateToUrl(url, true);\n      }\n    }, DEBOUNCE_SCROLL_WAIT_TIME_MS),\n    []\n  ); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getIdInViewport = (currentPosition: number) => {\n    const blockEndPositions = Object.keys(locationMap).map(position => parseFloat(position));\n    const scrollableContainer = document.getElementById('stickyContainer');\n    const lastPosition = blockEndPositions[blockEndPositions.length - 1];\n    if (scrollableContainer) {\n      const hasReachedBottom =\n        Math.floor(scrollableContainer.scrollHeight - scrollableContainer.scrollTop) ===\n        scrollableContainer.clientHeight;\n      if (hasReachedBottom && lastPosition) {\n        return locationMap[lastPosition];\n      }\n    }\n\n    const startPosition = blockEndPositions.reduce((acc, val) => {\n      if (val >= currentPosition && acc < currentPosition) {\n        return val;\n      }\n      return acc;\n    }, blockEndPositions[0]);\n\n    const pageTop = document.getElementById('stickyContainer')?.scrollTop || 0;\n    const selectedElement = document.getElementById(locationMap[startPosition]);\n    const elementTop = selectedElement?.offsetTop;\n    const isElementTopVisible = pageTop <= (elementTop || 0);\n\n    return isElementTopVisible ? locationMap[startPosition] : elementInViewportRef.current;\n  };\n\n  const stickyContainerOnScroll = () => {\n    const { isTimerEnabled, timerActions, timeElapsed, timerStatus } = props;\n    const stickyContainer: any = document.getElementById('stickyContainer');\n    const currentScrollPosition = stickyContainer.scrollTop;\n    const currentComponentId = getIdInViewport(currentScrollPosition);\n\n    setScrollPosition(currentScrollPosition);\n    setLearningObjectiveQuestion(\n      props.isLearningObjective(currentComponentId) &&\n        currentScrollPosition <= getLearningObjectiveTitlePosition(currentComponentId)\n    );\n\n    if (currentComponentId !== elementInViewportRef.current) {\n      elementInViewportRef.current = currentComponentId;\n\n      if (props.isLearningObjective(elementInViewportRef.current)) {\n        navigateToUrl(getLearningObjectiveUrl(elementInViewportRef.current));\n      } else {\n        const sectionId = (\n          props.sections.find(\n            (section: any) => section.questions.indexOf(elementInViewportRef.current) >= 0\n          ) || props.sections[0]\n        ).id;\n\n        if (elementInViewportRef.current) {\n          props.actions.markAsOpened(elementInViewportRef.current);\n          navigateToUrl(getQuestionUrl(sectionId, elementInViewportRef.current));\n          if (\n            isTimerEnabled &&\n            (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n          ) {\n            timerActions.setTimerElapsed(timeElapsed);\n            timerActions.startTimer();\n          }\n        }\n      }\n    }\n  };\n\n  const { sections, isExpanded } = props;\n\n  const renderStickyBody = (section: any, index: number) => (\n    <div key={section.id}>\n      <StickyBody>\n        {props.logoShown && index === 0 && (\n          <CourseLogo logoUrl={props.logoUrl} altText={localize('[alt logo login]')} />\n        )}\n        {props.isShowContentPagesEnabled && renderLearningObjective(section, props.isQuestionPool)}\n        {props.isOverallMasteryScore && !section.learningObjective && (\n          <SectionBreaker sections={props.sections} section={section} index={index} />\n        )}\n        {section.questions.map((innerElement: any, innerIndex: number) =>\n          renderQuestionBlock(\n            props,\n            setShouldRecalculateScrollLocation,\n            innerElement,\n            innerIndex,\n            section,\n            index\n          )\n        )}\n      </StickyBody>\n    </div>\n  );\n\n  const renderQuestionPoolStickyBody = () => (\n    <div>\n      <StickyBody>\n        {props.logoShown && (\n          <CourseLogo logoUrl={props.logoUrl} altText={localize('[alt logo login]')} />\n        )}\n        {props.questionsForPool.map((poolQuestion: any, index: number) =>\n          renderQuestionBlock(props, setShouldRecalculateScrollLocation, poolQuestion.id, index, {\n            id: poolQuestion.sectionId\n          })\n        )}\n      </StickyBody>\n    </div>\n  );\n\n  return (\n    <StickyContainer\n      id={SKIP_TO_CONTENT_IDS.ONE_PAGE_COURSE}\n      background={true}\n      onScroll={() => stickyContainerOnScroll()}\n    >\n      {!props.isOverallMasteryScore && scrollPosition !== 0 && !learningObjectiveQuestion && (\n        <StickyHead isExpanded={isExpanded}>\n          <Header match={props.match} sectionIndex={props.sectionIndex} section={props.section} />\n          <ProgressBar\n            match={props.match}\n            affectProgressQuestionsCountInSection={props.affectProgressQuestionsCountInSection}\n            answeredAffectProgressQuestionsCountInSection={\n              props.answeredAffectProgressQuestionsCountInSection\n            }\n          />\n        </StickyHead>\n      )}\n      {!props.isQuestionPool &&\n        sections.map((section: any, index: number) => renderStickyBody(section, index))}\n      {props.isQuestionPool && renderQuestionPoolStickyBody()}\n    </StickyContainer>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    logoUrl: settingSelectors.getLogo(state),\n    logoShown: settingSelectors.isMainLogoShown(state),\n    sections: getSections(state).map(section => ({\n      ...section,\n      nonInfoContentQuestions: getNonInfoContentQuestions(state, section.id)\n    })),\n    isCourseOnOnePage: settingSelectors.isAllQuestionsOnOnePage(state),\n    isOverallMasteryScore: settingSelectors.isOverallMasteryScore(state),\n    shouldSubmitAllQuestions: settingSelectors.shouldSubmitAllQuestions(state),\n    elementIdInViewport: getElementIDInViewPort(state),\n    sectionId: (questionId: string) => getSectionId(state, questionId),\n    getSectionById: (questionId: string) => getSectionId(state, questionId),\n    affectProgressQuestionsCountInSection: (sectionId: string) =>\n      getAffectProgressQuestionsCountInSection(state, sectionId),\n    answeredAffectProgressQuestionsCountInSection: (sectionId: string) =>\n      getAnsweredAffectProgressQuestionsCountInSection(state, sectionId),\n    sectionIndex: (sectionId: string) => getSectionIndex(state, sectionId),\n    section: (sectionId: string) => getSection(state, sectionId),\n    isExpanded: getTreeOfContentVisibility(state),\n    title: getCourseTitle(state),\n    isLearningObjective: (sectionId: string) => isLearningObjective(state, sectionId),\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: settingSelectors.getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state),\n    questionsForPool: getPoolQuestions(state, getPoolIds(state)),\n    isQuestionPool: settingSelectors.isQuestionPoolEnabled(state),\n    isShowContentPagesEnabled: settingSelectors.isShowContentPagesEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(questionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default withRouter(\n  withNavigation(connect(mapStateToProps, mapDispatchToProps)(OnePageCourse))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RootAppState } from '../../../store/types';\nimport {\n  isAllQuestionsOnOnePage,\n  shouldSubmitAllQuestions\n} from '../../../store/settings/selectors';\nimport DefaultLayout from './defaultLayout/DefaultLayout';\nimport OnePageCourse from './singlePageLayout/OnePageCourse';\n\ntype CourseLayoutProps = {\n  isCourseOnOnePage: boolean;\n  isSubmitAtOnce: boolean;\n};\n\nexport class CourseLayout extends Component<CourseLayoutProps, {}> {\n  render() {\n    const { isCourseOnOnePage } = this.props;\n    if (isCourseOnOnePage) {\n      return <OnePageCourse {...this.props} />;\n    }\n    return <DefaultLayout {...this.props} />;\n  }\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state)\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseLayout);\n","import React, { Fragment, Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getTreeOfContentVisibility } from 'store/treeOfContent/selectors';\nimport TreeOfContent from 'components/treeOfContent/TreeOfContent';\nimport { RESULTS_PATH, QUESTION_PATH, LEARNING_OBJECTIVE_PATH } from 'constants/navigation';\nimport * as actions from 'store/treeOfContent/actions';\nimport { RootAppState } from 'store/types';\nimport { getBackground, isMainLogoShown, isAllQuestionsOnOnePage } from 'store/settings/selectors';\nimport {\n  isLearningObjectiveView,\n  isQuestionView,\n  isResultsView\n} from 'components/shell/RouteTransition/viewChecker';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport { getElementIDInViewPort } from 'store/navigation/selectors';\nimport { getPopupVisibility } from 'store/popup/selectors';\nimport LearningObjective from '../learningObjective/LearningObjective';\nimport ResultsPage from '../results/ResultsPage';\nimport CourseOverviewRouteTransition from './RouteTransition';\nimport NotFound from '../../../components/notFound/NotFound';\nimport CourseLayout from '../courseLayout/CourseLayout';\n\nimport {\n  Container,\n  PageContainer,\n  ContentContainer,\n  CourseOverviewSidebar,\n  Blockout\n} from './CourseOverview.styled';\nimport SkipToContent from '../../../components/common/SkipToContent';\n\ntype CourseOverviewProps = {\n  theme: { [key: string]: any };\n  isLowResolution: boolean;\n  isTreeOfContentExpanded: boolean;\n  actions: { [key: string]: any };\n  background: { [key: string]: any };\n  logoShown: boolean;\n  isCourseOnOnePage: boolean;\n  match: { [key: string]: any };\n  history: { [key: string]: any };\n  location: { [key: string]: any };\n  elementIdInViewport: string;\n  popupExpanded: boolean;\n};\nexport class CourseOverview extends Component<CourseOverviewProps, {}> {\n  getElement = (elementId: string) => document.getElementById(elementId);\n\n  getElementHeader = (elementId: string) => {\n    const element: HTMLElement | null = this.getElement(elementId);\n    if (element) {\n      return element.querySelectorAll('h1')[0];\n    }\n    return null;\n  };\n\n  focusContentId = () => {\n    const { isCourseOnOnePage = false, location, elementIdInViewport } = this.props;\n    if (isQuestionView.test(location.pathname)) {\n      if (isCourseOnOnePage) {\n        return this.getElementHeader(elementIdInViewport)?.focus();\n      }\n      return this.getElement(SKIP_TO_CONTENT_IDS.QUESTION_PAGE)?.focus();\n    }\n\n    if (isLearningObjectiveView.test(location.pathname)) {\n      if (isCourseOnOnePage) {\n        return this.getElementHeader(elementIdInViewport)?.focus();\n      }\n      return this.getElement(SKIP_TO_CONTENT_IDS.LEARNING_OBJECTIVE_PAGE)?.focus();\n    }\n\n    if (isResultsView.test(location.pathname)) {\n      return this.getElement(SKIP_TO_CONTENT_IDS.RESULT_PAGE)?.focus();\n    }\n\n    return this.getElement(SKIP_TO_CONTENT_IDS.QUESTION_PAGE)?.focus();\n  };\n\n  render() {\n    const {\n      isTreeOfContentExpanded,\n      background,\n      logoShown,\n      isCourseOnOnePage = false,\n      popupExpanded\n    } = this.props;\n    return (\n      <Fragment>\n        {!popupExpanded && <SkipToContent onClick={() => this.focusContentId()} />}\n        <CourseOverviewSidebar\n          background={background}\n          isTreeOfContentExpanded={isTreeOfContentExpanded}\n        >\n          <TreeOfContent />\n        </CourseOverviewSidebar>\n        <Blockout\n          isTreeOfContentExpanded={isTreeOfContentExpanded}\n          onClick={this.props.actions.toggleTreeOfContentVisibility}\n          ariaHidden={true}\n        />\n\n        <Route\n          render={({ location }) => (\n            <CourseOverviewRouteTransition\n              background={background}\n              isTreeOfContentExpanded={isTreeOfContentExpanded}\n              location={location}\n              isCourseOnOnePage={isCourseOnOnePage}\n            >\n              <Container>\n                <PageContainer>\n                  <ContentContainer\n                    isTreeOfContentExpanded={isTreeOfContentExpanded}\n                    logoShown={logoShown}\n                    isCourseOnOnePage={isCourseOnOnePage}\n                    dynamicHeight={document.documentElement.clientHeight}\n                    isOnOnePageView={\n                      isCourseOnOnePage &&\n                      (isQuestionView.test(location.pathname) ||\n                        isLearningObjectiveView.test(location.pathname))\n                    }\n                  >\n                    <Switch location={location}>\n                      <Route\n                        exact\n                        path={LEARNING_OBJECTIVE_PATH}\n                        component={isCourseOnOnePage ? CourseLayout : LearningObjective}\n                      />\n                      <Route exact path={QUESTION_PATH} component={CourseLayout} />\n\n                      <Route exact path={RESULTS_PATH} component={ResultsPage} />\n                      <Route exact path=\"*\" component={NotFound} />\n                    </Switch>\n                  </ContentContainer>\n                </PageContainer>\n              </Container>\n            </CourseOverviewRouteTransition>\n          )}\n        />\n      </Fragment>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isLowResolution: state.app.isLowResolution,\n    isTreeOfContentExpanded: getTreeOfContentVisibility(state),\n    background: getBackground(state),\n    logoShown: isMainLogoShown(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    elementIdInViewport: getElementIDInViewPort(state),\n    popupExpanded: getPopupVisibility(state)\n  };\n}\nexport default withRouter(\n  withNavigation(connect(mapStateToProps, mapDispatchToProps)(CourseOverview))\n);\n","import styled from 'styled-components';\n\ntype FormProps = {\n  idElement: string;\n}\nexport const Form = styled.form.attrs((props: FormProps) => ({\n  id: props.idElement\n}))<FormProps>`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport const FormContentWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getEmail, getName } from 'store/user/selectors';\nimport { Form } from './AuthForm.styled';\nimport { RootAppState } from 'store/types';\n\ntype AuthFormProps = {\n  renderContent: any;\n  onSubmit(e: any, data: any): Promise<void>;\n  formId: string;\n  userEmail: string;\n  userName: string;\n  shortTermAccess?: boolean;\n  agreementAccepted?: boolean;\n  isEmailPasswordCombinationNotExists?: boolean;\n  isUserExist?: boolean;\n  resetPasswordSendMessage?: boolean;\n  checkIsUserExist?(email: string): void;\n  hideMessage?(): void;\n  isUnknownError?: boolean;\n  setFieldRefs?(fieldRefs: any): void;\n};\ntype AuthFormState = {\n  [key: string]: any;\n  email: string;\n  name: string;\n  password: string;\n  agreement: string;\n  validationStatusBeforeSubmit: any;\n  fieldRefs: { [key: string]: any };\n};\n\nexport class AuthForm extends Component<AuthFormProps, AuthFormState> {\n  fieldRefs: { [key: string]: any };\n  constructor(props: AuthFormProps) {\n    super(props);\n\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n      agreement: '',\n      validationStatusBeforeSubmit: {\n        name: true,\n        email: true,\n        password: true,\n        agreement: true\n      },\n      fieldRefs: {},\n      shortTermAccess: true,\n      agreementAccepted: false\n    };\n    this.fieldRefs = {};\n  }\n\n  componentDidMount() {\n    const { userEmail, userName } = this.props;\n\n    if (userEmail || userName) {\n      this.setState({\n        email: userEmail || '',\n        name: userName || ''\n      });\n    }\n\n    this.setState({\n      fieldRefs: this.fieldRefs\n    });\n  }\n\n  onChange = (event: any) => {\n    event.target.classList.add('changed');\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  beforeSubmitValidation = (event: any, onSubmit: any) => {\n    event.preventDefault();\n    const { hideMessage, isUserExist } = this.props;\n    let validationStatusBeforeSubmit: { [key: string]: boolean } = {};\n    for (const ref in this.fieldRefs) {\n      validationStatusBeforeSubmit = {\n        ...validationStatusBeforeSubmit,\n        [ref]: this.returnValidationStatusElem(this.fieldRefs[ref])\n      };\n    }\n\n    this.setState({\n      validationStatusBeforeSubmit\n    });\n\n    for (const ref in validationStatusBeforeSubmit) {\n      if (!validationStatusBeforeSubmit[ref]) {\n        return;\n      }\n    }\n\n    if (typeof hideMessage === 'function') {\n      hideMessage();\n    }\n\n    if (!isUserExist) {\n      onSubmit(event, {\n        ...this.state,\n        email: this.state.email.toLowerCase(),\n        shortTermAccess: this.props.shortTermAccess\n      });\n    }\n  };\n\n  returnValidationStatusElem = (elem: any) => {\n    return elem ? elem.validity.valid : false;\n  };\n\n  setValidationStatusElem = (elem: any) => {\n    const elemValid = elem ? elem.validity.valid : false;\n    this.setState({ validationStatusBeforeSubmit: { [elem.name]: elemValid } });\n  };\n\n  setRefs = (element: any) => {\n    if (element) {\n      this.fieldRefs[element.name] = element;\n    }\n    if (this.props.setFieldRefs) {\n      this.props.setFieldRefs(this.fieldRefs);\n    }\n  };\n\n  render() {\n    const { fieldRefs } = this.state;\n    const {\n      formId,\n      onSubmit,\n      resetPasswordSendMessage,\n      shortTermAccess,\n      renderContent,\n      isEmailPasswordCombinationNotExists,\n      isUserExist,\n      isUnknownError,\n      agreementAccepted\n    } = this.props;\n    const props = {\n      refEmail: fieldRefs.email,\n      onChange: this.onChange,\n      setRefs: this.setRefs,\n      setValidationStatusElem: this.setValidationStatusElem,\n      validationStatusBeforeSubmit: this.state.validationStatusBeforeSubmit,\n      email: this.state.email,\n      isEmailPasswordCombinationNotExists,\n      resetPasswordSendMessage,\n      shortTermAccess,\n      isUserExist,\n      isUnknownError,\n      agreementAccepted\n    };\n    return (\n      <Form\n        idElement={formId}\n        onSubmit={event => {\n          this.beforeSubmitValidation(event, onSubmit);\n        }}\n        noValidate\n      >\n        {renderContent(props)}\n      </Form>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    userEmail: getEmail(state),\n    userName: getName(state)\n  };\n}\n\nexport default connect(mapStateToProps)(AuthForm);\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport Input from '../Input';\n\ntype EmailInputProps = {\n  userEmail: string;\n  email?: string;\n  textError: string;\n  isUserExist?: boolean;\n  validationStatusBeforeSubmit: boolean;\n  checkIsUserExist?(email: string): void;\n  onChange(e: any): void;\n  setRefs(n: any): void;\n  onFocus(e: any): void;\n  pattern?: any;\n};\n\nexport class EmailInput extends React.Component<EmailInputProps, {}> {\n  static defaultProps = {\n    onFocus: () => null\n  };\n\n  render() {\n    const {\n      userEmail,\n      email,\n      isUserExist,\n      checkIsUserExist,\n      onChange,\n      setRefs,\n      textError,\n      validationStatusBeforeSubmit,\n      onFocus,\n      pattern\n    } = this.props;\n    return (\n      <Input\n        idInput=\"email\"\n        type={INPUT_TYPE.EMAIL}\n        refInput={(node: any) => setRefs(node)}\n        name=\"email\"\n        labelText={localize('[email]')}\n        defaultValue={userEmail}\n        placeholder=\"john@example.com\"\n        autoComplete=\"new-email\"\n        onChange={(e: any) => onChange(e)}\n        validIcon={true}\n        loadIcon={!!checkIsUserExist}\n        validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n        textError={textError}\n        onBlur={checkIsUserExist ? () => checkIsUserExist(email || '') : () => null}\n        isUserExist={isUserExist}\n        onFocus={(e: any) => onFocus(e)}\n        pattern={pattern}\n      />\n    );\n  }\n}\n\nexport default EmailInput;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport Input from '../Input';\n\ntype NameInputProps = {\n  userName: string;\n  validationStatusBeforeSubmit: boolean;\n  onChange(): void;\n  setRefs(node: any): void;\n  onFocus?(e: any): void;\n};\n\nexport class NameInput extends React.Component<NameInputProps, {}> {\n  render() {\n    const { userName, onChange, setRefs, validationStatusBeforeSubmit, onFocus } = this.props;\n\n    return (\n      <Input\n        idInput=\"name\"\n        type={INPUT_TYPE.TEXT}\n        refInput={(node: any) => setRefs(node)}\n        name=\"name\"\n        labelText={localize('[name]')}\n        defaultValue={userName}\n        placeholder=\"John Doe\"\n        onChange={onChange}\n        validIcon={true}\n        pattern=\"(([a-zA-Z]|[\\xC0-\\uFFFF]|\\d|-)+\\s?)+\"\n        validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n        onFocus={onFocus}\n      />\n    );\n  }\n}\n\nexport default NameInput;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport Input from '../Input';\n\ntype PasswordInputProps = {\n  validationStatusBeforeSubmit: boolean;\n  pattern: string;\n  showValidationMessage: boolean;\n  onChange(e: any): void;\n  setRefs(node: any): void;\n  onFocus?(e: any): void;\n};\n\nexport class PasswordInput extends React.Component<PasswordInputProps, {}> {\n  render() {\n    const {\n      onChange,\n      setRefs,\n      validationStatusBeforeSubmit,\n      pattern,\n      showValidationMessage,\n      onFocus\n    } = this.props;\n\n    return (\n      <Input\n        idInput=\"password\"\n        type={INPUT_TYPE.PASSWORD}\n        refInput={(node: any) => setRefs(node)}\n        name=\"password\"\n        placeholder={localize('[password]')}\n        labelText={localize('[password]')}\n        autoComplete=\"new-password\"\n        onChange={onChange}\n        showValidationMessage={showValidationMessage}\n        pattern={pattern}\n        validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n        onFocus={onFocus}\n      />\n    );\n  }\n}\n\nexport default PasswordInput;\n","import styled, { css } from 'styled-components';\nimport { shake } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport { Button } from 'components/common';\nimport media from 'components/mixins/media';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport {\n  ButtonElement,\n  CheckIcon,\n  ButtonWrapper\n} from 'components/common/SwitchButton/SwitchButton.styled';\n\ntype InputContainerProps = {\n  size: number;\n}\nexport const InputContainer = styled.div<InputContainerProps>`\n  margin-bottom: ${props => props.size}px;\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonSubmitSingUp = styled(Button)`\n  ${buttonDefaultStyle};\n  background-color: ${props => props.theme.colors.mainColor};\n  color: ${props => props.theme.colors.buttonTextColor};\n  margin-top: 24px;\n  min-width: 198px;\n  max-width: 320px;\n  text-overflow: ellipsis;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${media.mobile`\n    min-width: 160px;\n    max-width: 260px;\n  `};\n  & span {\n    font-size: 14px;\n  }\n  & .icon {\n    font-size: 8px;\n  }\n  &:hover {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: none;\n  }\n  &:active {\n    background-color: ${props => transparentize(props.theme.colors.mainColor)};\n  }\n  & > span:first-child {\n    position: relative;\n    width: auto;\n    padding: 0 10px;\n  }\n  & > span:first-child:after {\n    content: '*';\n    position: absolute;\n    top: -3px;\n    left: 91%;\n  }\n`;\n\nexport const AgreementCheckBox = styled.input.attrs({\n  type: 'checkbox',\n  required: true\n})`\n  display: none;\n  visibility: hidden;\n`;\n\nexport const AgreementLabel = styled.label``;\n\ntype CheckboxContainerProps = {\n  children?: any;\n  validationStatusBeforeSubmit: boolean;\n  isChecked: boolean;\n};\n\nexport const CheckboxContainer = styled.div<CheckboxContainerProps>`\n  user-select: none;\n  margin-top: 18px;\n  line-height: 2px;\n  display: flex;\n  align-item: center;\n  width: 420px;\n  ${media.mobile`\n      width: 360px;\n  `};\n  ${props =>\n    props.validationStatusBeforeSubmit === false &&\n    css`\n      & {\n        ${shake('horizontal', 0.2, '5')}\n      }\n    `};\n  ${ButtonWrapper} {\n    width: 30px;\n    outline: none;\n    ${ButtonElement} {\n      margin-top: -1px;\n      margin-left: 40px;\n      background-color: transparent;\n      border: 1px solid;\n      border-color: ${props =>\n        props.validationStatusBeforeSubmit === false && !props.isChecked\n          ? props.theme.colors.incorrectColor\n          : transparentize(props.theme.colors.textColor, 0.5)};\n    }\n    &[role='checkbox'] {\n      height: 30px;\n      cursor: pointer;\n      ${CheckIcon} {\n        color: black;\n      }\n      &:focus {\n        & ${ButtonElement} {\n          border-color: ${props => props.theme.colors.mainColor};\n        }\n      }\n      ${props =>\n        !props.isChecked &&\n        css`\n          &:hover {\n            & ${CheckIcon} {\n              opacity: 0.2;\n            }\n          }\n        `}\n      }\n    }\n  }\n\n  ${AgreementLabel} {\n    width: 290px;\n    margin-left: 5px;\n    margin-top: 10px;\n    ${media.mobile`\n      width: 220px;\n    `};\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Text, Button } from 'components/common';\nimport media from 'components/mixins/media';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { secondaryFont } from 'components/mixins/typography';\nimport {\n  ButtonElement,\n  TextElement,\n  CheckIcon,\n  ButtonWrapper\n} from 'components/common/SwitchButton/SwitchButton.styled';\n\ntype CheckboxContainerProps = {\n  children?: any;\n};\nexport const CheckboxContainer = styled.div<CheckboxContainerProps>`\n  user-select: none;\n  padding: 0;\n  cursor: pointer;\n\n  ${ButtonWrapper} {\n    padding: 0;\n    align-items: center;\n\n    ${ButtonElement} {\n      align-self: center;\n      background-color: transparent;\n      border: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.2)};\n      ${props =>\n        props.children &&\n        props.children.props.selected &&\n        css`\n          background-color: ${props.theme.colors.correctColor};\n          border-color: ${props.theme.colors.correctColor};\n        `};\n    }\n\n    ${TextElement} {\n      ${secondaryFont};\n      font-size: 12px;\n      font-weight: normal;\n      line-height: normal;\n      opacity: 0.7;\n    }\n\n    &[role='checkbox'] {\n      padding: 3px 17px 3px 35px;\n    }\n    .show-on-hover {\n      left: 14px;\n      margin-top: -7px;\n      width: 13px;\n      height: 13px;\n    }\n\n    &:hover,\n    &:focus {\n      ${TextElement} {\n        opacity: 0.8;\n      }\n\n      ${ButtonElement} {\n        border-color: ${props => props.theme.colors.correctColor};\n\n        ${props =>\n          !props.children.props.selected &&\n          css`\n            ${CheckIcon} {\n              display: none;\n            }\n          `};\n      }\n    }\n  }\n`;\n\nexport const ButtonSubmit = styled(Button)`\n  ${buttonDefaultStyle};\n  background-color: ${props => props.theme.colors.mainColor};\n  color: ${props => props.theme.colors.buttonTextColor};\n  font-weight: 600;\n  min-width: 198px;\n  max-width: 320px;\n  text-overflow: ellipsis;\n  ${media.mobile`\n    min-width: 160px;\n    max-width: 260px;\n  `};\n  & span {\n    font-size: 14px;\n  }\n  & .icon {\n    font-size: 8px;\n  }\n  &:hover {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: none;\n  }\n  &:active {\n    background-color: ${props => transparentize(props.theme.colors.mainColor)};\n  }\n`;\n\nexport const ControlContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 73px;\n  margin-top: 14px;\n  padding: 0 16px;\n  line-height: normal;\n`;\n\nexport const MessageText = styled(Text).attrs(props => {\n  return {};\n})`\n  ${secondaryFont};\n  && {\n    font-size: 10px;\n    font-weight: normal;\n    line-height: 1.5;\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\nexport const MessageTextWrapper = styled.span`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const LinkWrapper = styled.div``;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport { withTheme } from 'styled-components';\nimport { getEmail, getName } from 'store/user/selectors';\nimport { isCrossDeviceSavingEnabled } from 'store/settings/selectors';\nimport progressStorage from 'core/progressStorage';\nimport { STATUS_OK } from 'constants/progressStorage';\nimport { SwitchButton, StatusTooltip, Button } from 'components/common';\nimport { BUTTON, SIZES, TOOLTIP } from 'constants/components';\nimport { RootAppState } from 'store/types';\nimport AuthForm from '../AuthForm';\nimport EmailInput from '../AuthForm/EmailInput';\nimport NameInput from '../AuthForm/NameInput';\nimport PasswordInput from '../AuthForm/PasswordInput';\nimport { InputContainer } from '../SignUpForm/SignUpForm.styled';\nimport { FormContentWrapper } from '../AuthForm/AuthForm.styled';\nimport {\n  ButtonSubmit,\n  ControlContainer,\n  MessageText,\n  CheckboxContainer,\n  LinkWrapper,\n  MessageTextWrapper\n} from './LoginForm.styled';\n\ntype LoginFormProps = {\n  onSubmit(e: any, data: any): Promise<void>;\n  formId: string;\n  userEmail: string;\n  userName: string;\n  isCrossDeviceSavingEnabled: boolean;\n  isEmailPasswordCombinationNotExists: boolean;\n  resetStatuses(): void;\n  theme?: any;\n  setFieldRefs?(fieldRefs: any): void;\n};\n\ntype LoginFormState = {\n  shortTermAccess: boolean;\n  resetPasswordSendMessage: boolean;\n};\n\nexport class LoginForm extends React.Component<LoginFormProps, LoginFormState> {\n  templateTheme: any;\n\n  constructor(props: LoginFormProps) {\n    super(props);\n    this.templateTheme = props.theme;\n    this.state = {\n      shortTermAccess: true,\n      resetPasswordSendMessage: false\n    };\n  }\n\n  static defaultProps = {\n    isEmailPasswordCombinationNotExists: false\n  };\n\n  hideMessage = () => {\n    this.setState({ resetPasswordSendMessage: false });\n  };\n\n  onPasswordRestore = async (refEmail: any, setValidationStatusElem: any) => {\n    const emailValid = refEmail ? refEmail.validity.valid : false;\n    setValidationStatusElem(refEmail);\n\n    if (!emailValid) {\n      return;\n    }\n\n    let status = await progressStorage.resetPassword(refEmail.value.toLowerCase());\n    this.setState({ resetPasswordSendMessage: status === STATUS_OK });\n  };\n\n  renderforgotPasswordButton(refEmail: any, setValidationStatusElem: any) {\n    return (\n      <LinkWrapper>\n        <Button\n          type={BUTTON.TYPE.BUTTON}\n          layout={BUTTON.LAYOUT.SIMPLE}\n          size={SIZES.SMALL}\n          onClick={() => this.onPasswordRestore(refEmail, setValidationStatusElem)}\n          onBlur={this.hideMessage}\n          data-test=\"forgot-password-button\"\n        >\n          {localize('[forgot pass]')}\n        </Button>\n      </LinkWrapper>\n    );\n  }\n\n  credentialsCombinationNotExistsMessage() {\n    return (\n      <MessageTextWrapper>\n        <MessageText theme={this.templateTheme} appearance=\"span\">\n          {localize('[error login email]')}\n        </MessageText>\n        <MessageText theme={this.templateTheme} appearance=\"span\">\n          {localize('[error login pass]')}\n        </MessageText>\n      </MessageTextWrapper>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <ButtonSubmit layout={BUTTON.LAYOUT.PRIMARY} suffixIcon=\"arrow-right\" type=\"submit\">\n        {localize('[login button]')}\n      </ButtonSubmit>\n    );\n  }\n\n  renderContent = (props: any) => {\n    const { isCrossDeviceSavingEnabled, resetStatuses, userEmail, userName } = this.props;\n    const {\n      refEmail,\n      isEmailPasswordCombinationNotExists,\n      onChange,\n      setRefs,\n      validationStatusBeforeSubmit,\n      setValidationStatusElem,\n      resetPasswordSendMessage,\n      shortTermAccess\n    } = props;\n\n    return (\n      <FormContentWrapper>\n        <InputContainer size={40}>\n          <EmailInput\n            userEmail={userEmail}\n            onChange={onChange}\n            setRefs={setRefs}\n            textError={localize('[error email input]')}\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.email}\n            onFocus={resetStatuses}\n          />\n        </InputContainer>\n        {!isCrossDeviceSavingEnabled && (\n          <InputContainer size={40}>\n            <NameInput\n              userName={userName}\n              onChange={onChange}\n              setRefs={setRefs}\n              validationStatusBeforeSubmit={validationStatusBeforeSubmit.name}\n              onFocus={resetStatuses}\n            />\n          </InputContainer>\n        )}\n        {isCrossDeviceSavingEnabled && (\n          <InputContainer size={12}>\n            <PasswordInput\n              onChange={onChange}\n              setRefs={setRefs}\n              validationStatusBeforeSubmit={validationStatusBeforeSubmit.password}\n              pattern=\"\\S+\"\n              showValidationMessage={false}\n              onFocus={resetStatuses}\n            />\n            <ControlContainer>\n              {this.renderWithTooltip(\n                TOOLTIP.CORRECT,\n                resetPasswordSendMessage,\n                localize('[reset password link sent success]'),\n                this.renderforgotPasswordButton(refEmail, setValidationStatusElem),\n                false,\n                this.hideMessage\n              )}\n              <CheckboxContainer>\n                <SwitchButton\n                  multiple={true}\n                  text={localize('[remember me]')}\n                  selected={!shortTermAccess}\n                  aria-checked={!shortTermAccess}\n                  size={SIZES.SMALL}\n                  tabIndex={0}\n                  onClick={() => this.setState({ shortTermAccess: !shortTermAccess })}\n                  onKeyDown={(event: any) => {\n                    if (event.key === ` ` || event.key === 'Enter') {\n                      event.preventDefault();\n                      this.setState({ shortTermAccess: !shortTermAccess });\n                    }\n                  }}\n                />\n              </CheckboxContainer>\n            </ControlContainer>\n          </InputContainer>\n        )}\n        {this.renderWithTooltip(\n          TOOLTIP.INCORRECT,\n          isEmailPasswordCombinationNotExists,\n          this.credentialsCombinationNotExistsMessage(),\n          this.renderLoginButton(),\n          false\n        )}\n      </FormContentWrapper>\n    );\n  };\n\n  render() {\n    const { resetPasswordSendMessage, shortTermAccess } = this.state;\n    const { onSubmit, formId, isEmailPasswordCombinationNotExists, setFieldRefs } = this.props;\n\n    return (\n      <AuthForm\n        shortTermAccess={shortTermAccess}\n        resetPasswordSendMessage={resetPasswordSendMessage}\n        formId={formId}\n        onSubmit={onSubmit}\n        isEmailPasswordCombinationNotExists={isEmailPasswordCombinationNotExists}\n        hideMessage={this.hideMessage}\n        renderContent={this.renderContent}\n        setFieldRefs={setFieldRefs}\n      />\n    );\n  }\n\n  renderWithTooltip = (\n    status: any,\n    showTooltip: any,\n    message: any,\n    actionElement: any,\n    interactive: boolean,\n    hideMessage: any = () => null\n  ) => (\n    <StatusTooltip\n      popoverPosition={'top'}\n      layout={status}\n      onRequestClose={hideMessage}\n      showTooltip={showTooltip}\n      message={message}\n      popoverButton={actionElement}\n      transitionDuration={0.2}\n      eventHandler={'click'}\n      interactive={interactive}\n    />\n  );\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    userEmail: getEmail(state),\n    userName: getName(state),\n    isCrossDeviceSavingEnabled: isCrossDeviceSavingEnabled(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(LoginForm));\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport Icon from 'components/common/Icon';\nimport Text from 'components/common/Text';\n\nconst variables = {\n  colors: {\n    facebook: '#4267b2',\n    linkedin: '#0077b5',\n    google: '#ea4335'\n  }\n};\n\nexport const IconElement = styled(Icon)`\n  font-size: 13px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n`;\n\ntype LinkElement = {\n  href: string;\n  ariaLabel: string;\n  name: string;\n}\nexport const LinkElement = styled.a.attrs((props: LinkElement) => ({\n  href: props.href,\n  'aria-label': props.ariaLabel\n}))<LinkElement>`\n  text-decoration: none;\n  text-align: center;\n  border-radius: 100px;\n  padding: 8px;\n  background-color: ${props => props.theme.colors.contentBodyColor};\n  border: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.1)};\n  width: 53px;\n  height: 31px;\n  margin: 0 8px;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: none;\n  }\n  ${props =>\n    props.name === 'facebook'\n      ? css`\n          &:hover,\n          &:focus {\n            border: 1px solid ${variables.colors.facebook};\n          }\n          &:hover ${IconElement}, &:focus ${IconElement} {\n            color: ${variables.colors.facebook};\n          }\n          &:active {\n            background-color: ${transparentize(variables.colors.facebook, 0.1)};\n          }\n        `\n      : css``};\n  ${props =>\n    props.name === 'linkedin'\n      ? css`\n          &:hover,\n          &:focus {\n            border: 1px solid ${variables.colors.linkedin};\n          }\n          &:hover ${IconElement}, &:focus ${IconElement} {\n            color: ${variables.colors.linkedin};\n          }\n          &:active {\n            background-color: ${transparentize(variables.colors.linkedin, 0.1)};\n          }\n        `\n      : css``};\n  ${props =>\n    props.name === 'google'\n      ? css`\n          &:hover,\n          &:focus {\n            border: 1px solid ${variables.colors.google};\n          }\n          &:hover ${IconElement}, &:focus ${IconElement} {\n            color: ${variables.colors.google};\n          }\n          &:active {\n            background-color: ${transparentize(variables.colors.google, 0.1)};\n          }\n        `\n      : css``};\n`;\n\nexport const SocialLoginContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const TextSocial = styled(Text)`\n  ${secondaryFont};\n  font-size: 14px;\n  text-align: center;\n  font-weight: normal;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  line-height: 1;\n  padding: 10px 16px;\n  flex-shrink: 0;\n`;\n\nexport const SeparatorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport Separator from 'components/common/Separator';\nimport { localize } from 'core/localization';\nimport progressStorage from 'core/progressStorage';\nimport {\n  LinkElement,\n  SocialLoginContainer,\n  IconElement,\n  TextSocial,\n  SeparatorContainer\n} from './SocialLogin.styled';\n\ntype SocialLoginProps = {\n  title: string;\n};\nexport class SocialLogin extends React.Component<SocialLoginProps, {}> {\n  render() {\n    const { title } = this.props;\n    return (\n      <React.Fragment>\n        <SeparatorContainer>\n          <Separator opacity={0.05} color=\"textColor\" />\n          <TextSocial appearance=\"span\">{title}</TextSocial>\n          <Separator opacity={0.05} color=\"textColor\" />\n        </SeparatorContainer>\n        <SocialLoginContainer>\n          <LinkElement\n            name=\"facebook\"\n            ariaLabel={localize('[btn FB label]')}\n            href={progressStorage.getSocialNetworkAuthLink('facebook')}\n          >\n            <IconElement name=\"facebook\" />\n          </LinkElement>\n          <LinkElement\n            name=\"linkedin\"\n            ariaLabel={localize('[btn LI label]')}\n            href={progressStorage.getSocialNetworkAuthLink('linkedin')}\n          >\n            <IconElement name=\"linkedin\" />\n          </LinkElement>\n          <LinkElement\n            name=\"google\"\n            ariaLabel={localize('[btn G label]')}\n            href={progressStorage.getSocialNetworkAuthLink('google')}\n          >\n            <IconElement name=\"google\" />\n          </LinkElement>\n        </SocialLoginContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLogin;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { transition } from 'components/mixins/interactivity';\nimport { secondaryFont } from 'components/mixins/typography';\n\ntype ListItemElementsProps = {\n  ariaCurrent: string | boolean;\n};\nexport const ListItemElements = styled.li.attrs((props: ListItemElementsProps) => ({\n  'aria-current': props.ariaCurrent\n}))<ListItemElementsProps>`\n  ${secondaryFont};\n  font-size: 14px;\n  font-weight: normal;\n  overflow: visible;\n  margin: 0 21px;\n  & a {\n    display: inline-block;\n    text-decoration: none;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  }\n  &.active a {\n    color: ${props => props.theme.colors.mainColor};\n  }\n  &:hover {\n    cursor: pointer;\n  }\n  &::after {\n    content: '';\n    position: relative;\n    top: 16px;\n    display: block;\n  }\n  &.active {\n    pointer-events: none;\n  }\n  &.inactive::after {\n    width: 0;\n    left: 50%;\n    border-top: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.5)};\n    ${transition('width, left')};\n  }\n  &.inactive:hover::after {\n    width: 100%;\n    left: 0;\n  }\n  &.active::after {\n    width: 100%;\n    border-top: 1px solid ${props => props.theme.colors.mainColor};\n  }\n`;\n\nexport const ListElement = styled.ul`\n  display: flex;\n`;\n\nexport const LinksWrapper = styled.nav`\n  display: flex;\n  justify-content: center;\n`;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { localize } from 'core/localization';\nimport { LOGIN_PATH, SIGNUP_PATH } from 'constants/navigation';\nimport { LinksWrapper, ListElement, ListItemElements } from './SwitcherForm.styled';\n\n\ntype SwitcherFormProps = {\n  signUp: boolean;\n  logIn: boolean;\n}\nexport class SwitcherForm extends React.Component<SwitcherFormProps, {}> {\n\n  static defaultProps = {\n    signUp: false,\n    logIn: false\n  };\n  render() {\n    const { signUp, logIn } = this.props;\n    // eslint-disable-next-line\n    return (\n      <LinksWrapper>\n        <ListElement>\n          <ListItemElements\n            ariaCurrent={signUp ? 'page' : false}\n            className={signUp ? 'active' : 'inactive'}\n          >\n            <Link to={SIGNUP_PATH}>{localize('[signup]')}</Link>\n          </ListItemElements>\n          <ListItemElements\n            ariaCurrent={logIn ? 'page' : false}\n            className={logIn ? 'active' : 'inactive'}\n          >\n            <Link to={LOGIN_PATH}>{localize('[login]')}</Link>\n          </ListItemElements>\n        </ListElement>\n      </LinksWrapper>\n    );\n  }\n}\n\nexport default SwitcherForm;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport Text from 'components/common/Text';\n\nexport const MobileFooterContainer = styled.div.attrs({\n  'data-test': 'mobile-footer'\n})`\n  display: none;\n  width: 100%;\n  ${media.tablet`\n    display: block;\n    padding-bottom: 100px;\n  `};\n  ${media.mobile`\n    display: block;\n    padding-bottom: 70px;\n  `};\n`;\n\nexport const LinkToPageContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  justify-content: center;\n  align-items: center;\n  font-weight: normal;\n\n  & a {\n    color: ${props => props.theme.colors.mainColor};\n    margin-left: 5px;\n  }\n\n  ${media.mobile`\n    height: 70px;\n  `};\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n    z-index: -1;\n  }\n`;\n\nexport const LinkToPageText = styled(Text)`\n  color: ${props => props.theme.colors.textColor};\n`;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { localize } from 'core/localization';\nimport { MobileFooterContainer, LinkToPageContainer, LinkToPageText } from './MobileFooter.styled';\n\ntype MobileFooterProps = {\n  navigationTextKey: string;\n  navigateTo: string;\n  navigationToTextKey: string;\n};\n\nexport class MobileFooter extends React.Component<MobileFooterProps, {}> {\n  render() {\n    const { navigationTextKey, navigateTo, navigationToTextKey } = this.props;\n    return (\n      <MobileFooterContainer>\n        <LinkToPageContainer>\n          <LinkToPageText>\n            {localize(navigationTextKey)}\n            <Link to={navigateTo}>{localize(navigationToTextKey)}</Link>\n          </LinkToPageText>\n        </LinkToPageContainer>\n      </MobileFooterContainer>\n    );\n  }\n}\n\nexport default MobileFooter;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { Text, Link } from 'components/common';\n\nexport const LearnerAgreementText = styled(Text).attrs({\n  'data-test': 'agreement-text'\n})`\n  && {\n    font-size: 14px;\n    text-align: center;\n    font-weight: normal;\n    line-height: 1.6;\n    width: 320px;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n    ${media.mobile`\n      width: 220px;\n    `};\n  }\n`;\n\n\nexport const EulaLinkText = styled(Link).attrs({\n  'data-test': 'eula-link-text'\n})`\n  font-size: 14px;\n  text-align: center;\n  font-weight: normal;\n  margin-bottom: 36px;\n  overflow-wrap: break-word;\n  line-height: 1.6;\n  width: 320px;\n  color: ${props => props.theme.colors.ctaButtonColor};\n  ${media.mobile`\n    width: 220px;\n  `};\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.ctaButtonColor};\n  }\n`;\n","import React, { useState } from 'react';\nimport { localize } from 'core/localization';\nimport { LINK } from 'constants/components';\nimport { EULA_PDF_LINK } from 'constants/common';\nimport PdfDocument from 'components/common/embeddables/PdfDocument';\nimport { LearnerAgreementText, EulaLinkText } from './LearnerAgreements.styled';\n\ntype LearnerAgreementsProps = {\n  isSignUpPage?: boolean;\n  saveCrossDevice?: boolean;\n  loginViaSocialMediaEnabled?: boolean;\n  allowToSkipTrackingAndTracingEnabled?: boolean;\n};\n\nexport const LearnerAgreements = (props: LearnerAgreementsProps) => {\n  const [shouldDisplayAgreement, setShouldDisplayAgreement] = useState(false);\n  const { isSignUpPage = false } = props;\n\n  const onClick = () => {\n    setShouldDisplayAgreement(!shouldDisplayAgreement);\n  };\n\n  return (\n    <React.Fragment>\n      {isSignUpPage && (\n        <LearnerAgreementText>{localize('[learner agreement signup]')}{' '} </LearnerAgreementText>\n      )}\n      <EulaLinkText\n        text={localize('[eula]')}\n        onClick={onClick}\n        opacity={0.7}\n        layout={LINK.LAYOUT.FORM}\n        href={EULA_PDF_LINK}\n      />\n      {shouldDisplayAgreement && (\n        <PdfDocument url={EULA_PDF_LINK} toggle={setShouldDisplayAgreement} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LearnerAgreements;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { bodyBackground } from 'components/mixins/backgrounds';\nimport { BasicStyledSidebar, PageContent } from 'components/shell/Layout';\nimport { transparentize } from 'utils/color';\nimport { centerAbsoluteElement } from 'components/mixins/placement';\nimport Text from 'components/common/Text';\nimport Icon from 'components/common/Icon';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\n\nexport const AuthPageSidebar = styled(BasicStyledSidebar)``;\n\ntype AuthPageContentProps = {\n  background: any;\n};\nexport const AuthPageContent = styled(PageContent)<AuthPageContentProps>`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  height: 100%;\n  width: 50%;\n  left: 50%;\n  overflow-y: auto;\n  ${getCustomScrollbars()}\n  ${props => bodyBackground(props.background.body)};\n  ${media.tablet`\n    position: relative;\n    width: 100%;\n    left: 0;\n  `};\n`;\n\nexport const AuthContainer = styled.div`\n  width: 300px;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  ${media.mobile`\n    width: 260px;\n  `};\n`;\n\nexport const AuthSection = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n`;\n\ntype CourseLogoProps = {\n  altText: string;\n  logoUrl: string;\n};\nexport const CourseLogo = styled.img.attrs((props: CourseLogoProps) => ({\n  alt: props.altText,\n  src: props.logoUrl\n}))<CourseLogoProps>`\n  display: none;\n  margin: 56px auto;\n  max-width: 200px;\n  max-height: 80px;\n\n  ${media.tablet`\n    display: block;\n  `};\n`;\n\nexport const CourseLogoSidebarWrapper = styled.div`\n  width: 360px;\n  height: 200px;\n  position: absolute;\n  ${centerAbsoluteElement};\n`;\n\ntype CourseLogoSidebarProps = {\n  altText: string;\n  logoUrl: string;\n};\nexport const CourseLogoSidebar = styled.img.attrs((props: CourseLogoSidebarProps) => ({\n  alt: props.altText,\n  src: props.logoUrl\n}))<CourseLogoSidebarProps>`\n  display: block;\n  max-width: 100%;\n  max-height: 100%;\n  margin: 0 auto;\n`;\n\nexport const FormHeading = styled.h1`\n  ${secondaryFont};\n  display: inline-block;\n  font-size: 36px;\n  font-weight: 300;\n  line-height: 1.03;\n  text-align: center;\n  color: ${props => props.theme.colors.textColor};\n  margin-top: 100px;\n\n  ${media.tablet`\n    margin-top: 0;\n  `};\n`;\n\nexport const AuthTextForm = styled(Text)`\n  && {\n    ${secondaryFont};\n    font-size: 14px;\n    text-align: center;\n    font-weight: normal;\n    margin: 32px auto;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n    line-height: 1.6;\n    ${media.mobile`\n      width: 220px;\n    `};\n  }\n`;\n\nexport const AuthSocialLoginContainer = styled.div`\n  position: relative;\n  width: 320px;\n`;\n\nexport const SwitcherFormContainer = styled.div`\n  ${media.tablet`\n    display: none;\n  `};\n  ${media.mobile`\n    display: none;\n  `};\n`;\n\ntype GdprProps = {\n  addTopMargin?: boolean;\n  isSignupPage?: boolean;\n};\n\nexport const Gdpr = styled.div.attrs({\n  'data-test': 'gdpr'\n})<GdprProps>`\n  display: flex;\n  align-items: center;\n  width: 320px;\n  height: 48px;\n  margin-bottom: ${props => (props.isSignupPage ? '50' : '0')}px;\n  ${media.mobile`\n    width: 260px;\n  `};\n  margin-top: ${props => (props.addTopMargin ? '30' : '8')}px;\n`;\n\ntype AgreementIconProps = {\n  name: string;\n};\n\nexport const AgreementIcon = styled(Icon).attrs((props: AgreementIconProps) => ({\n  name: props.name\n}))<AgreementIconProps>`\n  font-size: 48px;\n  opacity: 0.3;\n`;\n\nexport const GdprText = styled(Text)`\n  && {\n    ${secondaryFont};\n    font-size: 14px;\n    font-weight: normal;\n    margin: 18px;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n    ${media.mobile`\n      width: 220px;\n    `};\n    text-align: left;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n  AuthContainer,\n  AuthTextForm,\n  AuthSocialLoginContainer,\n  AuthSection\n} from '../auth/auth.styled';\n\nexport const LoginSection = styled(AuthSection)`\n  justify-content: center;\n  padding: 40px 0;\n`;\n\nexport const LoginContainer = styled(AuthContainer)`\n  justify-content: center;\n`;\n\nexport const TextForm = styled(AuthTextForm)`\n  width: 300px;\n`;\n\nexport const SocialLoginContainer = styled(AuthSocialLoginContainer)`\n  margin-bottom: 40px;\n`;\n\nexport const SkipLinkContainer = styled.div.attrs({\n  'data-test': 'skip-login'\n})`\n  margin-top: 25px;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { SIGNUP_PATH } from 'constants/navigation';\nimport Separator from 'components/common/Separator';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { CircleLoader } from 'components/common';\nimport { OverLayContainer } from 'components/common/MainCircleLoader/MainCircleLoader.styled';\nimport {\n  getBackground,\n  getLogo,\n  getAlternativeLogo,\n  isCrossDeviceSavingEnabled,\n  isLoginViaSocialMediaEnabled,\n  isAccessLimited,\n  isAllowToSkipTrackingAndTracingEnabled,\n  getAllowedUsers\n} from 'store/settings/selectors';\nimport { getCourseTitle, getCourseIntroductions } from 'store/course/selectors';\nimport { localize } from 'core/localization';\nimport * as userActions from 'store/user/actions';\nimport * as appActions from 'store/app/actions';\nimport LoginForm from 'components/login/LoginForm';\nimport SocialLogin from 'components/login/SocialLogin';\nimport SwitcherForm from 'components/login/SwitcherForm';\nimport MobileFooter from 'components/login/MobileFooter';\nimport { LINK } from 'constants/components';\nimport LinkText from 'components/common/Link';\nimport {\n  EMAIL_PASSWORD_COMBINATION_NOT_EXISTS,\n  UNKNOWN_ERROR,\n  STATUS_OK\n} from 'constants/progressStorage';\nimport { RootAppState } from 'store/types';\nimport LearnerAgreements from 'components/login/LearnerAgreements';\nimport {\n  AuthPageContent,\n  AuthPageSidebar,\n  CourseLogo,\n  CourseLogoSidebar,\n  CourseLogoSidebarWrapper,\n  FormHeading,\n  SwitcherFormContainer,\n  Gdpr,\n  AgreementIcon,\n  GdprText\n} from '../auth/auth.styled';\nimport {\n  LoginSection,\n  TextForm,\n  SocialLoginContainer,\n  SkipLinkContainer,\n  LoginContainer\n} from './LoginPage.styled';\nimport SkipToContent from '../../components/common/SkipToContent';\n\ntype LoginPageProps = {\n  navigateToUrl(url: string): void;\n  userActions: { [key: string]: any };\n  appActions: { [key: string]: any };\n  isUserAuthenticated: boolean;\n  theme: { [key: string]: any };\n  background: { [key: string]: any };\n  logoUrl: string;\n  alternativeLogoUrl: string;\n  isAuthenticated?: boolean;\n  isCrossDeviceSavingEnabled: boolean;\n  loginViaSocialMediaEnabled: boolean;\n  title: string;\n  accessLimitationEnable: boolean;\n  allowToSkipTrackingAndTracingEnabled: boolean;\n  allowedUsers: any[];\n};\ntype LoginPageState = {\n  isLoaded: boolean;\n  isEmailPasswordCombinationNotExists: boolean;\n  isUnknownError: boolean;\n};\n\nexport class LoginPage extends React.Component<LoginPageProps, LoginPageState> {\n  loginFormFieldRefs: { [key: string]: any };\n\n  constructor(props: LoginPageProps) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      isEmailPasswordCombinationNotExists: false,\n      isUnknownError: false\n    };\n    this.loginFormFieldRefs = {};\n  }\n\n  resetStatuses = () => {\n    this.setState({\n      isLoaded: false,\n      isEmailPasswordCombinationNotExists: false,\n      isUnknownError: false\n    });\n  };\n\n  onSubmit = async (event: any, signInData: any) => {\n    event.preventDefault();\n\n    this.setState({\n      isLoaded: true\n    });\n    const status = await this.props.userActions.authorizeUser(signInData);\n\n    if (status === STATUS_OK) {\n      await this.launch();\n      return;\n    }\n\n    this.setState({\n      isLoaded: false,\n      isEmailPasswordCombinationNotExists: status === EMAIL_PASSWORD_COMBINATION_NOT_EXISTS,\n      isUnknownError: status === UNKNOWN_ERROR\n    });\n  };\n\n  async launch() {\n    const urlToNavigate = await this.props.appActions.launchMaterial();\n    this.props.navigateToUrl(urlToNavigate);\n  }\n\n  onAuthorizationSkip = async () => {\n    await this.props.userActions.skipAuthentication();\n    await this.launch();\n  };\n\n  componentDidMount() {\n    document.title = `${localize('[title for login page]')} | ${this.props.title}`;\n  }\n\n  setFieldRefs = (fieldRefs: any) => {\n    this.loginFormFieldRefs = fieldRefs;\n  };\n\n  setEmailFocus = () => {\n    this.loginFormFieldRefs.email.focus();\n  };\n\n  renderLoader = () => (\n    <OverLayContainer>\n      <CircleLoader iconSize={96} />\n    </OverLayContainer>\n  );\n\n  renderComponents = () => {\n    const {\n      background,\n      logoUrl,\n      alternativeLogoUrl,\n      isCrossDeviceSavingEnabled,\n      loginViaSocialMediaEnabled,\n      allowToSkipTrackingAndTracingEnabled,\n      accessLimitationEnable\n    } = this.props;\n    const signInFormId = 'formLogin';\n    return (\n      <React.Fragment>\n        <SkipToContent onClick={this.setEmailFocus} />\n        <AuthPageSidebar background={background}>\n          <CourseLogoSidebarWrapper>\n            <CourseLogoSidebar\n              altText={localize('[alt logo login]')}\n              logoUrl={alternativeLogoUrl}\n            />\n          </CourseLogoSidebarWrapper>\n        </AuthPageSidebar>\n        <AuthPageContent background={background}>\n          <LoginSection>\n            <LoginContainer>\n              {isCrossDeviceSavingEnabled && (\n                <SwitcherFormContainer>\n                  <SwitcherForm logIn />\n                </SwitcherFormContainer>\n              )}\n              <CourseLogo altText={localize('[alt logo login]')} logoUrl={logoUrl} />\n              <FormHeading id={signInFormId}>\n                {isCrossDeviceSavingEnabled\n                  ? localize('[welcome]')\n                  : localize('[welcome without LS]')}\n              </FormHeading>\n              <TextForm appearance=\"p\">\n                {isCrossDeviceSavingEnabled\n                  ? localize('[login form text]')\n                  : localize('[login form text without LS]')}\n              </TextForm>\n              <LoginForm\n                formId={signInFormId}\n                onSubmit={this.onSubmit}\n                isEmailPasswordCombinationNotExists={this.state.isEmailPasswordCombinationNotExists}\n                resetStatuses={this.resetStatuses}\n                setFieldRefs={this.setFieldRefs}\n              />\n              {isCrossDeviceSavingEnabled && loginViaSocialMediaEnabled && (\n                <SocialLoginContainer>\n                  <SocialLogin title={localize('[login with]')} />\n                </SocialLoginContainer>\n              )}\n              {!accessLimitationEnable && allowToSkipTrackingAndTracingEnabled && (\n                <SkipLinkContainer>\n                  <LinkText\n                    text={localize('[skip step]')}\n                    layout={LINK.LAYOUT.FORM}\n                    onClick={this.onAuthorizationSkip}\n                    opacity={0.7}\n                  />\n                </SkipLinkContainer>\n              )}\n              <Gdpr\n                addTopMargin={\n                  !loginViaSocialMediaEnabled ||\n                  allowToSkipTrackingAndTracingEnabled ||\n                  !isCrossDeviceSavingEnabled\n                }\n              >\n                <AgreementIcon name={'agreement-lock'} />\n                <GdprText appearance=\"p\">{localize('[gdpr text]')}</GdprText>\n              </Gdpr>\n              <Separator opacity={0.05} color=\"textColor\" />\n            </LoginContainer>\n            <LearnerAgreements />\n            {isCrossDeviceSavingEnabled && (\n              <MobileFooter\n                navigationTextKey=\"[dont have account]\"\n                navigateTo={SIGNUP_PATH}\n                navigationToTextKey=\"[signup here]\"\n              />\n            )}\n          </LoginSection>\n        </AuthPageContent>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { isLoaded } = this.state;\n    return (\n      <React.Fragment>\n        {isLoaded && this.renderLoader()}\n        {!isLoaded && this.renderComponents()}\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    background: getBackground(state),\n    logoUrl: getLogo(state),\n    alternativeLogoUrl: getAlternativeLogo(state),\n    isCrossDeviceSavingEnabled: isCrossDeviceSavingEnabled(state),\n    loginViaSocialMediaEnabled: isLoginViaSocialMediaEnabled(state),\n    accessLimitationEnable: isAccessLimited(state),\n    allowToSkipTrackingAndTracingEnabled: isAllowToSkipTrackingAndTracingEnabled(state),\n    allowedUsers: getAllowedUsers(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    userActions: bindActionCreators(userActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(LoginPage));\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport progressStorage from 'core/progressStorage';\nimport { getEmail, getName } from 'store/user/selectors';\nimport { BUTTON, TOOLTIP, SIZES } from 'constants/components';\nimport { KEYS } from 'constants/common';\nimport { withTheme } from 'styled-components';\nimport { RootAppState } from 'store/types';\nimport LearnerAgreements from 'components/login/LearnerAgreements';\nimport AuthForm from '../AuthForm';\nimport EmailInput from '../AuthForm/EmailInput';\nimport NameInput from '../AuthForm/NameInput';\nimport PasswordInput from '../AuthForm/PasswordInput';\nimport { FormContentWrapper } from '../AuthForm/AuthForm.styled';\nimport {\n  ButtonSubmitSingUp,\n  InputContainer,\n  CheckboxContainer,\n  AgreementCheckBox,\n  AgreementLabel\n} from './SignUpForm.styled';\nimport { MessageText, MessageTextWrapper } from '../LoginForm/LoginForm.styled';\nimport { StatusTooltip, SwitchButton } from '../../common';\nimport { EMAIL_REGEX, PASSWORD_REGEX } from '../../../constants/common';\n\ntype SignUpProps = {\n  onSubmit(e: any, data: any): Promise<void>;\n  userEmail?: string;\n  userName?: string;\n  formId: string;\n  validationStatusBeforeSubmit?: any;\n  isUnknownError: boolean;\n  theme?: any;\n  resetErrorStatus(fieldRefs: any): void;\n  setFieldRefs?(fieldRefs: any): void;\n};\n\ntype SignUpState = {\n  isUserExist: boolean;\n  agreementAccepted: boolean;\n};\n\nexport class SignUp extends React.Component<SignUpProps, SignUpState> {\n  templateTheme: any;\n\n  constructor(props: SignUpProps) {\n    super(props);\n    this.templateTheme = props.theme;\n    this.state = {\n      isUserExist: false,\n      agreementAccepted: false\n    };\n  }\n\n  checkIsUserExist = async (email: string) => {\n    const emailInputBox: any = document.getElementById('email');\n    if (email && EMAIL_REGEX.test(email)) {\n      const status = await progressStorage.userExists(email.toLowerCase());\n      this.setState({ isUserExist: status.exists });\n      emailInputBox.classList.add('valid');\n    } else {\n      this.setState({ isUserExist: false });\n      emailInputBox.classList.remove('valid');\n    }\n  };\n\n  signUpCommonErrorMessage = () => (\n    <MessageTextWrapper>\n      <MessageText theme={this.templateTheme} appearance=\"span\">\n        {localize('[error signup common]')}\n      </MessageText>\n    </MessageTextWrapper>\n  );\n\n  renderSignUpButton = () => (\n    <ButtonSubmitSingUp layout={BUTTON.LAYOUT.PRIMARY} suffixIcon=\"arrow-right\" type=\"submit\">\n      {localize('[sign up button]')}\n    </ButtonSubmitSingUp>\n  );\n\n  renderWithTooltip = (\n    status: any,\n    showTooltip: any,\n    message: any,\n    actionElement: any,\n    interactive: boolean\n  ) => (\n    <StatusTooltip\n      popoverPosition={'top'}\n      layout={status}\n      showTooltip={showTooltip}\n      message={message}\n      popoverButton={actionElement}\n      transitionDuration={0.2}\n      eventHandler={'click'}\n      interactive={interactive}\n    />\n  );\n\n  renderContent = (props: any) => {\n    const { userEmail = '', userName = '', resetErrorStatus } = this.props;\n    const {\n      onChange,\n      setRefs,\n      validationStatusBeforeSubmit,\n      email,\n      isUserExist,\n      isUnknownError,\n      agreementAccepted\n    } = props;\n    return (\n      <FormContentWrapper>\n        <InputContainer size={40}>\n          <NameInput\n            userName={userName}\n            onChange={onChange}\n            setRefs={setRefs}\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.name}\n            onFocus={resetErrorStatus}\n          />\n        </InputContainer>\n        <InputContainer size={40}>\n          <EmailInput\n            userEmail={userEmail}\n            isUserExist={isUserExist}\n            checkIsUserExist={this.checkIsUserExist}\n            onChange={onChange}\n            setRefs={setRefs}\n            email={email}\n            textError={\n              isUserExist && email ? localize('[user exist]') : localize('[error email input]')\n            }\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.email}\n            onFocus={resetErrorStatus}\n            pattern={EMAIL_REGEX.source}\n          />\n        </InputContainer>\n        <InputContainer size={17}>\n          <PasswordInput\n            onChange={onChange}\n            setRefs={setRefs}\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.password}\n            pattern={PASSWORD_REGEX}\n            showValidationMessage={true}\n            onFocus={resetErrorStatus}\n          />\n        </InputContainer>\n        <CheckboxContainer\n          isChecked={agreementAccepted}\n          validationStatusBeforeSubmit={validationStatusBeforeSubmit.agreement}\n        >\n          <AgreementCheckBox\n            checked={agreementAccepted}\n            id={'agreementCheckbox'}\n            name={'agreement'}\n            ref={(node: any) => setRefs(node)}\n            onChange={() => this.setState({ agreementAccepted: !agreementAccepted })}\n          />\n          <SwitchButton\n            multiple={true}\n            selected={agreementAccepted}\n            aria-checked={agreementAccepted}\n            size={SIZES.SMALL}\n            tabIndex={0}\n            onClick={() => this.setState({ agreementAccepted: !agreementAccepted })}\n            onKeyDown={(event: any) => {\n              if (\n                [KEYS.ENTER.toLowerCase(), KEYS.SPACEBAR.toLowerCase()].includes(\n                  event.key.toLowerCase()\n                )\n              ) {\n                event.preventDefault();\n                this.setState({ agreementAccepted: !agreementAccepted });\n              }\n            }}\n          />\n          <AgreementLabel htmlFor={'agreementCheckbox'}>\n            <LearnerAgreements isSignUpPage={true} />\n          </AgreementLabel>\n        </CheckboxContainer>\n        {this.renderWithTooltip(\n          TOOLTIP.INCORRECT,\n          isUnknownError,\n          this.signUpCommonErrorMessage(),\n          this.renderSignUpButton(),\n          false\n        )}\n      </FormContentWrapper>\n    );\n  };\n\n  render() {\n    const { isUserExist, agreementAccepted } = this.state;\n    const { onSubmit, formId, isUnknownError, setFieldRefs } = this.props;\n\n    return (\n      <AuthForm\n        isUserExist={isUserExist}\n        checkIsUserExist={this.checkIsUserExist}\n        formId={formId}\n        onSubmit={onSubmit}\n        renderContent={this.renderContent}\n        isUnknownError={isUnknownError}\n        setFieldRefs={setFieldRefs}\n        agreementAccepted={agreementAccepted}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    userEmail: getEmail(state),\n    userName: getName(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(SignUp));\n","import styled from 'styled-components';\nimport Text from 'components/common/Text';\nimport { secondaryFont } from 'components/mixins/typography';\nimport {\n  AuthContainer,\n  AuthTextForm,\n  AuthSocialLoginContainer,\n  AuthSection\n} from '../auth/auth.styled';\n\nexport const SignupSection = styled(AuthSection)`\n  justify-content: space-between;\n  padding-top: 40px;\n`;\n\nexport const SignupContainer = styled(AuthContainer)`\n  justify-content: space-between;\n`;\n\nexport const TextForm = styled(AuthTextForm)`\n  width: 320px;\n`;\n\nexport const SocialLoginContainer = styled(AuthSocialLoginContainer)`\n  margin-bottom: 50px;\n`;\n\nexport const FootNoteText = styled(Text)`\n  ${secondaryFont};\n  && {\n    position: absolute;\n    bottom: 47px;\n    color: ${props => props.theme.colors.coverBgOverlayTextColor};\n    width: 400px;\n    left: 50%;\n    transform: translateX(-50%);\n    font-weight: normal;\n    font-size: 12px;\n    line-height: 1.5;\n    text-align: center;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { LOGIN_PATH } from 'constants/navigation';\nimport withNavigation from 'components/hocs/withNavigation';\nimport * as appActions from 'store/app/actions';\nimport {\n  getBackground,\n  getLogo,\n  isLoginViaSocialMediaEnabled,\n  getAlternativeLogo\n} from 'store/settings/selectors';\nimport { getCourseTitle, getCourseIntroductions } from 'store/course/selectors';\nimport { localize } from 'core/localization';\nimport * as userActions from 'store/user/actions';\nimport { isAuthenticated } from 'store/user/selectors';\nimport SignUpForm from 'components/login/SignUpForm';\nimport SocialLogin from 'components/login/SocialLogin';\nimport SwitcherForm from 'components/login/SwitcherForm';\nimport MobileFooter from 'components/login/MobileFooter';\nimport { UNKNOWN_ERROR, STATUS_OK } from 'constants/progressStorage';\nimport { RootAppState } from 'store/types';\nimport {\n  AuthPageContent,\n  AuthPageSidebar,\n  CourseLogo,\n  CourseLogoSidebar,\n  CourseLogoSidebarWrapper,\n  FormHeading,\n  SwitcherFormContainer,\n  Gdpr,\n  AgreementIcon,\n  GdprText\n} from '../auth/auth.styled';\nimport {\n  SignupSection,\n  TextForm,\n  SocialLoginContainer,\n  FootNoteText,\n  SignupContainer\n} from './SignUpPage.styled';\nimport SkipToContent from '../../components/common/SkipToContent';\n\ntype SignUpPageProps = {\n  navigateToUrl(url: string): void;\n  actions: { [key: string]: any };\n  appActions: { [key: string]: any };\n  isUserAuthenticated: boolean;\n  theme: { [key: string]: any };\n  background: { [key: string]: any };\n  logoUrl: string;\n  alternativeLogoUrl: string;\n  loginViaSocialMediaEnabled: boolean;\n  title: string;\n  courseAccessLimited: boolean;\n};\n\ntype SignUpPageState = {\n  isUnknownError: boolean;\n};\n\nexport class SignUpPage extends React.Component<SignUpPageProps, SignUpPageState> {\n  signupFormFieldRefs: { [key: string]: any };\n\n  constructor(props: SignUpPageProps) {\n    super(props);\n    const { isUserAuthenticated } = props;\n\n    this.state = {\n      isUnknownError: false\n    };\n    this.signupFormFieldRefs = {};\n    if (isUserAuthenticated) {\n      this.launch();\n    }\n  }\n\n  componentDidMount() {\n    document.title = `${localize('[title for signup page]')} | ${this.props.title}`;\n  }\n\n  onSubmit = async (event: any, signUpData: any): Promise<void> => {\n    event.preventDefault();\n\n    const status = await this.props.actions.registerUser(signUpData);\n\n    if (status === STATUS_OK) {\n      await this.launch();\n      return;\n    }\n\n    this.setState({\n      isUnknownError: status === UNKNOWN_ERROR\n    });\n  };\n\n  resetErrorStatus = (element: any) => {\n    const inputElement: any = element.target;\n    this.setState({\n      isUnknownError: false\n    });\n    inputElement.classList.remove('valid');\n  };\n\n  async launch() {\n    await this.props.appActions.launchMaterial();\n  }\n\n  setFieldRefs = (fieldRefs: any) => {\n    this.signupFormFieldRefs = fieldRefs;\n  };\n\n  setNameFocus = () => {\n    this.signupFormFieldRefs.name.focus();\n  };\n\n  render() {\n    const { background, logoUrl, loginViaSocialMediaEnabled, alternativeLogoUrl } = this.props;\n    const signUpFormId = 'signUp';\n\n    return (\n      <React.Fragment>\n        <SkipToContent onClick={this.setNameFocus} />\n        <AuthPageSidebar background={background}>\n          <CourseLogoSidebarWrapper>\n            <CourseLogoSidebar\n              altText={localize('[alt logo login]')}\n              logoUrl={alternativeLogoUrl}\n            />\n          </CourseLogoSidebarWrapper>\n          <FootNoteText appearance=\"p\">{localize('[footnote]')}</FootNoteText>\n        </AuthPageSidebar>\n        <AuthPageContent background={background}>\n          <SignupSection>\n            <SignupContainer>\n              <SwitcherFormContainer>\n                <SwitcherForm signUp />\n              </SwitcherFormContainer>\n              <CourseLogo altText={localize('[alt logo login]')} logoUrl={logoUrl} />\n              <FormHeading id={signUpFormId}>{localize('[create account]')}</FormHeading>\n              <TextForm appearance=\"p\">{localize('[sign up form text]')}</TextForm>\n              <SignUpForm\n                formId={signUpFormId}\n                onSubmit={this.onSubmit}\n                isUnknownError={this.state.isUnknownError}\n                resetErrorStatus={this.resetErrorStatus}\n                setFieldRefs={this.setFieldRefs}\n              />\n              {loginViaSocialMediaEnabled && (\n                <SocialLoginContainer>\n                  <SocialLogin title={localize('[sign up with]')} />\n                </SocialLoginContainer>\n              )}\n              <Gdpr isSignupPage={true} addTopMargin={!loginViaSocialMediaEnabled}>\n                <AgreementIcon name={'agreement-lock'} />\n                <GdprText appearance=\"p\">{localize('[gdpr text]')}</GdprText>\n              </Gdpr>\n            </SignupContainer>\n            <MobileFooter\n              navigationTextKey=\"[have account]\"\n              navigateTo={LOGIN_PATH}\n              navigationToTextKey=\"[login]\"\n            />\n          </SignupSection>\n        </AuthPageContent>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    background: getBackground(state),\n    logoUrl: getLogo(state),\n    alternativeLogoUrl: getAlternativeLogo(state),\n    isUserAuthenticated: isAuthenticated(state),\n    loginViaSocialMediaEnabled: isLoginViaSocialMediaEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(userActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(SignUpPage));\n","import React from 'react';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\nexport const StartOver = () => (\n  <Figure\n    width=\"260px\"\n    height=\"127px\"\n    viewBox=\"0 0 260 127\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    arialabel={`${localize('[start over]')}`}\n  >\n    <title>Start over icon</title>\n    <desc>Created with sketchtool.</desc>\n    <defs>\n      <path\n        id=\"dvpdj70tgb\"\n        d=\"M12.88 0h52.628c2.761 0 5 2.239 5 5v85c0 2.761-2.239 5-5 5H5c-2.761 0-5-2.239-5-5V12.96L12.88 0z\"\n      />\n      <path\n        id=\"uv596r90gc\"\n        d=\"M91 22c2.761 0 5 2.239 5 5v44c0 2.761-2.239 5-5 5H47c-2.761 0-5-2.239-5-5l-.001-10H33l8.999-9.999L42 27c0-2.761 2.239-5 5-5h44z\"\n      />\n      <filter\n        id=\"98ia7jy47a\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g>\n        <g transform=\"translate(-590 -164) translate(590 164)\">\n          <g fill=\"#363E4E\" opacity=\".02\">\n            <g>\n              <path\n                d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447\n                7.983c0 6.53-7.447 8.466-7.447 8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0\n                53.7 0 60.473C0 67.246 9.48 69 9.48 69h207.865s11.703-1.33\n                11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336 12.08-8.709\n                12.08-8.709l23.586-.816s12.31 1.814 12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260\n                .973 249.844 0 249.844 0L74.479.423z\"\n                filter=\"url(#98ia7jy47a)\"\n                transform=\"translate(0 37)\"\n              />\n            </g>\n          </g>\n          <g>\n            <g transform=\"translate(88)\">\n              <use fill=\"#FFF\" xlinkHref=\"#dvpdj70tgb\" />\n              <use fill=\"#FC794B\" fillOpacity=\".2\" xlinkHref=\"#dvpdj70tgb\" />\n            </g>\n            <path\n              fill=\"#FBCCBC\"\n              d=\"M8 24H33V28H8zM8 34H33V38H8zM8 54H33V58H8zM8 44H33V48H8zM8 64H33V68H8zM8 74H33V78H8z\"\n              transform=\"translate(88)\"\n            />\n            <g transform=\"translate(88)\">\n              <use fill=\"#FFF\" xlinkHref=\"#uv596r90gc\" />\n              <use fill=\"#FC794B\" fillOpacity=\".9\" xlinkHref=\"#uv596r90gc\" />\n              <use stroke=\"#FFF\" xlinkHref=\"#uv596r90gc\" />\n              <use stroke=\"#FFF\" strokeWidth=\"3\" xlinkHref=\"#uv596r90gc\" />\n            </g>\n            <path\n              fill=\"#FFF\"\n              d=\"M69.125 46.77c5.592 0 10.125 4.533 10.125 10.125v6.885H59v-6.885c0-5.592 4.533-10.125 10.125-10.125zm0-13.77c3.802 0 6.885 3.083 6.885 6.885 0 3.802-3.083\n              6.885-6.885 6.885-3.802 0-6.885-3.083-6.885-6.885 0-3.802 3.083-6.885 6.885-6.885z\"\n              transform=\"translate(88)\"\n            />\n            <path\n              fill=\"#EE6C3F\"\n              fillOpacity=\".2\"\n              d=\"M12.881 12.96L0 12.96 12.881 0z\"\n              transform=\"translate(88)\"\n            />\n          </g>\n          <ellipse cx=\"131\" cy=\"123\" fill=\"#F5F7FB\" rx=\"43\" ry=\"4\" />\n          <circle cx=\"165.5\" cy=\"59.5\" r=\"5.5\" fill=\"#FFF\" stroke=\"#FD875D\" strokeWidth=\"2\" />\n          <path\n            fill=\"#FC865D\"\n            fillRule=\"nonzero\"\n            d=\"M165.952 58.064l.984.984-2.46 2.46-.984-.984\n            2.46-2.46zm1.967-.492c-.147.099-.59-.344-.491-.491-.361-.197-.69-.033-.984.491l.984.984c.524-.295.688-.623.491-.984zM163 62h.984l-.984-.984V62z\"\n          />\n        </g>\n      </g>\n    </g>\n  </Figure>\n);\n\nexport default StartOver;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { mainFont } from 'components/mixins/typography';\nimport { Button } from '../../common';\nimport buttonDefaultStyle from '../../mixins/normalize';\nimport { transparentize } from '../../../utils/color';\n\nexport const Content = styled.div.attrs({\n  'data-test': 'start-popover'\n})`\n  ${mainFont};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Figure = styled.div`\n  margin: 0 auto;\n`;\n\nexport const Description = styled.p`\n  max-width: 652px;\n  font-size: 32px;\n  line-height: 1.4;\n  text-align: center;\n  color: ${props => props.theme.colors.textColor};\n  margin: 85px auto 40px;\n  ${media.mobile`\n    font-size: 30px;\n    max-width: 260px;\n    margin-top: 52px;\n  `};\n`;\n\nexport const ButtonElement = styled(Button)`\n  ${buttonDefaultStyle};\n  flex: 0 0 auto;\n  width: 140px;\n  background-color: ${props => props.theme.colors.mainColor};\n  &:hover,\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  > span {\n    font-size: 14px;\n    line-height: 1;\n  }\n`;\n","import React from 'react';\nimport StartOverIcon from 'assets/figures/StartOver';\nimport { ButtonElement, Description, Figure, Content } from './StartOver.styled';\nimport { BUTTON } from '../../../constants/components';\nimport { localize } from '../../../core/localization';\n\ntype StartOverProps = {\n  closePopup(): void;\n  popupSettings: { [key: string]: any };\n};\n\nexport const StartOver = (props: StartOverProps) => {\n  const [restoreAttemptStarted, setRestoreAttemptStarted] = React.useState<boolean>(false);\n\n  const startNewAttempt = async () => {\n    if (!restoreAttemptStarted) {\n      setRestoreAttemptStarted(true);\n      props.popupSettings.navigateToIndex();\n      await props.popupSettings.startNewAttempt();\n      props.closePopup();\n    }\n  };\n\n  return (\n    <Content>\n      <Figure>\n        <StartOverIcon />\n      </Figure>\n      <Description>{localize('[start over description]')}</Description>\n      <ButtonElement layout={BUTTON.LAYOUT.PRIMARY} onClick={startNewAttempt}>\n        {localize('[start over]')}\n      </ButtonElement>\n    </Content>\n  );\n};\n\nexport default StartOver;\n","import React from 'react';\n\ntype ErrorBoundaryProps = {\n  component?: any;\n  popup?: any;\n  children: any;\n};\n\ntype ErrorBoundaryState = {\n  error: any;\n  errorInfo: any;\n};\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    if (this.props.popup) {\n      this.props.popup();\n    }\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return this.props.component || <div />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { ThemeProvider } from 'styled-components';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { hasBeenStarted, isProgressRestoreFailed } from 'store/course/selectors';\nimport { getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { RootAppState } from 'store/types';\nimport { MATERIAL_TYPES } from 'constants/common';\nimport TimedOut from 'components/popups/timedOut';\nimport RouteTransition from '../../components/shell/RouteTransition/RouteTransition';\nimport Layout from '../../components/shell/Layout/Layout';\nimport { PrivateRoute, RouteWithRedirect } from '../../components/common';\nimport {\n  INDEX_PATH,\n  LOGIN_PATH,\n  RESULTS_PATH,\n  SECTION_PATH,\n  SECTIONS_PATH,\n  SIGNUP_PATH\n} from '../../constants/navigation';\nimport Sections from './sections/SectionsPage';\nimport NoAccess from '../errors/noAccess/LimitAccessPage';\nimport CourseOverview from './courseOverview/CourseOverview';\nimport Login from '../login/LoginPage';\nimport SignUp from '../signUp/SignUpPage';\nimport NotFoundPage from '../errors/notFound/NotFoundPage';\nimport * as courseActions from '../../store/course/actions';\nimport { IS_NO_ACCESS, IS_NOT_AUTHORIZED, IS_SUCCESSFUL_ACCESS } from '../../constants/typeAccess';\nimport { POPUP_ID_START_OVER, POPUP_ID_TIMED_OUT } from '../../constants/popups';\nimport StartOverPopup from '../../components/popups/startOver/StartOver';\nimport * as popupActions from '../../store/popup/actions';\nimport ErrorBoundary from '../../components/errorBoundary/ErrorBoundary';\nimport { getQuestionPoolSize, isQuestionPoolEnabled } from '../../store/settings/selectors';\nimport { isIndexView } from '../../components/shell/RouteTransition/viewChecker';\n\ntype CourseProps = {\n  colors: { [key: string]: any };\n  fonts: { [key: string]: any };\n  background: { [key: string]: any };\n  isLowResolution: boolean;\n  isTocExpanded: boolean;\n  isUserAuthenticated: boolean;\n  location: { [key: string]: any };\n  navigateToUrl(url: string): void;\n  courseActions: { [key: string]: any };\n  userAccessIsLimited: boolean;\n  navigateToIndex(): void;\n  popupActions: { [key: string]: any };\n  isCourseProgressRestoreFailed?: boolean;\n  timerStatus: TimerStatus;\n  isQuestionPoolEnabled: boolean;\n  questionPoolSize: number;\n  isCourseStarted: boolean;\n};\n\nconst usePrevious = (value: any) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Course = (props: CourseProps) => {\n  const {\n    colors,\n    fonts,\n    background,\n    isLowResolution,\n    isTocExpanded,\n    isUserAuthenticated,\n    userAccessIsLimited,\n    isCourseProgressRestoreFailed,\n    timerStatus,\n    // eslint-disable-next-line no-shadow\n    isQuestionPoolEnabled,\n    questionPoolSize,\n    isCourseStarted,\n    location\n  } = props;\n  let typeAccess = IS_SUCCESSFUL_ACCESS;\n\n  if (userAccessIsLimited || !isUserAuthenticated) {\n    typeAccess = userAccessIsLimited && isUserAuthenticated ? IS_NO_ACCESS : IS_NOT_AUTHORIZED;\n  }\n\n  const previousProps: any = usePrevious({ timerStatus });\n\n  const openStartOverPopup = () => {\n    props.popupActions.openPopup({\n      popupId: POPUP_ID_START_OVER,\n      popupAriaLabelKey: '[aria label start over popup]',\n      component: StartOverPopup,\n      startNewAttempt: props.courseActions.startOver,\n      navigateToIndex: props.navigateToIndex,\n      disablePopupClosing: true,\n      disableBottomLine: true\n    });\n  };\n\n  const openTimedOutPopup = () => {\n    props.popupActions.openPopup({\n      popupId: POPUP_ID_TIMED_OUT,\n      popupAriaLabelKey: '[aria label timed out popup]',\n      component: TimedOut,\n      disablePopupClosing: true\n    });\n  };\n\n  useEffect(() => {\n    if (isUserAuthenticated) {\n      const navigate = async () => {\n        const urlToNavigate: any = await props.courseActions.launch();\n        props.navigateToUrl(urlToNavigate);\n      };\n\n      navigate();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (isCourseProgressRestoreFailed && isCourseStarted && isIndexView.test(location.pathname)) {\n      if (isQuestionPoolEnabled && questionPoolSize <= 0) {\n        return;\n      }\n      openStartOverPopup();\n    }\n\n    if (\n      timerStatus === TimerStatus.TIMED_OUT &&\n      !isCourseProgressRestoreFailed &&\n      previousProps?.timerStatus !== timerStatus\n    ) {\n      openTimedOutPopup();\n    }\n\n    // eslint-disable-next-line\n  }, [\n    isCourseProgressRestoreFailed,\n    timerStatus,\n    isQuestionPoolEnabled,\n    questionPoolSize,\n    isCourseStarted,\n    location\n  ]);\n\n  return (\n    <Route\n      render={({ location }) => (\n        <ThemeProvider theme={{ colors, fonts }}>\n          <RouteTransition\n            location={location}\n            isLowResolution={isLowResolution}\n            isTocExpanded={isTocExpanded}\n            background={background}\n          >\n            <Layout className=\"layout\">\n              <ErrorBoundary popup={openStartOverPopup}>\n                <Switch location={location}>\n                  <PrivateRoute\n                    exact\n                    path={INDEX_PATH}\n                    component={Sections}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={SECTIONS_PATH}\n                    component={Sections}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={RESULTS_PATH}\n                    component={CourseOverview}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <PrivateRoute\n                    path={SECTION_PATH}\n                    component={CourseOverview}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <RouteWithRedirect\n                    exact\n                    path={LOGIN_PATH}\n                    shouldRedirect={isUserAuthenticated}\n                    component={Login}\n                  />\n                  <RouteWithRedirect\n                    exact\n                    path={SIGNUP_PATH}\n                    shouldRedirect={isUserAuthenticated}\n                    component={SignUp}\n                  />\n                  <Route path=\"*\" exact component={NotFoundPage} />\n                </Switch>\n              </ErrorBoundary>\n            </Layout>\n          </RouteTransition>\n        </ThemeProvider>\n      )}\n    />\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isCourseProgressRestoreFailed: isProgressRestoreFailed(state),\n    timerStatus: getTimerStatus(state),\n    isQuestionPoolEnabled: isQuestionPoolEnabled(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    isCourseStarted: hasBeenStarted(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    courseActions: bindActionCreators(courseActions, dispatch),\n    popupActions: bindActionCreators(popupActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);\n"],"sourceRoot":""}