{"version":3,"sources":["../node_modules/@analytics/segment/lib/analytics-plugin-segment.browser.es.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","config","writeKey","disableAnonymousTraffic","syncAnonymousId","index","pluginConfig","undefined","name","methods","group","groupId","traits","options","callback","window","analytics","bootstrap","_ref","instance","user","once","_ref2","plugins","loaded","loadPlugin","initialize","_ref3","payload","customScriptSrc","Error","scripts","document","getElementsByTagName","scriptMatch","src","indexOf","isScriptLoaded","invoked","factory","t","e","Array","prototype","slice","call","unshift","push","load","n","createElement","type","async","id","a","parentNode","insertBefore","_loadOptions","SNIPPET_VERSION","page","_ref4","properties","track","_ref5","event","identify","_ref6","userId","reset","ready","_ref7","segmentUser","segmentAnonId","anonymousId","analyticsAnonId","setAnonymousId","initialized"],"mappings":"kHAAA,SAASA,EAAgBC,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAGT,SAASQ,EAAcC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAC/CI,EAAUX,OAAOY,KAAKF,GAEkB,oBAAjCV,OAAOa,wBAChBF,EAAUA,EAAQG,OAAOd,OAAOa,sBAAsBH,GAAQK,QAAO,SAAUC,GAC7E,OAAOhB,OAAOiB,yBAAyBP,EAAQM,GAAKd,gBAIxDS,EAAQO,SAAQ,SAAUpB,GACxBF,EAAgBU,EAAQR,EAAKY,EAAOZ,OAIxC,OAAOQ,EA/BT,OAmCA,IAAIa,EAAS,CAEXC,SAAU,KAGVC,yBAAyB,EAGzBC,iBAAiB,GAoMnB,IAAIC,EA/KJ,WACE,IAAIC,EAAehB,UAAUC,OAAS,QAAsBgB,IAAjBjB,UAAU,GAAmBA,UAAU,GAAK,GACvF,MAAO,CACLkB,KAAM,UACNP,OAAQd,EAAc,GAAIc,EAAQK,GAGlCG,QAAS,CAEPC,MAAO,SAAeC,GACpB,IAAIC,EAAStB,UAAUC,OAAS,QAAsBgB,IAAjBjB,UAAU,GAAmBA,UAAU,GAAK,GAC7EuB,EAAUvB,UAAUC,OAAS,QAAsBgB,IAAjBjB,UAAU,GAAmBA,UAAU,GAAK,GAC9EwB,EAAWxB,UAAUC,OAAS,EAAID,UAAU,QAAKiB,EAIrB,qBAArBQ,OAAOC,WAKlBD,OAAOC,UAAUN,MAAMC,EAASC,EAAQC,EAASC,KAGrDG,UAAW,SAAmBC,GAC5B,IAAIjB,EAASiB,EAAKjB,OACdkB,EAAWD,EAAKC,SAGhBlB,EAAOE,0BAA4BgB,EAASC,KAAK,WACnDD,EAASE,KAAK,iBAAiB,SAAUC,GACzBA,EAAMC,QACF,QAERC,UACRL,EAASM,WAAW,eAO5BC,WAAY,SAAoBC,GAC9B,IAAI1B,EAAS0B,EAAM1B,OACfkB,EAAWQ,EAAMR,SAEjBhB,GADUwB,EAAMC,QACU3B,EAAOE,yBACjCD,EAAWD,EAAOC,SAClB2B,EAAkB5B,EAAO4B,gBAE7B,IAAK3B,EACH,MAAM,IAAI4B,MAAM,uBAOlB,IAFaX,EAASC,KAAK,WAEZjB,EACb,OAAO,GAKR,WACC,IAAIa,EAAYD,OAAOC,UAAYD,OAAOC,WAAa,GAYvD,IAAKA,EAAUU,aAVf,WACE,IAAIK,EAAUC,SAASC,qBAAqB,UACxCC,EAAcL,GAAmB,mCACrC,QAAS/C,OAAOY,KAAKqC,GAASlC,QAAO,SAAUjB,GAG7C,QAFiBmD,EAAQnD,IAAQ,IACZuD,KAAO,IACjBC,QAAQF,IAAgB,KAClC3C,OAIE8C,GAAkB,CACrBrB,EAAUsB,SAAU,EACpBtB,EAAUP,QAAU,CAAC,cAAe,aAAc,YAAa,YAAa,WAAY,WAAY,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,OAAQ,OAAQ,MAAO,MAEjLO,EAAUuB,QAAU,SAAUC,GAC5B,OAAO,WACL,IAAIC,EAAIC,MAAMC,UAAUC,MAAMC,KAAKvD,WAGnC,OAFAmD,EAAEK,QAAQN,GACVxB,EAAU+B,KAAKN,GACRzB,IAIX,IAAK,IAAIwB,EAAI,EAAGA,EAAIxB,EAAUP,QAAQlB,OAAQiD,IAAK,CACjD,IAAIC,EAAIzB,EAAUP,QAAQ+B,GAC1BxB,EAAUyB,GAAKzB,EAAUuB,QAAQE,GAGnCzB,EAAUgC,KAAO,SAAUR,EAAGC,GAC5B,IAAIQ,EAAIjB,SAASkB,cAAc,UAC/BD,EAAEE,KAAO,kBACTF,EAAEG,OAAQ,EACVH,EAAEd,IAAMN,GAAmB,2CAA6CW,EAAI,oBAC5ES,EAAEI,GAAK,aACP,IAAIC,EAAItB,SAASC,qBAAqB,UAAU,GAChDqB,EAAEC,WAAWC,aAAaP,EAAGK,GAC7BtC,EAAUyC,aAAehB,GAG3BzB,EAAU0C,gBAAkB,QAC5B1C,EAAUgC,KAAK9C,IA5CpB,IAoDHyD,KAAM,SAAcC,GAClB,IAAIhC,EAAUgC,EAAMhC,QACK,qBAAdZ,WACXA,UAAU2C,KAAK/B,EAAQiC,aAIzBC,MAAO,SAAeC,GACpB,IAAInC,EAAUmC,EAAMnC,QACK,qBAAdZ,WAEXA,UAAU8C,MAAMlC,EAAQoC,MAAOpC,EAAQiC,WAAYjC,EAAQf,UAI7DoD,SAAU,SAAkBC,GAC1B,IAAItC,EAAUsC,EAAMtC,QACpB,GAAyB,qBAAdZ,UAAX,CACA,IAAImD,EAASvC,EAAQuC,OACjBvD,EAASgB,EAAQhB,OAEC,kBAAXuD,EACTnD,UAAUiD,SAASE,EAAQvD,GAE3BI,UAAUiD,SAASrD,KAKvBwD,MAAO,WACLpD,UAAUoD,SAIZC,MAAO,SAAeC,GACpB,IAAInD,EAAWmD,EAAMnD,SAErB,GADamD,EAAMrE,OACPG,iBAAwC,qBAAdY,UAAtC,CACA,IAAIuD,EAAcvD,UAAUI,OAE5B,GAAImD,EAAa,CACf,IAAIC,EAAgBD,EAAYE,cAC5BC,EAAkBvD,EAASC,KAAK,eAEhCoD,GAAiBA,IAAkBE,GACrCvD,EAASwD,eAAeH,MAM9BhD,OAAQ,WACN,OAAOT,OAAOC,aAAeA,UAAU4D,eAS9BvE","file":"static/js/13.0503e03e.chunk.js","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/* global analytics */\nvar config = {\n  /* Your segment writeKey */\n  writeKey: null,\n\n  /* Disable anonymous MTU */\n  disableAnonymousTraffic: false,\n\n  /* Sync segment Anonymous id with `analytics` Anon id */\n  syncAnonymousId: false\n  /* Override the Segment snippet url, for loading via custom CDN proxy */\n\n  /**\n   * Segment analytics plugin\n   * @link https://getanalytics.io/plugins/segment/\n   * @link https://segment.com/docs/sources/website/analytics.js/\n   * @param {object}  pluginConfig - Plugin settings\n   * @param {string}  pluginConfig.writeKey - Your segment writeKey\n   * @param {boolean} [pluginConfig.disableAnonymousTraffic] - Disable loading segment for anonymous visitors\n   * @param {boolean} [pluginConfig.customScriptSrc] - Override the Segment snippet url, for loading via custom CDN proxy\n   * @return {object} Analytics plugin\n   * @example\n   *\n   * segmentPlugin({\n   *   writeKey: '123-xyz'\n   * })\n   */\n\n};\n\nfunction segmentPlugin$1() {\n  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    name: 'segment',\n    config: _objectSpread({}, config, pluginConfig),\n\n    /* Custom methods to add .group call */\n    methods: {\n      /* Group https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#group */\n      group: function group(groupId) {\n        var traits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var callback = arguments.length > 3 ? arguments[3] : undefined;\n\n        // const analyticsInstance = this.instance\n        // If no segment, return early\n        if (typeof window.analytics === 'undefined') {\n          return;\n        } // Make group call to segment\n\n\n        window.analytics.group(groupId, traits, options, callback);\n      }\n    },\n    bootstrap: function bootstrap(_ref) {\n      var config = _ref.config,\n          instance = _ref.instance;\n\n      /* Load segment script after userId exists */\n      if (config.disableAnonymousTraffic && !instance.user('userId')) {\n        instance.once('identifyStart', function (_ref2) {\n          var plugins = _ref2.plugins;\n          var self = plugins['segment'];\n\n          if (!self.loaded()) {\n            instance.loadPlugin('segment');\n          }\n        });\n      }\n    },\n\n    /* Load Segment analytics.js on page */\n    initialize: function initialize(_ref3) {\n      var config = _ref3.config,\n          instance = _ref3.instance,\n          payload = _ref3.payload;\n      var disableAnonymousTraffic = config.disableAnonymousTraffic,\n          writeKey = config.writeKey,\n          customScriptSrc = config.customScriptSrc;\n\n      if (!writeKey) {\n        throw new Error('No segment writeKey');\n      }\n      /* Disable segment.com if user is not yet identified. Save on Monthly MTU bill $$$ */\n\n\n      var userID = instance.user('userId');\n\n      if (!userID && disableAnonymousTraffic) {\n        return false;\n      }\n      /* eslint-disable */\n\n\n      !function () {\n        var analytics = window.analytics = window.analytics || [];\n\n        function isScriptLoaded() {\n          var scripts = document.getElementsByTagName('script');\n          var scriptMatch = customScriptSrc || 'cdn.segment.com/analytics.js/v1/';\n          return !!Object.keys(scripts).filter(function (key) {\n            var scriptInfo = scripts[key] || {};\n            var src = scriptInfo.src || '';\n            return src.indexOf(scriptMatch) > -1;\n          }).length;\n        }\n\n        if (!analytics.initialize) {\n          if (!isScriptLoaded()) {\n            analytics.invoked = !0;\n            analytics.methods = [\"trackSubmit\", \"trackClick\", \"trackLink\", \"trackForm\", \"pageview\", \"identify\", \"reset\", \"group\", \"track\", \"ready\", \"alias\", \"debug\", \"page\", \"once\", \"off\", \"on\"];\n\n            analytics.factory = function (t) {\n              return function () {\n                var e = Array.prototype.slice.call(arguments);\n                e.unshift(t);\n                analytics.push(e);\n                return analytics;\n              };\n            };\n\n            for (var t = 0; t < analytics.methods.length; t++) {\n              var e = analytics.methods[t];\n              analytics[e] = analytics.factory(e);\n            }\n\n            analytics.load = function (t, e) {\n              var n = document.createElement(\"script\");\n              n.type = \"text/javascript\";\n              n.async = !0;\n              n.src = customScriptSrc || \"https://cdn.segment.com/analytics.js/v1/\" + t + \"/analytics.min.js\";\n              n.id = 'segment-io';\n              var a = document.getElementsByTagName(\"script\")[0];\n              a.parentNode.insertBefore(n, a);\n              analytics._loadOptions = e;\n            };\n\n            analytics.SNIPPET_VERSION = \"4.1.0\";\n            analytics.load(writeKey);\n          }\n        }\n      }();\n      /* eslint-enable */\n    },\n\n    /* Trigger Segment page view http://bit.ly/2LSPFr1 */\n    page: function page(_ref4) {\n      var payload = _ref4.payload;\n      if (typeof analytics === 'undefined') return;\n      analytics.page(payload.properties);\n    },\n\n    /* Track Segment event http://bit.ly/2WLnYkK */\n    track: function track(_ref5) {\n      var payload = _ref5.payload;\n      if (typeof analytics === 'undefined') return; // TODO map options from https://getanalytics.io/api/#analyticstrack to segment https://bit.ly/3lAfjhH\n\n      analytics.track(payload.event, payload.properties, payload.options);\n    },\n\n    /* Identify Segment user http://bit.ly/2VL45xD */\n    identify: function identify(_ref6) {\n      var payload = _ref6.payload;\n      if (typeof analytics === 'undefined') return;\n      var userId = payload.userId,\n          traits = payload.traits;\n\n      if (typeof userId === 'string') {\n        analytics.identify(userId, traits);\n      } else {\n        analytics.identify(traits);\n      }\n    },\n\n    /* Remove segment cookies on analytics.reset */\n    reset: function reset() {\n      analytics.reset();\n    },\n\n    /* Sync id when ready */\n    ready: function ready(_ref7) {\n      var instance = _ref7.instance,\n          config = _ref7.config;\n      if (!config.syncAnonymousId || typeof analytics === 'undefined') return;\n      var segmentUser = analytics.user();\n\n      if (segmentUser) {\n        var segmentAnonId = segmentUser.anonymousId();\n        var analyticsAnonId = instance.user('anonymousId'); // If has segment anonymous ID && doesnt match analytics anon id, update\n\n        if (segmentAnonId && segmentAnonId !== analyticsAnonId) {\n          instance.setAnonymousId(segmentAnonId);\n        }\n      }\n    },\n\n    /* Check if segment loaded */\n    loaded: function loaded() {\n      return window.analytics && !!analytics.initialized;\n    }\n  };\n}\n\n/* This module will shake out unused code + work in browser and node 🎉 */\n\nvar index = segmentPlugin$1;\n\nexport default index;\n"],"sourceRoot":""}