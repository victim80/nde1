{"version":3,"sources":["core/review/review.ts","core/review/eventHandler.ts","core/review/index.ts"],"names":["reviewApiUrl","courseId","name","email","authoringToolDomain","this","restoreUser","data","window","navigator","onLine","COMMENT_SENDING_FAILED","createdByName","createdBy","requester","post","headers","CONTENT_TYPES","JSON","status","STATUS_OK","localStorage","getItem","REVIEW_USER_EMAIL","REVIEW_USER_NAME","setItem","EventHandler","handlers","event","events","REVIEW_INITIALIZED","instance","reviewInitialize","bind","COMMENT_SENT","sendComment","REVIEWER_AUTHORIZED","userAuthorized","REVIEW_RESTORE_USER","review","initialize","sendCommentRequest","storeUser","BaseEventHandler","Review","eventHandler","on","off"],"mappings":"qOAgEe,M,iDAtDbA,kB,OACAC,c,OACAC,U,OACAC,W,OACAC,yB,4DAEkE,IAArDJ,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,SAAUG,EAA4B,EAA5BA,oBACnCC,KAAKL,aAAeA,EACpBK,KAAKJ,SAAWA,EAChBI,KAAKD,oBAAsBA,EAC3BC,KAAKC,gB,uHAGoBC,E,EAAAA,KACZC,OAAOC,UAAUC,O,yCAErBC,K,cAETJ,EAAKK,cAAgBP,KAAKH,KAC1BK,EAAKM,UAAYR,KAAKF,MACtBI,EAAKN,SAAWI,KAAKJ,S,mBACAa,IAAUC,KAAV,UAAkBV,KAAKL,aAAvB,YAA+C,CAClEgB,QAAS,CACP,eAAgBC,IAAcC,KAC9B,0BAA2Bb,KAAKD,qBAElCG,U,UAGsB,M,OAAXY,O,0CACJR,K,iCAGFS,K,sFAOP,OAHAf,KAAKF,MAAQkB,aAAaC,QAAQC,KAClClB,KAAKH,KAAOmB,aAAaC,QAAQE,KAE1B,CACLtB,KAAMG,KAAKH,KACXC,MAAOE,KAAKF,S,gCAINI,GACRc,aAAaI,QAAQF,IAAmBhB,EAAKJ,OAC7CkB,aAAaI,QAAQD,IAAkBjB,EAAKL,MAC5CG,KAAKF,MAAQI,EAAKJ,MAClBE,KAAKH,KAAOK,EAAKL,S,MCxDAwB,E,YAEnB,aAAe,IAAD,8BACZ,+CAFFC,cACc,EAEZ,EAAKA,SAAW,CACd,CAAEC,MAAOC,IAAOC,mBAAoBC,SAAU,EAAKC,iBAAiBC,KAAtB,iBAC9C,CAAEL,MAAOC,IAAOK,aAAcH,SAAU,EAAKI,YAAYF,KAAjB,iBACxC,CAAEL,MAAOC,IAAOO,oBAAqBL,SAAU,EAAKM,eAAeJ,KAApB,iBAC/C,CAAEL,MAAOC,IAAOS,oBAAqBP,SAAU,EAAKzB,YAAY2B,KAAjB,kBANrC,E,iFAU0D,IAArDjC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,SAAUG,EAA4B,EAA5BA,oBACzCmC,EAAOC,WAAW,CAAExC,eAAcC,WAAUG,0B,qCAGlB,IAAdG,EAAa,EAAbA,KACZ,OAAOgC,EAAOE,mBAAmB,CAAElC,W,wCAGC,IAArBL,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACrBoC,EAAOG,UAAU,CAAExC,OAAMC,Y,oCAIzB,OAAOoC,EAAOjC,kB,GAzBwBqC,KCFpCC,E,WAEJ,aAAe,yBADfC,kBACc,EACZxC,KAAKwC,aAAe,IAAInB,E,wDAIxBrB,KAAKwC,aAAaC,O,oCAIlBzC,KAAKwC,aAAaE,U,KAIP,cAAIH","file":"static/js/10.24388d62.chunk.js","sourcesContent":["import requester from 'core/http/requester';\nimport { CONTENT_TYPES } from 'constants/common';\nimport {\n  COMMENT_SENDING_FAILED,\n  STATUS_OK,\n  REVIEW_USER_EMAIL,\n  REVIEW_USER_NAME\n} from 'constants/review';\n\nclass Review {\n  reviewApiUrl: any;\n  courseId: any;\n  name: any;\n  email: any;\n  authoringToolDomain: any;\n\n  initialize({ reviewApiUrl, courseId, authoringToolDomain }: any) {\n    this.reviewApiUrl = reviewApiUrl;\n    this.courseId = courseId;\n    this.authoringToolDomain = authoringToolDomain;\n    this.restoreUser();\n  }\n\n  async sendCommentRequest({ data }: any) {\n    let online = window.navigator.onLine;\n    if (!online) {\n      return COMMENT_SENDING_FAILED;\n    }\n    data.createdByName = this.name;\n    data.createdBy = this.email;\n    data.courseId = this.courseId;\n    let response = await requester.post(`${this.reviewApiUrl}comments`, {\n      headers: {\n        'Content-Type': CONTENT_TYPES.JSON,\n        'X-Authoring-Tool-Domain': this.authoringToolDomain\n      },\n      data\n    });\n\n    if (response.status !== 200) {\n      return COMMENT_SENDING_FAILED;\n    }\n\n    return STATUS_OK;\n  }\n\n  restoreUser() {\n    this.email = localStorage.getItem(REVIEW_USER_EMAIL);\n    this.name = localStorage.getItem(REVIEW_USER_NAME);\n\n    return {\n      name: this.name,\n      email: this.email\n    };\n  }\n\n  storeUser(data: any) {\n    localStorage.setItem(REVIEW_USER_EMAIL, data.email);\n    localStorage.setItem(REVIEW_USER_NAME, data.name);\n    this.email = data.email;\n    this.name = data.name;\n  }\n}\n\nexport default new Review();\n","import { events } from 'core/events/eventEmitter';\nimport BaseEventHandler from 'core/events/eventHandler';\nimport review from './review';\n\nexport default class EventHandler extends BaseEventHandler {\n  handlers: any;\n  constructor() {\n    super();\n    this.handlers = [\n      { event: events.REVIEW_INITIALIZED, instance: this.reviewInitialize.bind(this) },\n      { event: events.COMMENT_SENT, instance: this.sendComment.bind(this) },\n      { event: events.REVIEWER_AUTHORIZED, instance: this.userAuthorized.bind(this) },\n      { event: events.REVIEW_RESTORE_USER, instance: this.restoreUser.bind(this) }\n    ];\n  }\n\n  reviewInitialize({ reviewApiUrl, courseId, authoringToolDomain }: any) {\n    review.initialize({ reviewApiUrl, courseId, authoringToolDomain });\n  }\n\n  sendComment({ data }: any) {\n    return review.sendCommentRequest({ data });\n  }\n\n  userAuthorized({ name, email }: any) {\n    review.storeUser({ name, email });\n  }\n\n  restoreUser() {\n    return review.restoreUser();\n  }\n}\n","import EventHandler from './eventHandler';\n\nclass Review {\n  eventHandler: any;\n  constructor() {\n    this.eventHandler = new EventHandler();\n  }\n\n  subscribe() {\n    this.eventHandler.on();\n  }\n\n  unsubscribe() {\n    this.eventHandler.off();\n  }\n}\n\nexport default new Review();\n"],"sourceRoot":""}