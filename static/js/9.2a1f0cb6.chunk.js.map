{"version":3,"sources":["assets/figures/Loader.tsx","components/login/Input/Input.styled.ts","components/login/Input/Input.tsx","components/login/Input/index.ts","components/review/LoginForm/LoginForm.styled.ts","components/review/LoginForm/LoginForm.tsx","components/review/CommentForm/CommentForm.styled.ts","components/review/CommentForm/CommentForm.tsx","components/review/ReviewForm/ReviewForm.styled.ts","components/review/ReviewForm/ReviewForm.tsx","components/review/ReviewSpot/ReviewSpot.styled.ts","components/review/ReviewSpot/ReviewSpot.tsx","components/review/ReviewSpot/index.ts"],"names":["withTheme","props","width","version","id","xmlns","x","y","viewBox","enableBackground","arialabel","localize","fill","transparentize","theme","colors","mainColor","d","attributeName","attributeType","type","dur","from","to","repeatCount","InputElement","styled","input","attrs","name","placeholder","tabIndex","onInvalid","autoComplete","pattern","required","secondaryFont","textColor","contentBodyColor","media","mobile","isBlur","css","incorrectColor","bounce","correctColor","validationStatusBeforeSubmit","InputLabel","label","transition","ValidIcon","Icon","LoadWrapper","div","ValidationMessageBlock","TextError","Text","EyeIcon","role","ariaLabel","buttonDefaultStyle","InputContainer","isUserExist","Input","validationPassword","event","onChange","isSpaceInPass","test","target","value","isPatternPass","RegExp","setState","startInputPass","showErrorText","state","validValue","hasValue","showPassword","showPassValidationBlock","isLoaded","this","defaultValue","onBlur","classList","remove","validity","typeMismatch","patternMismatch","length","INPUT_TYPE","EMAIL","TEXT","PASSWORD","idInput","labelText","loadIcon","validIcon","textError","refInput","showValidationMessage","onFocus","ref","setTypePassword","className","onBlurValidationInput","onInputFocus","htmlFor","size","data-test","onClick","showHidePassword","onKeyDown","KEYS","ENTER","toLowerCase","SPACEBAR","includes","key","preventDefault","React","defaultProps","FormTitle","h3","reviewFontText","LoginFormContainer","LoginInput","LoginInputWrapper","LoginForm","email","getRefs","node","EMAIL_REGEX","source","CommentFormContainer","CommentTextarea","textarea","validComment","localizationKeys","REVIEW_COMMENT_PROPERTIES","DEFAULT_TITLE","TITLE","INTRODUCTION","LEARNING_CONTENT","QUESTION","VOICE_OVER","CONTENT_ITEM","TITLE_OF_THE_SECTION","GENERAL","commentText","isValidComment","context","isGeneral","title","property","REVIEW_COMMENT_TYPES","INFORMATION_CONTENT","COURSE","SECTION","getLocalizationKey","FormWrapper","form","SubmitIcon","FormContent","FormActions","FormSubmitButton","button","FormCancelButton","SuccessMessageIcon","centerAbsoluteElementY","ErrorMessageIcon","SuccessMessage","crossFade","ErrorMessage","ReviewForm","loginRefs","getReviewerEmailAndName","a","async","eventEmitter","emit","events","REVIEW_RESTORE_USER","response","beforeSubmitValidation","nameValid","valid","emailValid","checkInputValidation","showLoginForm","element","validateComment","requestSending","isValidBeforeSubmit","trim","setTimeout","focus","sendComment","REVIEWER_AUTHORIZED","data","text","showSuccessMessage","showErrorMessage","COMMENT_SENT","STATUS_OK","COMMENT_SENDING_FAILED","activeElem","document","activeElement","getAttribute","closePopover","disabled","CommentIcon","ToggleButtonText","span","ToggleButton","isActive","ReviewWrapper","isVoiceOver","small","large","ReviewSpot","toggle","isExpanded","closePopup","hintName","Hint","position","hintElements","trigger","open","onRequestClose","arrow","interactive","tooltipTheme","html","ariaModal"],"mappings":"kPAuCeA,uBA7BO,SAACC,GAAD,OACpB,kBAAC,IAAD,CACEC,MAAOD,EAAMC,MACbC,QAAQ,MACRC,GAAG,KACHC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,cACjBC,UAAS,UAAKC,YAAS,yBAEvB,0BACEC,KAAMC,YAAeZ,EAAMa,MAAMC,OAAOC,WACxCC,EAAE,kGAEF,sCACEC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACLC,GAAG,YACHC,YAAY,oB,iwJCZb,IAAMC,EAAeC,UAAOC,MAAMC,OAAM,SAAC3B,GAAD,MAA0B,CACvEmB,KAAMnB,EAAMmB,KACZS,KAAM5B,EAAM4B,KACZC,YAAa7B,EAAM6B,YACnBC,SAAU9B,EAAM8B,SAChB3B,GAAIH,EAAMG,GACV4B,UAAW/B,EAAM+B,UACjBC,aAAchC,EAAMgC,aACpBC,QAASjC,EAAMiC,QACfC,SAAU,cATgBT,CAAH,IAWrBU,KAU4B,SAAAnC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAChE,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAGjE,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAOL,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOC,UAAW,OAChE,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOC,aAC5B,SAAAf,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAKvC,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAG/DE,IAAMC,OA1Ce,MAgDnB,SAAAvC,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,KAEsB,SAAAzC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAEtE,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,QAC3C,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAC9CC,QAKJ,SAAA3C,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,KAEsB,SAAAzC,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAE5C,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,OAC3C,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,mBAKhC,SAAA5C,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,oBAClB,SAAArC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,OACrE,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,gBAGlD,SAAA5C,GAAK,OACkC,IAAvCA,EAAM6C,8BACNJ,cADA,IAGwB7B,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KACnCxB,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,KAC5D1C,EAAMa,MAAMC,OAAO4B,eACrCC,QAKKG,EAAarB,UAAOsB,MAAV,KAQZ,SAAA/C,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAE7DZ,EAKAwB,YAAW,OAEXxB,EACAA,EACAA,EAKAA,GAKSyB,EAAYxB,kBAAOyB,IAAPzB,CAAH,KACX,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,eAOnCpB,GACE,SAAAxB,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,OAMFjB,GACE,SAAAxB,GAAK,OACY,IAAjBA,EAAMwC,QACNC,cADA,OAMFjB,GAKS2B,EAAc1B,UAAO2B,IAAIzB,OAAM,iBAAO,CACjD,YAAa,kBADYF,CAAH,KASX4B,EAAyB5B,UAAO2B,IAAV,KAatBE,EAAY7B,kBAAY8B,IAAZ9B,CAAH,KAET,SAAAzB,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAOnCW,GAES,SAAArD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,MAI/DiB,GACS,SAAArD,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OAKtD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAOrCW,EAAwCA,GAC/B,SAAArD,GAAK,OAAIA,EAAMa,MAAMC,OAAO8B,eAGrCS,EAA0CA,GACjC,SAAArD,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,kBAkB9Bc,EAAU/B,kBAAOyB,KAAMvB,OAAM,SAAC3B,GAAD,MAA0B,CAClEyD,KAAMzD,EAAMyD,KACZ3B,SAAU9B,EAAM8B,SAChB,aAAc9B,EAAM0D,aAHCjC,CAAH,IAKhBkC,KAKO,SAAA3D,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,OASpD,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAI5B,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAK5B,SAAApC,GAAK,OAAIA,EAAMa,MAAMC,OAAOsB,aAQ5BwB,EAAiBnC,UAAO2B,IAAV,IACvBjB,IAKgBX,GACI,SAAAxB,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,QAC5C,SAAApC,GAAK,OAAIY,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,QACrE,SAAA1C,GAAK,OAAIA,EAAMa,MAAMC,OAAO4B,iBAC9CC,KAGF,SAAA3C,GAAK,OACiB,IAAtBA,EAAM6D,aACNpB,cADA,IAEIjB,EACoBZ,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KACnCxB,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,KAC5D1C,EAAMa,MAAMC,OAAO4B,eACrCC,IAGFnB,EAAwByB,EAIxBK,EAIAD,MCtPKS,EAAb,YACE,WAAY9D,GAAoB,IAAD,8BAC7B,4CAAMA,KA+CR+D,mBAAqB,SAACC,EAAYC,GAChC,IAAMC,EAAgB,KAAKC,KAAKH,EAAMI,OAAOC,OACzCC,GAAgB,EAChB,EAAKtE,MAAMiC,UACbqC,EAAgB,IAAIC,OAAO,EAAKvE,MAAMiC,SAASkC,KAAKH,EAAMI,OAAOC,QAGxC,IAAvBL,EAAMI,OAAOC,OACf,EAAKG,SAAS,CACZC,eAAuC,IAAvBT,EAAMI,OAAOC,MAC7BH,gBACAI,mBAICJ,GAAiBI,GAAiBL,GACrCA,EAASD,IAhEkB,EAoE/BU,cAAgB,WACd,EAAKF,SAAS,CAAEE,eAAgB,EAAKC,MAAMC,aAAe,EAAKD,MAAME,YAnErE,EAAKF,MAAQ,CACXE,UAAU,EACVD,YAAY,EACZF,eAAe,EACfI,cAAc,EACdC,yBAAyB,EACzBb,eAAe,EACfI,eAAe,EACfG,gBAAgB,EAChBO,UAAU,EACVxC,QAAQ,GAZmB,EADjC,iFAwB6ByC,KAAKjF,MAAtBkF,cAGND,KAAKT,SAAS,CAAEK,UAAU,MA3BhC,4CA+B8Bb,EAAYmB,EAAahE,GA/BvD,qEAgCI6C,EAAMI,OAAOgB,UAAUC,OAAO,WAC9BJ,KAAKT,SAAS,CACZI,YAAaZ,EAAMI,OAAOkB,SAASC,eAAiBvB,EAAMI,OAAOkB,SAASE,gBAC1ET,wBAAuD,IAA9Bf,EAAMI,OAAOC,MAAMoB,OAC5CjD,OAAQrB,IAASuE,IAAWC,SAE1BR,EAtCR,uBAuCMF,KAAKT,SAAS,CAAEQ,UAAU,IAvChC,mBAwCYG,EAAOnB,IAxCnB,OAyCMiB,KAAKT,SAAS,CAAEQ,UAAU,IAzChC,oFA6CehB,GACXiB,KAAKT,SAAS,CAAEhC,QAAQ,MA9C5B,yCA0EIyC,KAAKT,SAAS,CAAEM,cAAeG,KAAKN,MAAMG,iBA1E9C,wCA8EI,OAAOG,KAAKN,MAAMG,aAAeY,IAAWE,KAAOF,IAAWG,WA9ElE,gDAkFIZ,KAAKT,SAAS,CAAEO,yBAAyB,MAlF7C,+BAqFY,IAAD,SAqBHE,KAAKjF,MAnBP8F,EAFK,EAELA,QACA3E,EAHK,EAGLA,KACAS,EAJK,EAILA,KAJK,IAKLE,gBALK,MAKM,EALN,EAMLD,EANK,EAMLA,YACAkE,EAPK,EAOLA,UACA9B,EARK,EAQLA,SACA+B,EATK,EASLA,SACAC,EAVK,EAULA,UACAC,EAXK,EAWLA,UACAC,EAZK,EAYLA,SACAjB,EAbK,EAaLA,aACAlD,EAdK,EAcLA,aACAC,EAfK,EAeLA,QACAY,EAhBK,EAgBLA,6BACAuD,EAjBK,EAiBLA,sBACAvC,EAlBK,EAkBLA,YACAsB,EAnBK,EAmBLA,OACAkB,EApBK,EAoBLA,QApBK,EAsBsBpB,KAAKN,MAA1BnC,EAtBD,EAsBCA,OAAQwC,EAtBT,EAsBSA,SAChB,OACE,gBAACpB,EAAD,CAAgB/C,MAAOoE,KAAKjF,MAAMa,MAAOgD,YAAaA,IAAe,GACnE,gBAACrC,EAAD,CACErB,GAAI2F,EACJQ,IAAKH,EACLhF,KAAMA,IAASuE,IAAWG,SAAWZ,KAAKsB,kBAAoBpF,EAC9DS,KAAMA,EACNC,YAAaA,EACb2E,UAAYvB,KAAKN,MAAME,SAAwB,OAAb,WAClC/C,SAAUA,EACVoD,aAAcA,EACdlD,aAAcA,GAAgB,GAC9BC,QAASA,EACTkD,OAAM,+GAAE,SAAAnB,GACN,EAAKQ,SAAS,CAAEK,WAAYb,EAAMI,OAAOC,QACzC,EAAKoC,sBAAsBzC,EAAOmB,EAAQhE,MAE5CkF,QAAO,+GAAE,SAACrC,GACJ7C,IAASuE,IAAWG,UACtB,EAAKd,0BAEHsB,GACFA,EAAQrC,GAEV,EAAK0C,aAAa1C,MAEpBC,SACE9C,IAASuE,IAAWG,SAChB,SAAC7B,GAAD,OAAgB,EAAKD,mBAAmBC,EAAOC,IAC/CA,EAENlC,UAAWkD,KAAKP,cAChB7B,6BAA8BA,EAC9BhC,MAAOoE,KAAKjF,MAAMa,MAClB2B,OAAQA,IAEV,gBAACM,EAAD,CAAYjC,MAAOoE,KAAKjF,MAAMa,MAAO8F,QAASb,GAC3CC,GAEFE,GACC,gBAAChD,EAAD,CAAWpC,MAAOoE,KAAKjF,MAAMa,MAAOe,KAAK,eAAegF,KAAM,GAAIpE,OAAQA,IAE3EwD,GAAYhB,GACX,gBAAC7B,EAAD,CAAa0D,YAAW,UAAU,gBAAC,EAAD,CAAQ5G,MAAO,GAAIY,MAAOoE,KAAKjF,MAAMa,SAExEqF,GAAaE,GACZ,gBAAC/C,EAAD,KACE,gBAACC,EAAD,CACEzC,MAAOoE,KAAKjF,MAAMa,MAClB2F,UAAYvB,KAAKN,MAAMC,WAAwB,GAAX,SACpCiC,YAAU,2BAEV,gBAAC3D,EAAA,EAAD,CAAMtB,KAAK,mBAAmBf,MAAOoE,KAAKjF,MAAMa,QAC/CqF,IAIN/E,IAASuE,IAAWG,UACnB,gBAACrC,EAAD,CACEC,KAAK,SACL3B,SAAU,EACV4B,UACEuB,KAAKN,MAAMG,aACPpE,YAAS,yBACTA,YAAS,yBAEfkB,KAAMqD,KAAKN,MAAMG,aAAe,YAAc,WAC9CgC,QAAS,WACP,EAAKC,oBAEPC,UAAW,SAAChD,GAER,CAACiD,IAAKC,MAAMC,cAAeF,IAAKG,SAASD,eAAeE,SACtDrD,EAAMsD,IAAIH,iBAGZnD,EAAMuD,iBACN,EAAKR,qBAGTlG,MAAOoE,KAAKjF,MAAMa,QAGrBM,IAASuE,IAAWG,UAAYO,GAC/B,gBAAC/C,EAAD,CAAwBmD,UAAWvB,KAAKN,MAAMI,wBAA0B,OAAS,QAC/E,gBAACzB,EAAD,CACEzC,MAAOoE,KAAKjF,MAAMa,MAClB2F,UACEvB,KAAKN,MAAMF,iBAAmBQ,KAAKN,MAAMT,cAAgB,UAAY,UAGvE,gBAAChB,EAAA,EAAD,CAAMtB,KAAK,iBACVlB,YAAS,4BAEZ,gBAAC4C,EAAD,CACEkD,UACEvB,KAAKN,MAAMF,iBAAmBQ,KAAKN,MAAML,cAAgB,QAAU,WAErEzD,MAAOoE,KAAKjF,MAAMa,OAElB,gBAACqC,EAAA,EAAD,CAAMtB,KAAK,iBACVlB,YAAS,uCAjNxB,GAA2B8G,aAAd1D,EAiBJ2D,aAAe,CACpBxB,WAAW,EACXG,uBAAuB,EACvBtE,SAAU,GAsMC/B,0BAAU+D,GCvRzB,mC,ilHCIO,IAAM4D,EAAYjG,UAAOkG,GAAV,IAClBC,KAMSC,EAAqBpG,UAAO2B,IAAV,IAE3BsE,GAcSI,EAAarG,kBAAOqC,IAAPrC,CAAH,KAWVsG,EAAoBtG,UAAO2B,IAAV,KAQtB,SAAApD,GAAK,OACkC,IAAvCA,EAAM6C,8BACNJ,cADA,OAeAmF,KAsEA,SAAA5H,GAAK,OACkC,IAAvCA,EAAM6C,8BACNJ,cADA,Q,QC1EOuF,EA5CU,SAAChI,GAA2B,IAC3C4B,EAA2C5B,EAA3C4B,KAAMqG,EAAqCjI,EAArCiI,MAAOhE,EAA8BjE,EAA9BiE,SAAUkB,EAAoBnF,EAApBmF,OAAQ+C,EAAYlI,EAAZkI,QACvC,OACE,gBAACL,EAAD,KACE,gBAACH,EAAD,KAAYhH,YAAS,+BACrB,gBAACqH,EAAD,CAAmBlF,6BAA8BjB,GAC/C,gBAACkG,EAAD,CACEhC,QAAQ,OACR3E,KAAMuE,IAAWE,KACjBO,SAAU,SAACgC,GAAD,OAAeD,EAAQC,IACjCvG,KAAK,OACLmE,UAAU,OACVlE,YAAY,WACZoC,SAAUA,EACVkB,OAAQA,EACRc,WAAW,EACXhE,QAAQ,eACRiE,UAAWxF,YAAS,sBACpBmC,6BAA8BjB,EAC9Bf,MAAOb,EAAMa,SAGjB,gBAACkH,EAAD,CAAmBlF,6BAA8BoF,GAC/C,gBAACH,EAAD,CACEhC,QAAQ,QACR3E,KAAMuE,IAAWC,MACjBQ,SAAU,SAACgC,GAAD,OAAeD,EAAQC,IACjCvG,KAAK,QACLmE,UAAU,QACVlE,YAAY,mBACZG,aAAa,YACbiC,SAAUA,EACVkB,OAAQA,EACRc,WAAW,EACXC,UAAWxF,YAAS,uBACpBmC,6BAA8BoF,EAC9BpH,MAAOb,EAAMa,MACboB,QAASmG,IAAYC,Y,i+BC/CxB,I,EAAMC,EAAuB7G,UAAO2B,IAAV,KAIpBsE,EAAYjG,UAAOkG,GAAV,IAClBC,KAWSW,EAAkB9G,UAAO+G,SAAS7G,OAAM,SAAC3B,GAAD,MAAkC,CACrF,aAAcA,EAAM0D,aADSjC,CAAH,IAGxBmG,KAwBA,SAAA5H,GAAK,OACJA,EAAMyI,cACPhG,cADA,IAGwB7B,YAAeZ,EAAMa,MAAMC,OAAOsB,UAAW,KACnCxB,YAAeZ,EAAMa,MAAMC,OAAO4B,eAAgB,KAC5D1C,EAAMa,MAAMC,OAAO4B,eACrCC,QCvCG+F,GAA2C,mBACrDC,IAA0BC,cAAgB,gBADW,cAErDD,IAA0BE,MAAQ,kBAFmB,cAGrDF,IAA0BG,aAAe,wBAHY,cAIrDH,IAA0BI,iBAAmB,4BAJQ,cAKrDJ,IAA0BK,SAAW,oBALgB,cAMrDL,IAA0BM,WAAa,sBANc,cAOrDN,IAA0BO,aAAe,wBAPY,cAQrDP,IAA0BQ,qBAAuB,mBARI,cASrDR,IAA0BS,QAAU,0BATiB,GAsCjD,IAuBQrJ,uBAvBY,SAACC,GAA6B,IAC/CqJ,EAAuErJ,EAAvEqJ,YAAaC,EAA0DtJ,EAA1DsJ,eAAgBrF,EAA0CjE,EAA1CiE,SAAUiE,EAAgClI,EAAhCkI,QAASqB,EAAuBvJ,EAAvBuJ,QAASC,EAAcxJ,EAAdwJ,UAG3DC,EA9BR,YAQY,IAPVtI,EAOS,EAPTA,KAOS,IANTuI,gBAMS,MANE,GAMF,EACT,GADS,EALTF,UAOE,OAAOd,EAAiBC,IAA0BS,SAEpD,OAAQjI,GACN,KAAKwI,IAAqBX,SACxB,OAAON,EAAiBgB,IAAahB,EAAiBC,IAA0BK,UAClF,KAAKW,IAAqBC,oBACxB,OAAOlB,EAAiBgB,IAAahB,EAAiBC,IAA0BO,cAClF,KAAKS,IAAqBE,OACxB,OAAOnB,EAAiBgB,GAC1B,KAAKC,IAAqBG,QACxB,OAAOpB,EAAiBC,IAA0BQ,sBACpD,QACE,OAAOT,EAAiBC,IAA0BC,gBAQxCmB,CAAmB,CAAE5I,KAFtBoI,GAAWA,EAAQpI,KAESuI,SADxBH,GAAWA,EAAQG,SACeF,cAEnD,OACE,kBAAClB,EAAD,KACE,kBAAC,EAAD,KAAY5H,YAAS,IAAD,OAAK+I,EAAL,OACpB,kBAAClB,EAAD,CACEzG,SAAU,EACVwE,IAAK4B,EACLxE,UAAWhD,YAAS,kBACpB+H,aAAca,EACdrF,SAAUA,EACVrC,KAAK,cACLyC,MAAOgF,EACPxI,MAAOb,EAAMa,Y,43EC9DeY,UAAO2B,IAAV,MAA1B,IAIM4G,GAAcvI,UAAOwI,KAAV,KACpBrC,KAKSsC,GAAazI,kBAAOyB,IAAPzB,CAAH,MAKV0I,GAAc1I,UAAO2B,IAAV,MAER,SAAApD,GAAK,OAAIA,EAAMa,MAAMC,OAAOuB,mBAOxCC,IAAMC,OATc,OAcX6H,GAAc3I,UAAO2B,IAAV,MAWXiH,GAAmB5I,UAAO6I,OAAV,KACzB3G,IAUwB/C,YAAe,UAAW,IAClDoC,YAAW,KAmBFuH,GAAmB9I,UAAO6I,OAAV,KACzB3G,KAaS6G,GAAqB/I,kBAAOyB,IAAPzB,CAAH,KAC3BgJ,KAOSC,GAAmBjJ,UAAO2B,IAAV,KACzBqH,KAQSE,GAAiBlJ,UAAO2B,IAAV,IACvBwE,IAMAgD,YAAU,cAMDC,GAAepJ,kBAAOkJ,GAAPlJ,CAAH,KC0KVqJ,GA1Pf,YAGE,WAAY9K,GAAyB,IAAD,8BAClC,4CAAMA,KAHR+K,eAEoC,IAwBpCC,wBAA0B,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACIE,IAAaC,KAAKC,IAAOC,sBAD7B,OAClBC,EADkB,OAExB,EAAK/G,SAAS,CACZ5C,KAAM2J,EAAS,GAAG3J,MAAQ,GAC1BqG,MAAOsD,EAAS,GAAGtD,OAAS,KAJN,sCAxBU,EAgCpCuD,uBAAyB,WACvB,IAAMC,IAAY,EAAKV,UAAUnJ,MAAO,EAAKmJ,UAAUnJ,KAAK0D,SAASoG,MAC/DC,IAAa,EAAKZ,UAAU9C,OAAQ,EAAK8C,UAAU9C,MAAM3C,SAASoG,MACxE,EAAKlH,SAAS,CACZ3B,6BAA8B,CAC5BjB,KAAM6J,EACNxD,MAAO0D,MAtCuB,EA2CpCC,qBAAuB,SAAC5H,GAClBA,GACF,EAAKQ,SAAS,CACZ3B,6BAA6B,eACxB,EAAK8B,MAAM9B,6BADY,eAEzBmB,EAAMI,OAAOxC,KAAOoC,EAAMI,OAAOkB,SAASoG,QAAS,OAhDxB,EAsDpCzH,SAAW,SAACD,GACV,EAAKQ,SAAL,eAAiBR,EAAMI,OAAOxC,KAAOoC,EAAMI,OAAOC,SAvDhB,EA0DpCc,OAAS,SAACnB,GAER,OADA,EAAKQ,SAAL,eAAiBR,EAAMI,OAAOxC,KAAOoC,EAAMI,OAAOC,QAC3C,EAAKM,MAAMkH,eAAiB,EAAKD,qBAAqB5H,IA5D3B,EA+DpCkE,QAAU,SAAC4D,GACLA,IACF,EAAKf,UAAUe,EAAQlK,MAAQkK,IAjEC,EAqEpCC,gBAAkB,WAAO,IAAD,EAQlB,EAAKpH,MANPsD,EAFoB,EAEpBA,MACArG,EAHoB,EAGpBA,KACAyH,EAJoB,EAIpBA,YACAwC,EALoB,EAKpBA,cACAhJ,EANoB,EAMpBA,6BACAmJ,EAPoB,EAOpBA,eAGIC,EACJpJ,EAA6BoF,OAASpF,EAA6BjB,KAErE,OAAKyH,EAAY6C,OASZjE,GAAUrG,IAMViK,IAAkBI,GAAwBD,IAL7C,EAAKxH,SAAS,CACZqH,eAAe,KAEV,IAZP,EAAKrH,SAAS,CAAE8E,gBAAgB,IAChC6C,YAAW,WACT,EAAK3H,SAAS,CAAE8E,gBAAgB,IAAQ,WACtC,EAAKyB,UAAU1B,YAAY+C,aAE5B,MACI,IAzFyB,EAwGpCC,YAAc,SAAOrI,GAAP,+BAAAiH,EAAAC,OAAA,mDACZlH,EAAMuD,iBACF,EAAK5C,MAAMkH,gBACb,EAAKD,qBAAqB5H,GAC1B,EAAKwH,0BAJK,EAMmB,EAAKxL,MAA5BuJ,EANI,EAMJA,QAASC,EANL,EAMKA,UANL,EAOyB,EAAK7E,MAAlCsD,EAPI,EAOJA,MAAOrG,EAPH,EAOGA,KAAMyH,EAPT,EAOSA,YAChB,EAAK0C,kBARE,wDAWZZ,IAAaC,KAAKC,IAAOiB,oBAAqB,CAAErE,QAAOrG,SACjD2K,EAA+B,CACnCC,KAAMnD,GAGHG,IACH+C,EAAKhD,QAAUA,GAEjB,EAAK/E,SAAS,CACZiI,oBAAoB,EACpBC,kBAAkB,EAClBV,gBAAgB,IAtBN,YAAAf,EAAA,MAwBgBE,IAAaC,KAAKC,IAAOsB,aAAc,CAAEJ,UAxBzD,SAwBNhB,EAxBM,QA0BC,KAAOqB,KAClB,EAAKpI,SAAS,CACZiI,oBAAoB,EACpBC,kBAAkB,EAClBb,eAAe,EACfvC,gBAAgB,EAChBD,YAAa,GACb2C,gBAAgB,IAIhBT,EAAS,KAAOsB,KAClB,EAAKrI,SAAS,CACZkI,kBAAkB,EAClBD,oBAAoB,EACpBT,gBAAgB,IAzCR,uCArGZ,EAAKrH,MAAQ,CACXqH,gBAAgB,EAChB3C,YAAa,GACbC,gBAAgB,EAChBmD,oBAAoB,EACpBC,kBAAkB,EAClBb,eAAe,EACfjK,KAAM,GACNqG,MAAO,GACPpF,6BAA8B,CAC5BjB,MAAM,EACNqG,OAAO,IAGX,EAAK+C,0BACL,EAAKD,UAAY,CACfnJ,KAAM,GACNqG,MAAO,IApByB,EAHtC,kFAyJwB,IAAD,OACb6E,EAAaC,SAASC,cAE1BF,GACoC,gBAApCA,EAAWG,aAAa,SACxBhI,KAAK8F,UAAU1B,aAEf8C,YAAW,WACT,EAAKxH,MAAM2E,gBAAkB,EAAKyB,UAAU1B,YAAY+C,UACvD,KAlKT,+BAsKY,IAAD,SACsCnH,KAAKjF,MAA1CkN,EADD,EACCA,aAAc3D,EADf,EACeA,QAASC,EADxB,EACwBA,UADxB,EASHvE,KAAKN,MANP8H,EAHK,EAGLA,mBACAC,EAJK,EAILA,iBACAb,EALK,EAKLA,cACAG,EANK,EAMLA,eACA3C,EAPK,EAOLA,YACAC,EARK,EAQLA,eARK,EAUiBrE,KAAKN,MAAM9B,6BAA3BjB,EAVD,EAUCA,KAAMqG,EAVP,EAUOA,MACd,OACE,gBAAC+B,GAAD,KACE,gBAACG,GAAD,CAAatJ,MAAOoE,KAAKjF,MAAMa,OAC5BgL,EACC,gBAAC,EAAD,CACE3D,QAASjD,KAAKiD,QACdtG,KAAMA,EACNqG,MAAOA,EACPhE,SAAUgB,KAAKhB,SACfkB,OAAQF,KAAKE,OACbtE,MAAOoE,KAAKjF,MAAMa,QAGpB,gBAAC,EAAD,CACEqH,QAASjD,KAAKiD,QACdmB,YAAaA,EACbC,eAAgBA,EAChBrF,SAAUgB,KAAKhB,SACfsF,QAASA,EACTC,UAAWA,EACX3I,MAAOoE,KAAKjF,MAAMa,QAGtB,gBAACuJ,GAAD,CAAa3G,KAAK,gBAChB,gBAAC4G,GAAD,CACEvI,SAAU,EACVqL,WAAUnB,GAAiB,WAC3BlF,QAAS7B,KAAKoH,YACdrF,UAAW,SAAChD,GAAgB,IAAD,KAEvB,UAAAA,EAAMsD,WAAN,eAAWH,iBAAkBF,IAAKG,SAASD,gBAC3C,UAAAnD,EAAMsD,WAAN,eAAWH,iBAAkBF,IAAKC,MAAMC,eAExC,EAAKkF,YAAYrI,KAIrB,gBAACkG,GAAD,CAAYtD,KAAM,EAAGhF,KAAM,aAAcf,MAAOoE,KAAKjF,MAAMa,QAC1DgL,EAAgBnL,YAAS,kBAAoBA,YAAS,WAEzD,gBAAC6J,GAAD,CACEzI,SAAU,EACVgF,QAASoG,EACTlG,UAAW,SAAAhD,GAAU,IAAD,KAEhB,UAAAA,EAAMsD,WAAN,eAAWH,iBAAkBF,IAAKG,SAASD,gBAC3C,UAAAnD,EAAMsD,WAAN,eAAWH,iBAAkBF,IAAKC,MAAMC,eAExC+F,EAAalJ,KAIhBtD,YAAS,cAGb+L,GACC,gBAAC9B,GAAD,KACE,gBAACH,GAAD,CAAoB3J,MAAOoE,KAAKjF,MAAMa,MAAO+F,KAAM,EAAGhF,KAAM,iBAC3DlB,YAAS,yCAGbgM,GACC,gBAAC7B,GAAD,KACE,gBAACH,GAAD,KAAmB,KAClBhK,YAAS,kCAjPxB,GAAgC8G,a,+wHCrCzB,IAAM4F,GAAc3L,kBAAOyB,IAAPzB,CAAH,MASX4L,GAAmB5L,UAAO6L,KAAV,KAGzBtK,YAAW,MAAO,SAOTuK,GAAe9L,UAAO2B,IAAV,KACrBwE,KAMA,SAAA5H,GAAK,OACLA,EAAMwJ,UACF/G,cADJ,KAGe7B,YAAe,UAAW,IAGRA,YAAe,UAAW,IAGnDoC,YAAW,MAAO,QAWhBoK,GAKFA,GAKEpK,YAAW,MAAO,QAGpBhD,EAAMwN,UACN/K,cADA,KAGkC7B,YAAe,UAAW,KAExDwM,KAKR3K,cA3CJ,KAsDiC7B,YAAe,UAAW,IAQnDZ,EAAMwN,UACN/K,cADA,UAmBCgL,GAAgBhM,UAAO2B,IAAV,KACVxC,YAAe,UAAW,MAMtC,SAAAZ,GAAK,OACLA,EAAM0N,aACNjL,cADA,KAEIH,IAAMqL,MAFV,UAOA,SAAA3N,GAAK,OACLA,EAAMwJ,UACF/G,cADJ,KASQO,YAAW,MAAO,QAElBhD,EAAMwN,UACN/K,cADA,KAII4K,GAIAE,GACEH,IAUJC,GAGAD,IAON3K,cAxCJ,KA8CQH,IAAMsL,MA9Cd,UChHSC,GAAb,YACE,WAAY7N,GAAyB,IAAD,8BAClC,4CAAMA,KAYR8N,OAAS,SAAC9J,GACRA,EAAMuD,iBACN,EAAK/C,SAAS,CACZuJ,YAAa,EAAKpJ,MAAMoJ,cAhBQ,EAoBpCC,WAAa,WACX,EAAKxJ,SAAS,CACZuJ,YAAY,KAnBd,EAAKpJ,MAAQ,CACXoJ,YAAY,GAJoB,EADtC,sEA2BY,IAAD,OACCA,EAAe9I,KAAKN,MAApBoJ,WADD,EAE+C9I,KAAKjF,MAAnDwJ,EAFD,EAECA,UAAWD,EAFZ,EAEYA,QAAS0E,EAFrB,EAEqBA,SAAUP,EAF/B,EAE+BA,YACtC,OACE,gBAACD,GAAD,CAAeC,YAAaA,EAAalE,UAAWA,EAAWgE,SAAUO,GACvE,gBAACG,EAAA,EAAD,CACEC,SAAU3E,EAAY,MAAQ,OAC9B4E,aACE5E,EACI9I,YAAS,sCACTA,YAAS,8BAEfuN,SAAUA,EACVF,aAAcE,GAEd,gBAAC,IAAD,CACEI,QAAS,SACTC,KAAMP,EACNQ,eAAgB,kBAAM,EAAKP,cAC3BQ,OAAO,EACPL,SAAU,QACVM,aAAW,EACXC,aAAc,QACdC,KACE,gBAAC,GAAD,CACElL,KAAK,SACLmL,WAAW,EACX9M,UAAW,EACX0H,UAAWA,EACXD,QAASA,EACT2D,aAAcjI,KAAK6I,OACnBjN,MAAOoE,KAAKjF,MAAMa,SAItB,gBAAC0M,GAAD,CACE9J,KAAK,SACL3B,SAAU,EACVgF,QAAS7B,KAAK6I,OACd9G,UAAW,SAAAhD,GACL,MAAAA,EAAMsD,KAA6B,UAAdtD,EAAMsD,KAC7B,EAAKwG,OAAO9J,IAGhBwJ,SAAUO,EACVvE,UAAWA,GAEX,gBAAC4D,GAAD,CAAaxG,KAAM4C,EAAY,EAAI,GAAI5H,KAAM,YAC5C4H,GACC,gBAAC6D,GAAD,KAAmB3M,YAAS,qCA5E5C,GAAgC8G,aAAnBqG,GASJpG,aAAe,CACpB+B,WAAW,EACXkE,aAAa,GA2EF3N,2BAAU8N,ICzGzB","file":"static/js/9.2a1f0cb6.chunk.js","sourcesContent":["import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\ntype LoaderProps = {\n  theme: { [key: string]: any };\n  width: any;\n};\nexport const Loader = (props: LoaderProps) => (\n  <Figure\n    width={props.width}\n    version=\"1.1\"\n    id=\"L9\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 100 100\"\n    enableBackground=\"new 0 0 0 0\"\n    arialabel={`${localize('[aria label loader]')}`}\n  >\n    <path\n      fill={transparentize(props.theme.colors.mainColor)}\n      d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        dur=\"1s\"\n        from=\"0 50 50\"\n        to=\"360 50 50\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </Figure>\n);\n\nexport default withTheme(Loader);\n","import styled, { css } from 'styled-components';\nimport { transition, bounce } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport Icon from 'components/common/Icon';\nimport Text from 'components/common/Text';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { secondaryFont } from 'components/mixins/typography';\n\ntype InputElement = {\n  type: string;\n  name: string;\n  placeholder: string;\n  tabIndex: number;\n  id: string;\n  onInvalid(): void;\n  autoComplete: string;\n  pattern?: string;\n  validationStatusBeforeSubmit: boolean;\n  isBlur: boolean;\n};\nexport const InputElement = styled.input.attrs((props: InputElement) => ({\n  type: props.type,\n  name: props.name,\n  placeholder: props.placeholder,\n  tabIndex: props.tabIndex,\n  id: props.id,\n  onInvalid: props.onInvalid,\n  autoComplete: props.autoComplete,\n  pattern: props.pattern,\n  required: 'required'\n}))<InputElement>`\n  ${secondaryFont};\n  position: relative;\n  top: 0;\n  left: 0;\n  border-radius: 30px;\n  font-weight: normal;\n  font-size: 14px;\n  width: 320px;\n  height: 50px;\n  border-radius: 30px;\n  box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.textColor, 0.08)};\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  padding: 16px 40px 16px 24px;\n  border: none;\n  color: ${props => props.theme.colors.textColor};\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:focus {\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.mainColor, 0.1)};\n    border: solid 1px ${props => props.theme.colors.mainColor};\n    background-color: ${props => props.theme.colors.contentBodyColor};\n    outline: none;\n  }\n\n  &:focus::placeholder {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  }\n\n  ${media.mobile`\n    width: 260px;\n    height: 44px;\n  `};\n\n  &.full:invalid {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0\n          ${props => transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props => props.theme.colors.incorrectColor};\n        ${bounce};\n      `};\n  }\n\n  &.full:valid {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        background-color: ${props => props.theme.colors.contentBodyColor};\n        box-shadow: inset 0 2px 0 0\n          ${props => transparentize(props.theme.colors.incorrectColor, 0.1)};\n        border: solid 1px ${props => props.theme.colors.correctColor};\n      `};\n  }\n\n  &.full.valid {\n    background-color: ${props => props.theme.colors.contentBodyColor};\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.incorrectColor, 0.1)};\n    border: solid 1px ${props => props.theme.colors.correctColor};\n  };\n\n${props =>\n  props.validationStatusBeforeSubmit === false &&\n  css`\n    & {\n      background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n      box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n      border: solid 1px ${props.theme.colors.incorrectColor};\n      ${bounce};\n    }\n  `};\n`;\n\nexport const InputLabel = styled.label`\n  box-sizing: border-box;\n  line-height: 1;\n  position: absolute;\n  padding: 16px 24px;\n  top: -30px;\n  left: 0;\n  font-size: 10px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n\n  ${InputElement}.is-empty + & {\n    top: 0;\n    font-size: 14px;\n  }\n\n  ${transition('top')};\n\n  ${InputElement}.changed + &,\n  ${InputElement}:focus + &,\n  ${InputElement}:valid + & {\n    top: -30px;\n    font-size: 10px;\n  }\n\n  ${InputElement}:-webkit-autofill + & {\n    top: -30px;\n    font-size: 10px;\n  }`;\n\nexport const ValidIcon = styled(Icon)`\n  color: ${props => props.theme.colors.correctColor};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 22px;\n  visibility: hidden;\n\n  ${InputElement}:invalid ~ & {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        visibility: hidden;\n      `};\n  }\n\n  ${InputElement}:valid ~ & {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        visibility: visible;\n      `};\n  }\n\n  ${InputElement}.valid ~ & {\n    visibility: visible;\n  }\n`;\n\nexport const LoadWrapper = styled.div.attrs(() => ({\n  'data-test': 'loader-block'\n}))`\n  position: absolute;\n  top: 68%;\n  transform: translateY(-50%);\n  right: 22px;\n`;\n\nexport const ValidationMessageBlock = styled.div`\n  display: flex;\n  position: absolute;\n  left: 25px;\n  top: 55px;\n  visibility: hidden;\n  width: 100%;\n\n  &.show {\n    visibility: visible;\n  }\n`;\n\nexport const TextError = styled<any>(Text)`\n  && {\n    color: ${props => props.theme.colors.incorrectColor};\n    position: relative;\n    font-size: 10px;\n    visibility: hidden;\n    margin-right: 10px;\n    line-height: 1;\n\n    ${ValidationMessageBlock}.show & {\n      visibility: visible;\n      color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n      margin-right: 15px;\n    }\n\n    ${ValidationMessageBlock}.show & .icon {\n      color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n      margin-right: 5px;\n    }\n\n    & .icon {\n      color: ${props => props.theme.colors.incorrectColor};\n    }\n\n    &.active {\n      visibility: visible;\n    }\n\n    ${ValidationMessageBlock}.show &.valid, ${ValidationMessageBlock}.show &.valid .icon {\n      color: ${props => props.theme.colors.correctColor};\n    }\n\n    ${ValidationMessageBlock}.show &.invalid, ${ValidationMessageBlock}.show &.invalid .icon {\n      color: ${props => props.theme.colors.incorrectColor};\n    }\n\n    & .icon-exclamation-mark {\n      margin: 0 5px 0 -10px;\n      line-height: 10px;\n    }\n  }\n`;\n\ntype EyeIconProps = {\n  role: string;\n  tabIndex: number;\n  ariaLabel?: string;\n  name: string;\n  onClick: any;\n  onKeyDown: any;\n};\nexport const EyeIcon = styled(Icon).attrs((props: EyeIconProps) => ({\n  role: props.role,\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<EyeIconProps>`\n  ${buttonDefaultStyle};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 20px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  font-size: 11px;\n  cursor: pointer;\n\n  &.icon-eye-close {\n    font-size: 13px;\n  }\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) {\n    color: ${props => props.theme.colors.textColor};\n    outline: none;\n  }\n`;\n\ntype InputContainerProps = {\n  isUserExist: boolean;\n};\nexport const InputContainer = styled.div<InputContainerProps>`\n  ${secondaryFont};\n  position: relative;\n  font-weight: normal;\n  font-size: 14px;\n\n  &.invalid-input ${InputElement} {\n    background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.incorrectColor, 0.06)};\n    border: solid 1px ${props => props.theme.colors.incorrectColor};\n    ${bounce};\n  }\n\n  ${props =>\n    props.isUserExist === true &&\n    css`\n      ${InputElement}.full:valid {\n        background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props.theme.colors.incorrectColor};\n        ${bounce};\n      }\n\n      ${InputElement}:valid ~ ${ValidIcon} {\n        visibility: hidden;\n      }\n\n      ${TextError} {\n        visibility: visible;\n      }\n\n      ${ValidationMessageBlock} {\n        visibility: visible;\n      }\n    `};\n`;\n","import * as React from 'react';\nimport { withTheme } from 'styled-components';\nimport { INPUT_TYPE } from 'constants/components';\nimport { localize } from 'core/localization';\nimport Icon from 'components/common/Icon';\nimport { KEYS } from 'constants/common';\nimport Loader from 'assets/figures/Loader';\n\nimport {\n  InputContainer,\n  InputElement,\n  InputLabel,\n  ValidIcon,\n  LoadWrapper,\n  TextError,\n  ValidationMessageBlock,\n  EyeIcon\n} from './Input.styled';\n\ninterface InputTypes {\n  [INPUT_TYPE.TEXT]: string;\n  [INPUT_TYPE.PASSWORD]: string;\n  [INPUT_TYPE.EMAIL]: string;\n}\n\ntype InputProps = {\n  type: keyof InputTypes;\n  name: string;\n  tabIndex?: number;\n  labelText: string;\n  idInput: string;\n  onChange(e: any): void;\n  placeholder: string;\n  validIcon?: boolean;\n  loadIcon?: boolean;\n  refInput(node: any): void;\n  validationStatusBeforeSubmit: boolean;\n  showValidationMessage?: boolean;\n  onBlur?(e: any): void;\n  onFocus?(e: any): void;\n  defaultValue?: string;\n  autoComplete?: string;\n  isUserExist?: boolean;\n  pattern?: string;\n  textError?: string;\n  theme?: { [key: string]: any };\n};\n\ntype InputState = {\n  hasValue: boolean;\n  validValue: boolean;\n  showErrorText: boolean;\n  showPassword: boolean;\n  showPassValidationBlock: boolean;\n  isSpaceInPass: boolean;\n  isPatternPass: boolean;\n  startInputPass: boolean;\n  isLoaded: boolean;\n  isBlur: boolean;\n};\n\nexport class Input extends React.Component<InputProps, InputState> {\n  constructor(props: InputProps) {\n    super(props);\n    this.state = {\n      hasValue: false,\n      validValue: true,\n      showErrorText: false,\n      showPassword: false,\n      showPassValidationBlock: false,\n      isSpaceInPass: false,\n      isPatternPass: false,\n      startInputPass: false,\n      isLoaded: false,\n      isBlur: false\n    };\n  }\n\n  static defaultProps = {\n    validIcon: false,\n    showValidationMessage: true,\n    tabIndex: 0\n  };\n\n  componentDidMount() {\n    const { defaultValue } = this.props;\n\n    if (defaultValue) {\n      this.setState({ hasValue: true });\n    }\n  }\n\n  async onBlurValidationInput(event: any, onBlur: any, type: string) {\n    event.target.classList.remove('changed');\n    this.setState({\n      validValue: !event.target.validity.typeMismatch && !event.target.validity.patternMismatch,\n      showPassValidationBlock: event.target.value.length !== 0,\n      isBlur: type !== INPUT_TYPE.EMAIL\n    });\n    if (onBlur) {\n      this.setState({ isLoaded: true });\n      await onBlur(event);\n      this.setState({ isLoaded: false });\n    }\n  }\n\n  onInputFocus(event: any) {\n    this.setState({ isBlur: false });\n  }\n\n  validationPassword = (event: any, onChange: any) => {\n    const isSpaceInPass = /\\s/.test(event.target.value);\n    let isPatternPass = false;\n    if (this.props.pattern) {\n      isPatternPass = new RegExp(this.props.pattern).test(event.target.value);\n    }\n\n    if (event.target.value !== 0) {\n      this.setState({\n        startInputPass: event.target.value !== 0,\n        isSpaceInPass,\n        isPatternPass\n      });\n    }\n\n    if (!isSpaceInPass && isPatternPass && onChange) {\n      onChange(event);\n    }\n  };\n\n  showErrorText = () => {\n    this.setState({ showErrorText: !this.state.validValue || !this.state.hasValue });\n  };\n\n  showHidePassword() {\n    this.setState({ showPassword: !this.state.showPassword });\n  }\n\n  setTypePassword() {\n    return this.state.showPassword ? INPUT_TYPE.TEXT : INPUT_TYPE.PASSWORD;\n  }\n\n  showPassValidationBlock() {\n    this.setState({ showPassValidationBlock: true });\n  }\n\n  render() {\n    const {\n      idInput,\n      type,\n      name,\n      tabIndex = 0,\n      placeholder,\n      labelText,\n      onChange,\n      loadIcon,\n      validIcon,\n      textError,\n      refInput,\n      defaultValue,\n      autoComplete,\n      pattern,\n      validationStatusBeforeSubmit,\n      showValidationMessage,\n      isUserExist,\n      onBlur,\n      onFocus\n    } = this.props;\n    const { isBlur, isLoaded } = this.state;\n    return (\n      <InputContainer theme={this.props.theme} isUserExist={isUserExist || false}>\n        <InputElement\n          id={idInput}\n          ref={refInput}\n          type={type === INPUT_TYPE.PASSWORD ? this.setTypePassword() : type}\n          name={name}\n          placeholder={placeholder}\n          className={!this.state.hasValue ? 'is-empty' : 'full'}\n          tabIndex={tabIndex}\n          defaultValue={defaultValue}\n          autoComplete={autoComplete || ''}\n          pattern={pattern}\n          onBlur={event => {\n            this.setState({ hasValue: !!event.target.value });\n            this.onBlurValidationInput(event, onBlur, type);\n          }}\n          onFocus={(event: any) => {\n            if (type === INPUT_TYPE.PASSWORD) {\n              this.showPassValidationBlock();\n            }\n            if (onFocus) {\n              onFocus(event);\n            }\n            this.onInputFocus(event);\n          }}\n          onChange={\n            type === INPUT_TYPE.PASSWORD\n              ? (event: any) => this.validationPassword(event, onChange)\n              : onChange\n          }\n          onInvalid={this.showErrorText}\n          validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n          theme={this.props.theme}\n          isBlur={isBlur}\n        />\n        <InputLabel theme={this.props.theme} htmlFor={idInput}>\n          {labelText}\n        </InputLabel>\n        {validIcon && (\n          <ValidIcon theme={this.props.theme} name=\"check-mark-2\" size={12} isBlur={isBlur} />\n        )}\n        {loadIcon && isLoaded && (\n          <LoadWrapper data-test={\"loader\"}><Loader width={30} theme={this.props.theme} /></LoadWrapper>\n        )}\n        {textError && showValidationMessage && (\n          <ValidationMessageBlock>\n            <TextError\n              theme={this.props.theme}\n              className={!this.state.validValue ? 'active' : ''}\n              data-test=\"email-validation-status\"\n            >\n              <Icon name=\"exclamation-mark\" theme={this.props.theme} />\n              {textError}\n            </TextError>\n          </ValidationMessageBlock>\n        )}\n        {type === INPUT_TYPE.PASSWORD && (\n          <EyeIcon\n            role=\"button\"\n            tabIndex={0}\n            ariaLabel={\n              this.state.showPassword\n                ? localize('[label eye icon hide]')\n                : localize('[label eye icon show]')\n            }\n            name={this.state.showPassword ? 'eye-close' : 'eye-open'}\n            onClick={() => {\n              this.showHidePassword();\n            }}\n            onKeyDown={(event: any) => {\n              if (\n                [KEYS.ENTER.toLowerCase(), KEYS.SPACEBAR.toLowerCase()].includes(\n                  event.key.toLowerCase()\n                )\n              ) {\n                event.preventDefault();\n                this.showHidePassword();\n              }\n            }}\n            theme={this.props.theme}\n          />\n        )}\n        {type === INPUT_TYPE.PASSWORD && showValidationMessage && (\n          <ValidationMessageBlock className={this.state.showPassValidationBlock ? 'show' : 'hide'}>\n            <TextError\n              theme={this.props.theme}\n              className={\n                this.state.startInputPass && (this.state.isSpaceInPass ? 'invalid' : 'valid')\n              }\n            >\n              <Icon name=\"check-mark-2\" />\n              {localize('[validation pass space]')}\n            </TextError>\n            <TextError\n              className={\n                this.state.startInputPass && (this.state.isPatternPass ? 'valid' : 'invalid')\n              }\n              theme={this.props.theme}\n            >\n              <Icon name=\"check-mark-2\" />\n              {localize('[validation pass count char]')}\n            </TextError>\n          </ValidationMessageBlock>\n        )}\n      </InputContainer>\n    );\n  }\n}\n\nexport default withTheme(Input);\n","export { default } from './Input';\n","import styled, { css } from 'styled-components';\nimport { reviewFontText } from 'components/mixins/reviewTypography';\nimport Input from '../../login/Input';\n\nexport const FormTitle = styled.h3`\n  ${reviewFontText};\n  font-weight: 300;\n  font-size: 13px;\n  margin-bottom: 24px;\n`;\n\nexport const LoginFormContainer = styled.div`\n  width: 100%;\n  ${FormTitle} {\n    padding-bottom: 44px;\n    margin-bottom: 0;\n    font-size: 20px;\n    text-align: center;\n  }\n  > div:not(:first-child) {\n    padding: 0 0 43px;\n    &:last-child {\n      padding: 0 0 8px;\n    }\n  }\n`;\n\nexport const LoginInput = styled(Input)`\n  input {\n    & + label {\n      font-size: 15px;\n    }\n  }\n`;\n\ntype LoginInputWrapperProps = {\n  validationStatusBeforeSubmit: boolean;\n};\nexport const LoginInputWrapper = styled.div<LoginInputWrapperProps>`\n  > div {\n    > div {\n      left: 0;\n      > span {\n        top: -11px;\n        font-size: 11px;\n      }\n      ${props =>\n        props.validationStatusBeforeSubmit === false &&\n        css`\n          visibility: visible;\n          top: 40px;\n          > span {\n            top: -6px;\n            visibility: visible;\n          }\n        `}\n    }\n\n    input {\n      width: 100%;\n      height: 30px;\n      background: #fff;\n      ${reviewFontText};\n      font-size: 15px;\n      font-weight: 600;\n      border: none;\n      border-radius: 0;\n      border-bottom: 1px solid #eaedf1;\n      box-shadow: none;\n      padding: 0 0 7px 0;\n\n      &.is-empty {\n        & + label {\n          font-size: 15px;\n          padding: 0;\n        }\n\n        &:focus {\n          & + label {\n            top: -15px;\n            padding: 0;\n            font-size: 11px;\n          }\n        }\n      }\n\n      &.full {\n        &:valid {\n          background-color: #fff;\n          box-shadow: none;\n          border: none;\n          border-bottom: 1px solid #eaedf1;\n        }\n        &:invalid {\n          background-color: #fff;\n          box-shadow: none;\n          border: none;\n          border-bottom: 1px solid #f85d67;\n        }\n        &:hover {\n          border-bottom: 1px solid #469dd5;\n        }\n        &:focus {\n          border-bottom: 2px solid #469dd5;\n          & + label {\n            top: -15px;\n            padding: 0;\n            font-size: 11px;\n          }\n        }\n        & + label {\n          top: -15px;\n          padding: 0;\n          font-size: 11px;\n        }\n      }\n\n      &:hover {\n        border-bottom: 1px solid #469dd5;\n      }\n\n      &:focus {\n        border: none;\n        border-bottom: 2px solid #469dd5;\n        box-shadow: none;\n        & + label {\n          top: -15px;\n          padding: 0;\n          font-size: 11px;\n        }\n      }\n\n      ${props =>\n        props.validationStatusBeforeSubmit === false &&\n        css`\n          & {\n            border: none;\n            border-bottom: 1px solid #f85d67;\n\n            & + label {\n              font-size: 15px;\n              padding: 0;\n            }\n\n            &.full {\n              &:invalid {\n                border: none;\n                border-bottom: 1px solid #f85d67;\n                box-shadow: none;\n                background: #fff;\n              }\n              border: none;\n              border-bottom: 1px solid #f85d67;\n            }\n\n            &:hover,\n            &:focus {\n              border-bottom: 1px solid #f85d67;\n\n              & + label {\n                top: -15px;\n                padding: 0;\n                font-size: 11px;\n              }\n            }\n          }\n        `};\n    }\n  }\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport { FormTitle, LoginInput, LoginFormContainer, LoginInputWrapper } from './LoginForm.styled';\nimport { EMAIL_REGEX } from 'constants/common';\n\ntype LoginFormProps = {\n  name: boolean;\n  email: boolean;\n  onChange(e?: any): void;\n  onBlur(e?: any): void;\n  getRefs(e?: any): void;\n  theme?: { [key: string]: any }\n};\n\nexport const LoginForm = (props: LoginFormProps) => {\n  const { name, email, onChange, onBlur, getRefs } = props;\n  return (\n    <LoginFormContainer>\n      <FormTitle>{localize('[please identify yourself]')}</FormTitle>\n      <LoginInputWrapper validationStatusBeforeSubmit={name}>\n        <LoginInput\n          idInput=\"name\"\n          type={INPUT_TYPE.TEXT}\n          refInput={(node: any) => getRefs(node)}\n          name=\"name\"\n          labelText=\"Name\"\n          placeholder=\"John Doe\"\n          onChange={onChange}\n          onBlur={onBlur}\n          validIcon={false}\n          pattern=\"^(?!\\s*$).+\"\n          textError={localize('[error name input]')}\n          validationStatusBeforeSubmit={name}\n          theme={props.theme}\n        />\n      </LoginInputWrapper>\n      <LoginInputWrapper validationStatusBeforeSubmit={email}>\n        <LoginInput\n          idInput=\"email\"\n          type={INPUT_TYPE.EMAIL}\n          refInput={(node: any) => getRefs(node)}\n          name=\"email\"\n          labelText=\"Email\"\n          placeholder=\"john@example.com\"\n          autoComplete=\"new-email\"\n          onChange={onChange}\n          onBlur={onBlur}\n          validIcon={false}\n          textError={localize('[error email input]')}\n          validationStatusBeforeSubmit={email}\n          theme={props.theme}\n          pattern={EMAIL_REGEX.source}\n        />\n      </LoginInputWrapper>\n    </LoginFormContainer>\n  );\n};\n\nexport default LoginForm;\n","import styled, { css } from 'styled-components';\nimport { reviewFontText } from 'components/mixins/reviewTypography';\nimport { bounce } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\n\nexport const CommentFormContainer = styled.div`\n  width: 100%;\n`;\n\nexport const FormTitle = styled.h3`\n  ${reviewFontText};\n  font-weight: 600;\n  font-size: 13px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n\ntype CommentTextareaProps = {\n  ariaLabel: string;\n  validComment: boolean;\n}\nexport const CommentTextarea = styled.textarea.attrs((props: CommentTextareaProps) => ({\n  'aria-label': props.ariaLabel\n})) <CommentTextareaProps>`\n  ${reviewFontText};\n  display: block;\n  width: 100%;\n  height: 136px;\n  max-height: 136px;\n  padding: 12px;\n  margin-bottom: 4px;\n  resize: none;\n  border: 1px solid #eaedf1;\n  border-radius: 2px;\n  outline: none;\n  font-size: 12px;\n  line-height: 20px;\n\n  &:hover {\n    border-color: #76b6e0;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: #469dd5;\n    box-shadow: inset 0 1px 3px 0 rgba(70, 157, 213, 0.3);\n  }\n\n  ${props =>\n    !props.validComment &&\n    css`\n      & {\n        background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props.theme.colors.incorrectColor};\n        ${bounce};\n      }\n    `};\n`;\n","import React from 'react';\nimport { localize } from 'core/localization';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport { withTheme } from 'styled-components';\nimport { FormTitle, CommentFormContainer, CommentTextarea } from './CommentForm.styled';\n\ntype CommentFormProps = {\n  commentText: string;\n  isValidComment: boolean;\n  onChange(e?: any): void;\n  getRefs(e?: any): void;\n  context: any;\n  isGeneral: boolean;\n  theme: { [key: string]: any };\n};\n\nexport const localizationKeys: { [key: string]: string } = {\n  [REVIEW_COMMENT_PROPERTIES.DEFAULT_TITLE]: 'your comment',\n  [REVIEW_COMMENT_PROPERTIES.TITLE]: 'course comment',\n  [REVIEW_COMMENT_PROPERTIES.INTRODUCTION]: 'introduction comment',\n  [REVIEW_COMMENT_PROPERTIES.LEARNING_CONTENT]: 'learning content comment',\n  [REVIEW_COMMENT_PROPERTIES.QUESTION]: 'question comment',\n  [REVIEW_COMMENT_PROPERTIES.VOICE_OVER]: 'voice over comment',\n  [REVIEW_COMMENT_PROPERTIES.CONTENT_ITEM]: 'content item comment',\n  [REVIEW_COMMENT_PROPERTIES.TITLE_OF_THE_SECTION]: 'section comment',\n  [REVIEW_COMMENT_PROPERTIES.GENERAL]: 'leave general comments'\n};\n\nfunction getLocalizationKey({\n  type,\n  property = '',\n  isGeneral\n}: {\n  type: string;\n  property: string;\n  isGeneral: boolean;\n}): string {\n  if (isGeneral) {\n    return localizationKeys[REVIEW_COMMENT_PROPERTIES.GENERAL];\n  }\n  switch (type) {\n    case REVIEW_COMMENT_TYPES.QUESTION:\n      return localizationKeys[property] || localizationKeys[REVIEW_COMMENT_PROPERTIES.QUESTION];\n    case REVIEW_COMMENT_TYPES.INFORMATION_CONTENT:\n      return localizationKeys[property] || localizationKeys[REVIEW_COMMENT_PROPERTIES.CONTENT_ITEM];\n    case REVIEW_COMMENT_TYPES.COURSE:\n      return localizationKeys[property];\n    case REVIEW_COMMENT_TYPES.SECTION:\n      return localizationKeys[REVIEW_COMMENT_PROPERTIES.TITLE_OF_THE_SECTION];\n    default:\n      return localizationKeys[REVIEW_COMMENT_PROPERTIES.DEFAULT_TITLE];\n  }\n}\n\nexport const CommentForm = (props: CommentFormProps) => {\n  const { commentText, isValidComment, onChange, getRefs, context, isGeneral } = props;\n  const type = context && context.type;\n  const property = context && context.property;\n  const title = getLocalizationKey({ type, property, isGeneral });\n\n  return (\n    <CommentFormContainer>\n      <FormTitle>{localize(`[${title}]`)}</FormTitle>\n      <CommentTextarea\n        tabIndex={1}\n        ref={getRefs}\n        ariaLabel={localize('[comment area]')}\n        validComment={isValidComment}\n        onChange={onChange}\n        name=\"commentText\"\n        value={commentText}\n        theme={props.theme}\n      />\n    </CommentFormContainer>\n  );\n};\n\nexport default withTheme(CommentForm);\n","import styled from 'styled-components';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { reviewFontText } from 'components/mixins/reviewTypography';\nimport { crossFade, transition } from 'components/mixins/interactivity';\nimport media from 'components/mixins/media';\nimport { centerAbsoluteElementY } from 'components/mixins/placement';\nimport { transparentize } from 'utils/color';\nimport Icon from 'components/common/Icon';\n\nexport const CommentFormContainer = styled.div`\n  width: 100%;\n`;\n\nexport const FormWrapper = styled.form`\n  ${reviewFontText};\n  min-height: 285px;\n  max-height: 356px;\n`;\n\nexport const SubmitIcon = styled(Icon)`\n  margin: 0 5px 0 17px;\n  top: 1px;\n`;\n\nexport const FormContent = styled.div`\n  min-height: 285px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  padding: 22px 14px 22px 16px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  width: 430px;\n\n  ${media.mobile`\n    width: 300px;\n  `};\n`;\n\nexport const FormActions = styled.div`\n  align-self: flex-end;\n  padding-top: 16px;\n`;\n\ntype FormSubmitButtonProps = {\n  tabIndex: number;\n  disabled: any;\n  onClick: any;\n  onKeyDown: any;\n};\nexport const FormSubmitButton = styled.button<FormSubmitButtonProps>`\n  ${buttonDefaultStyle};\n  position: relative;\n  background: #4caf50;\n  border-radius: 16px;\n  padding: 10px 20px 10px 0;\n  color: #fff;\n  font-size: 11px;\n  line-height: 11px;\n  font-weight: 600;\n  cursor: pointer;\n  box-shadow: 0 2px 8px 0 ${transparentize('#000000', 0.2)};\n  ${transition(0.3)};\n\n  &:hover,\n  &:focus {\n    background: #46a14a;\n  }\n\n  &:disabled:before {\n    background-color: rgba(255, 255, 255, 0.3);\n    content: '';\n    cursor: not-allowed;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n`;\n\nexport const FormCancelButton = styled.button`\n  ${buttonDefaultStyle};\n  font-size: 11px;\n  font-weight: 600;\n  color: #99a9b8;\n  cursor: pointer;\n  margin-left: 10px;\n\n  &:hover,\n  &:focus {\n    color: #81c884;\n  }\n`;\n\nexport const SuccessMessageIcon = styled(Icon)`\n  ${centerAbsoluteElementY};\n  left: 8px;\n  color: #4caf50;\n  line-height: 7px;\n  position: absolute;\n`;\n\nexport const ErrorMessageIcon = styled.div`\n  ${centerAbsoluteElementY};\n  left: 12px;\n  color: #f85d67;\n  position: absolute;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const SuccessMessage = styled.div`\n  ${reviewFontText};\n  line-height: 17px;\n  padding: 7px 13px 7px 27px;\n  background: #f6fbf7;\n  border-radius: 3px;\n  border: solid 1px #d3ecd4;\n  ${crossFade('fromRight')};\n  margin-top: 16px;\n  position: relative;\n  align-self: flex-end;\n`;\n\nexport const ErrorMessage = styled(SuccessMessage)`\n  background: rgba(248, 93, 103, 0.1);\n  border: solid 1px rgba(248, 93, 103, 0.3);\n`;\n","import * as React from 'react';\nimport { STATUS_OK, COMMENT_SENDING_FAILED } from 'constants/review';\nimport { localize } from 'core/localization';\nimport eventEmitter, { events } from 'core/events/eventEmitter';\nimport LoginForm from '../LoginForm/LoginForm';\nimport CommentForm from '../CommentForm/CommentForm';\nimport {\n  FormWrapper,\n  FormContent,\n  FormActions,\n  SubmitIcon,\n  FormSubmitButton,\n  FormCancelButton,\n  SuccessMessage,\n  SuccessMessageIcon,\n  ErrorMessage,\n  ErrorMessageIcon\n} from './ReviewForm.styled';\nimport { KEYS } from 'constants/common';\n\ntype ReviewFormProps = {\n  context: { [key: string]: any };\n  closePopover(e?: any): void;\n  isGeneral: boolean;\n  role: string;\n  ariaModal: boolean;\n  tabIndex: number;\n  theme?: { [key: string]: any };\n};\n\ntype ReviewFormState = {\n  requestSending: boolean;\n  commentText: string;\n  isValidComment: boolean;\n  showSuccessMessage: boolean;\n  showErrorMessage: boolean;\n  showLoginForm: boolean;\n  name: string;\n  email: string;\n  validationStatusBeforeSubmit: {\n    name: boolean;\n    email: boolean;\n  };\n};\nexport class ReviewForm extends React.Component<ReviewFormProps, ReviewFormState> {\n  loginRefs: { [key: string]: any };\n\n  constructor(props: ReviewFormProps) {\n    super(props);\n\n    this.state = {\n      requestSending: false,\n      commentText: '',\n      isValidComment: true,\n      showSuccessMessage: false,\n      showErrorMessage: false,\n      showLoginForm: false,\n      name: '',\n      email: '',\n      validationStatusBeforeSubmit: {\n        name: true,\n        email: true\n      }\n    };\n    this.getReviewerEmailAndName();\n    this.loginRefs = {\n      name: '',\n      email: ''\n    };\n  }\n\n  getReviewerEmailAndName = async () => {\n    const response: any = await eventEmitter.emit(events.REVIEW_RESTORE_USER);\n    this.setState({\n      name: response[0].name || '',\n      email: response[0].email || ''\n    });\n  };\n\n  beforeSubmitValidation = () => {\n    const nameValid = this.loginRefs.name ? this.loginRefs.name.validity.valid : false;\n    const emailValid = this.loginRefs.email ? this.loginRefs.email.validity.valid : false;\n    this.setState({\n      validationStatusBeforeSubmit: {\n        name: nameValid,\n        email: emailValid\n      }\n    });\n  };\n\n  checkInputValidation = (event: any) => {\n    if (event) {\n      this.setState({\n        validationStatusBeforeSubmit: {\n          ...this.state.validationStatusBeforeSubmit,\n          [event.target.name]: event.target.validity.valid || false\n        }\n      });\n    }\n  };\n\n  onChange = (event: any) => {\n    this.setState({ [event.target.name]: event.target.value } as any);\n  };\n\n  onBlur = (event: any) => {\n    this.setState({ [event.target.name]: event.target.value } as any);\n    return this.state.showLoginForm && this.checkInputValidation(event);\n  };\n\n  getRefs = (element: any) => {\n    if (element) {\n      this.loginRefs[element.name] = element;\n    }\n  };\n\n  validateComment = () => {\n    const {\n      email,\n      name,\n      commentText,\n      showLoginForm,\n      validationStatusBeforeSubmit,\n      requestSending\n    } = this.state;\n\n    const isValidBeforeSubmit =\n      validationStatusBeforeSubmit.email && validationStatusBeforeSubmit.name;\n\n    if (!commentText.trim()) {\n      this.setState({ isValidComment: false });\n      setTimeout(() => {\n        this.setState({ isValidComment: true }, () => {\n          this.loginRefs.commentText.focus();\n        });\n      }, 500);\n      return false;\n    }\n    if (!email || !name) {\n      this.setState({\n        showLoginForm: true\n      });\n      return false;\n    }\n    if ((showLoginForm && !isValidBeforeSubmit) || requestSending) {\n      return false;\n    }\n\n    return true;\n  };\n\n  sendComment = async (event: any) => {\n    event.preventDefault();\n    if (this.state.showLoginForm) {\n      this.checkInputValidation(event);\n      this.beforeSubmitValidation();\n    }\n    const { context, isGeneral } = this.props;\n    const { email, name, commentText } = this.state;\n    if (!this.validateComment()) {\n      return;\n    }\n    eventEmitter.emit(events.REVIEWER_AUTHORIZED, { email, name });\n    const data: { [key: string]: any } = {\n      text: commentText\n    };\n\n    if (!isGeneral) {\n      data.context = context;\n    }\n    this.setState({\n      showSuccessMessage: false,\n      showErrorMessage: false,\n      requestSending: true\n    });\n    const response: any = await eventEmitter.emit(events.COMMENT_SENT, { data });\n\n    if (response[0] === STATUS_OK) {\n      this.setState({\n        showSuccessMessage: true,\n        showErrorMessage: false,\n        showLoginForm: false,\n        isValidComment: true,\n        commentText: '',\n        requestSending: false\n      });\n    }\n\n    if (response[0] === COMMENT_SENDING_FAILED) {\n      this.setState({\n        showErrorMessage: true,\n        showSuccessMessage: false,\n        requestSending: false\n      });\n    }\n  };\n\n  componentDidUpdate() {\n    const activeElem = document.activeElement;\n    if (\n      activeElem &&\n      activeElem.getAttribute('name') !== 'commentText' &&\n      this.loginRefs.commentText\n    ) {\n      setTimeout(() => {\n        this.state.isValidComment && this.loginRefs.commentText.focus();\n      }, 0);\n    }\n  }\n\n  render() {\n    const { closePopover, context, isGeneral } = this.props;\n    const {\n      showSuccessMessage,\n      showErrorMessage,\n      showLoginForm,\n      requestSending,\n      commentText,\n      isValidComment\n    } = this.state;\n    const { name, email } = this.state.validationStatusBeforeSubmit;\n    return (\n      <FormWrapper>\n        <FormContent theme={this.props.theme}>\n          {showLoginForm ? (\n            <LoginForm\n              getRefs={this.getRefs}\n              name={name}\n              email={email}\n              onChange={this.onChange}\n              onBlur={this.onBlur}\n              theme={this.props.theme}\n            />\n          ) : (\n            <CommentForm\n              getRefs={this.getRefs}\n              commentText={commentText}\n              isValidComment={isValidComment}\n              onChange={this.onChange}\n              context={context}\n              isGeneral={isGeneral}\n              theme={this.props.theme}\n            />\n          )}\n          <FormActions role=\"presentation\">\n            <FormSubmitButton\n              tabIndex={1}\n              disabled={requestSending ? 'disabled' : false}\n              onClick={this.sendComment}\n              onKeyDown={(event: any) => {\n                if (\n                  event.key?.toLowerCase() === KEYS.SPACEBAR.toLowerCase() ||\n                  event.key?.toLowerCase() === KEYS.ENTER.toLowerCase()\n                ) {\n                  this.sendComment(event);\n                }\n              }}\n            >\n              <SubmitIcon size={9} name={'arrow-send'} theme={this.props.theme} />\n              {showLoginForm ? localize('[post comment]') : localize('[post]')}\n            </FormSubmitButton>\n            <FormCancelButton\n              tabIndex={1}\n              onClick={closePopover}\n              onKeyDown={event => {\n                if (\n                  event.key?.toLowerCase() === KEYS.SPACEBAR.toLowerCase() ||\n                  event.key?.toLowerCase() === KEYS.ENTER.toLowerCase()\n                ) {\n                  closePopover(event);\n                }\n              }}\n            >\n              {localize('[cancel]')}\n            </FormCancelButton>\n          </FormActions>\n          {showSuccessMessage && (\n            <SuccessMessage>\n              <SuccessMessageIcon theme={this.props.theme} size={9} name={'check-mark-2'} />\n              {localize('[comment has been sent successfully]')}\n            </SuccessMessage>\n          )}\n          {showErrorMessage && (\n            <ErrorMessage>\n              <ErrorMessageIcon>{'!'}</ErrorMessageIcon>\n              {localize('[error comment sending]')}\n            </ErrorMessage>\n          )}\n        </FormContent>\n      </FormWrapper>\n    );\n  }\n}\n\nexport default ReviewForm;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { reviewFontText } from 'components/mixins/reviewTypography';\nimport { transition } from 'components/mixins/interactivity';\nimport Icon from 'components/common/Icon';\n\nexport const CommentIcon = styled(Icon)`\n  color: inherit;\n  margin: 0;\n\n  &.icon {\n    line-height: 13px;\n  }\n`;\n\nexport const ToggleButtonText = styled.span`\n  display: inline-block;\n  opacity: 0;\n  ${transition('all', '0.3s')};\n`;\n\ntype ToggleButtonProps = {\n  isGeneral: boolean;\n  isActive: boolean;\n};\nexport const ToggleButton = styled.div<ToggleButtonProps>`\n  ${reviewFontText};\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: 600;\n  margin: 10px;\n  overflow: hidden;\n  ${props =>\n    props.isGeneral\n      ? css`\n          padding: 14px 39px 14px 0;\n          color: ${transparentize('#42515f', 0.5)};\n          background: #fff;\n          border-radius: 22px;\n          box-shadow: 0 2px 10px 0 ${transparentize('#000000', 0.1)};\n\n          height: 41px;\n          ${transition('all', '0.3s')};\n\n          &:hover {\n            max-width: 100%;\n          }\n\n          &:hover,\n          &:focus {\n            color: #4caf50;\n            outline: none;\n\n            ${CommentIcon} {\n              color: #4caf50;\n            }\n          }\n\n          ${CommentIcon} {\n            color: #73899e;\n            margin: 0 21px 0 15px;\n            transform: scale(1.4);\n            display: inline-block;\n            ${transition('all', '0.3s')};\n          }\n\n          ${props.isActive &&\n            css`\n              color: #4caf50;\n              box-shadow: inset 0 1px 3px 0 ${transparentize('#000000', 0.08)};\n\n              ${CommentIcon} {\n                color: #4caf50;\n              }\n            `}\n        `\n      : css`\n          width: 34px;\n          height: 34px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          color: #73899e;\n          background: #fff;\n          margin: 6px;\n          padding: 10px;\n          border-radius: 50%;\n          box-shadow: 0 2px 10px 0 ${transparentize('#000000', 0.1)};\n\n          &:hover,\n          &:focus {\n            color: #4caf50;\n            outline: none;\n          }\n\n          ${props.isActive &&\n            css`\n              background: #4caf50;\n              color: #fff;\n\n              &:hover,\n              &:focus {\n                color: #fff;\n                outline: none;\n              }\n            `}\n        `};\n`;\n\ntype ReviewWrapperProps = {\n  isVoiceOver: boolean;\n  isGeneral: boolean;\n  isActive: boolean;\n};\nexport const ReviewWrapper = styled.div<ReviewWrapperProps>`\n  background: ${transparentize('#191919', 0.02)};\n\n  & .active {\n    display: block !important;\n  }\n\n  ${props =>\n    props.isVoiceOver &&\n    css`\n      ${media.small`\n        display: none;\n      `};\n    `}\n\n  ${props =>\n    props.isGeneral\n      ? css`\n          position: fixed;\n          bottom: 8px;\n          right: 24px;\n          z-index: 101;\n\n          max-width: 61px;\n          white-space: nowrap;\n          ${transition('all', '0.3s')};\n\n          ${props.isActive &&\n            css`\n              max-width: 300px;\n\n              ${ToggleButtonText} {\n                opacity: 1;\n              }\n\n              ${ToggleButton} {\n                ${CommentIcon} {\n                  margin: 0 21px 0 24px;\n                  transform: scale(1);\n                }\n              }\n            `}\n\n          &:hover {\n            max-width: 300px;\n\n            ${ToggleButtonText} {\n              opacity: 1;\n            }\n            ${CommentIcon} {\n              color: #73899e;\n              margin: 0 21px 0 24px;\n              transform: scale(1);\n            }\n          }\n        `\n      : css`\n          position: absolute;\n          top: 0;\n          right: -52px;\n          z-index: 10;\n          display: flex;\n          ${media.large`\n            right: -22px;\n          `}\n        `}\n  border-radius: 30px;\n`;\n","import * as React from 'react';\nimport { Tooltip } from 'components/common';\nimport { localize } from 'core/localization';\nimport { Hint } from 'components/common/Hint/Hint';\nimport ReviewForm from '../ReviewForm';\nimport { CommentIcon, ReviewWrapper, ToggleButton, ToggleButtonText } from './ReviewSpot.styled';\nimport { withTheme } from 'styled-components';\n\ntype ReviewSpotProps = {\n  isGeneral: boolean;\n  isVoiceOver: boolean;\n  context: { [key: string]: any };\n  hintName: string;\n  theme?: {[key: string]: any};\n};\n\ntype ReviewSpotState = {\n  isExpanded: boolean;\n}\nexport class ReviewSpot extends React.Component<ReviewSpotProps, ReviewSpotState> {\n  constructor(props: ReviewSpotProps) {\n    super(props);\n\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static defaultProps = {\n    isGeneral: false,\n    isVoiceOver: false\n  };\n\n  toggle = (event: any) => {\n    event.preventDefault();\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  };\n\n  closePopup = () => {\n    this.setState({\n      isExpanded: false\n    });\n  };\n\n  render() {\n    const { isExpanded } = this.state;\n    const { isGeneral, context, hintName, isVoiceOver } = this.props;\n    return (\n      <ReviewWrapper isVoiceOver={isVoiceOver} isGeneral={isGeneral} isActive={isExpanded}>\n        <Hint\n          position={isGeneral ? 'top' : 'auto'}\n          hintElements={\n            isGeneral\n              ? localize('[click to leave a general comment]')\n              : localize('[click to leave a comment]')\n          }\n          hintName={hintName}\n          isExpanded={!!hintName}\n        >\n          <Tooltip\n            trigger={'manual'}\n            open={isExpanded}\n            onRequestClose={() => this.closePopup()}\n            arrow={true}\n            position={'right'}\n            interactive\n            tooltipTheme={'light'}\n            html={\n              <ReviewForm\n                role=\"dialog\"\n                ariaModal={true}\n                tabIndex={-1}\n                isGeneral={isGeneral}\n                context={context}\n                closePopover={this.toggle}\n                theme={this.props.theme}\n              />\n            }\n          >\n            <ToggleButton\n              role=\"button\"\n              tabIndex={1}\n              onClick={this.toggle}\n              onKeyDown={event => {\n                if (event.key === ` ` || event.key === 'Enter') {\n                  this.toggle(event);\n                }\n              }}\n              isActive={isExpanded}\n              isGeneral={isGeneral}\n            >\n              <CommentIcon size={isGeneral ? 9 : 10} name={'comment'} />\n              {isGeneral && (\n                <ToggleButtonText>{localize('[leave general comments]')}</ToggleButtonText>\n              )}\n            </ToggleButton>\n          </Tooltip>\n        </Hint>\n      </ReviewWrapper>\n    );\n  }\n}\n\nexport default withTheme(ReviewSpot);\n","export { default } from './ReviewSpot';\n"],"sourceRoot":""}